(window.webpackJsonp=window.webpackJsonp||[]).push([[79],{700:function(t,s,n){"use strict";n.r(s);var a=n(15),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"for-in语句"}},[n("code",[t._v("for-in")]),t._v("语句")]),t._v(" "),n("p",[n("code",[t._v("for-in")]),t._v("语句是一种精准的迭代语句，可以用来枚举对象的属性。")]),t._v(" "),n("blockquote",[n("p",[t._v("for (property in expression) statement")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" propName "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" window"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("propName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n")])])]),n("p",[n("font",{attrs:{color:"red"}},[n("code",[t._v("ECMAScript")]),t._v("对象的属性没有顺序。通过"),n("code",[t._v("for-in")]),t._v("循环输出的属性名的顺序是不可预测的。")])],1),t._v(" "),n("p",[n("strong",[t._v("具体来讲，所有属性都会被返回一次，但返回的先后次序可能会因浏览器而异。")])])])}),[],!1,null,null,null);s.default=e.exports}}]);