(window.webpackJsonp=window.webpackJsonp||[]).push([[105],{767:function(_,v,t){"use strict";t.r(v);var o=t(14),c=Object(o.a)({},(function(){var _=this,v=_.$createElement,t=_._self._c||v;return t("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[t("h1",{attrs:{id:"直播概述"}},[_._v("直播概述")]),_._v(" "),t("ul",[t("li",[_._v("2020.07.02")])]),_._v(" "),t("h2",{attrs:{id:"直播的分类"}},[_._v("直播的分类")]),_._v(" "),t("p",[_._v("从技术角度讲，映客、斗鱼、虎牙这类泛娱乐直播与在线教育、音视频会议直播有着非常大的区别。")]),_._v(" "),t("p",[_._v("在线教育、音视频会议这类直播属于"),t("code",[_._v("实时互动直播")]),_._v(",主要考虑"),t("code",[_._v("传输的实时性")]),_._v("，因此一般使用"),t("code",[_._v("UDP")]),_._v("作为底层传输协议。")]),_._v(" "),t("p",[_._v("而泛娱乐直播对实时性的要求不高、更多关注的是画面的质量、音视频是否卡顿等问题。所以一般采用"),t("code",[_._v("TCP")]),_._v("作为传输协议。")]),_._v(" "),t("p",[_._v("我们称之前者为"),t("code",[_._v("实时互动直播")]),_._v("，后者为"),t("code",[_._v("传统直播")]),_._v("。")]),_._v(" "),t("h2",{attrs:{id:"传统直播"}},[_._v("传统直播")]),_._v(" "),t("p",[_._v("传统直播技术使用的传输协议是"),t("code",[_._v("RTMP")]),_._v("和"),t("code",[_._v("HLS")]),_._v("。")]),_._v(" "),t("h3",{attrs:{id:"rtmp"}},[_._v("RTMP")]),_._v(" "),t("blockquote",[t("p",[t("code",[_._v("Real Time Messaging Protocol（简称 RTMP）")]),_._v("是 "),t("code",[_._v("Macromedia")]),_._v(" 开发的一套视频直播协议，现在属于 "),t("code",[_._v("Adobe")]),_._v("。这套方案需要搭建专门的 "),t("code",[_._v("RTMP")]),_._v(" 流媒体服务如 "),t("code",[_._v("Adobe Media Server")]),_._v("，并且在浏览器中只能使用 "),t("code",[_._v("Flash")]),_._v(" 实现播放器。它的实时性非常好，延迟很小，但无法支持移动端 WEB 播放是它的硬伤。")])]),_._v(" "),t("p",[_._v("RTMP的传输格式为"),t("code",[_._v("RTMP Chunk Format")]),_._v(",媒体流数据的传输和RTMP控制消息的传输都是基于此格式的。")]),_._v(" "),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"custom-block-title"},[_._v("WARNING")]),_._v(" "),t("p",[_._v("在使用RTMP协议传输数据之前，RTMP也像TCP协议一样,先进行三次握手才能将连接建立起来。")]),_._v(" "),t("p",[_._v("当RTMP连接建立起来之后，可以通过RTMP协议的控制消息为通信的双方设置传输窗口的大小(缓冲区的大小)、传输数据块的大小等。")])]),_._v(" "),t("h3",{attrs:{id:"hls"}},[_._v("HLS")]),_._v(" "),t("blockquote",[t("p",[t("code",[_._v("HLS(HTTP Live Streaming)")]),_._v("是一个基于 "),t("code",[_._v("HTTP")]),_._v(" 的视频流协议，由 "),t("code",[_._v("Apple")]),_._v(" 公司实现，"),t("code",[_._v("Mac OS")]),_._v(" 上的 "),t("code",[_._v("QuickTime")]),_._v("、"),t("code",[_._v("Safari")]),_._v(" 以及 "),t("code",[_._v("iOS")]),_._v(" 上的 "),t("code",[_._v("Safari")]),_._v(" 都能很好的支持 "),t("code",[_._v("HLS")]),_._v("，高版本 "),t("code",[_._v("Android")]),_._v(" 也增加了对 "),t("code",[_._v("HLS")]),_._v(" 的支持。一些常见的客户端如："),t("code",[_._v("MPlayerX")]),_._v("、"),t("code",[_._v("VLC")]),_._v(" 也都支持 "),t("code",[_._v("HLS")]),_._v(" 协议。")])]),_._v(" "),t("p",[t("strong",[_._v("优势:")])]),_._v(" "),t("ul",[t("li",[t("p",[_._v("RTMP协议没有使用标准的HTTP接口传输数据，在一些有访问限制的网络环境下，比如企业网防火墙，是没法访问外网的，因为企业的内部一般只允许80/443端口可以访问外网。而HLS使用的是HTTP传输协议，所以HLS协议天然就解决了这个问题。")])]),_._v(" "),t("li",[t("p",[_._v("HLS协议本身实现了码率自适应，不同带宽的设备可以自动切换到最适合自己的码率的视频进行播放。")])]),_._v(" "),t("li",[t("p",[_._v("浏览器天然支持HLS协议，而RTMP协议需要安装Flash插件才能播放RTMP流。")])])]),_._v(" "),t("p",[t("strong",[_._v("不足:")])]),_._v(" "),t("ul",[t("li",[t("p",[_._v("HLS最主要的问题是"),t("code",[_._v("实时性差")]),_._v("。由于HLS往往采用10s的切片，所以最小也要有10s的延时，一般是20~30s的延迟，有时候甚至更差。")])]),_._v(" "),t("li",[t("p",[_._v("之所以存在这么高的延时，主要是由于HLS的实现机制造成的。HLS采用的是HTTP短链接，而HTTP是基于TCP的，所以这意味着HLS需要不断地与服务器建立连接。TCP每次建立连接时都需要进行三次握手，断开连接的时候需要进行四次挥手，基于以上的这些复杂的原因，就造成了HLS延迟比较久的局面。")])])]),_._v(" "),t("h2",{attrs:{id:"传统直播基本架构"}},[_._v("传统直播基本架构")]),_._v(" "),t("p",[t("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200702134856899.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3hqbDI3MTMxNA==,size_16,color_FFFFFF,t_70",alt:"直播基础架构图"}})]),_._v(" "),t("p",[_._v("从上图可以看出，直播体系由直播客户端、聊天服务器和CDN网络组成。")]),_._v(" "),t("h3",{attrs:{id:"直播客户端"}},[_._v("直播客户端")]),_._v(" "),t("blockquote",[t("p",[_._v("直播客户端主要包括音视频数据的采集、编码、推流、拉流、解码与播放这几个功能。")])]),_._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[_._v("TIP")]),_._v(" "),t("p",[_._v("实际上这几个功能不是放置在一个客户端实现的。")]),_._v(" "),t("p",[_._v("作为主播来说，他不需要看到观众的视频或者听到观众的声音。")]),_._v(" "),t("p",[_._v("作为用户而言，他们与主播的互动是通过直播间内文字或者其他操作进行的。")])]),_._v(" "),t("p",[_._v("对于主播客户端来说，他可以从PC或者移动设备的摄像头、麦克风采集数据，然后对采集到的音视频数据进行编码，最后将编码的音视频数据按照RTMP协议推送给"),t("code",[_._v("CDN")]),_._v("源节点。")]),_._v(" "),t("p",[_._v("对于观众客户端来说，他首先从直播管理系统中获取到房间的流媒体地址，然后通过"),t("code",[_._v("RTMP")]),_._v("协议从边缘节点拉取音视频数据，并对获取到的音视频数据进行编码，最后进行视频的渲染与音频的播放。")]),_._v(" "),t("h3",{attrs:{id:"聊天服务器"}},[_._v("聊天服务器")]),_._v(" "),t("p",[_._v("主要用于接口信令，并根据信令处理一些和业务相关的逻辑，如创建房间、加入房间、离开房间、送礼物、文字聊天等。")]),_._v(" "),t("h3",{attrs:{id:"cdn网络"}},[_._v("CDN网络")]),_._v(" "),t("p",[_._v("主要用于媒体数据的分发。它内部的实现非常复杂，大概的解释就是传给他的媒体数据可以很快传送给世界每一个角落。")]),_._v(" "),t("h2",{attrs:{id:"主播的视频生成及推流"}},[_._v("主播的视频生成及推流")]),_._v(" "),t("p",[_._v('主播在客户端分享自己的音视频媒体流之前，首先要向聊天服务器发送"创建房间"的命令，服务器收到该命令之后给主播返回一个推流地址(CDN网络源站地址)；此时主播客户端就可以通过音频设备进行音视频数据的采集和编码，生成RTMP消息，最终将媒体流推送给CDN网络。')]),_._v(" "),t("h2",{attrs:{id:"用户的视频生成"}},[_._v("用户的视频生成")]),_._v(" "),t("p",[_._v("当用户观看某个直播视频的时候，首先也像服务器发送请求，然后返回与之对应的CDN边缘节点，收到直播的地址后就可以从该地址拉取媒体流了。")]),_._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[_._v("TIP")]),_._v(" "),t("p",[_._v("在传统直播系统中,一般推流都使用"),t("code",[_._v("RTMP")]),_._v("协议，而拉流可以选择"),t("code",[_._v("RTMP")]),_._v("或者"),t("code",[_._v("HLS")]),_._v("协议。")])]),_._v(" "),t("h2",{attrs:{id:"cdn网络的实现"}},[_._v("CDN网络的实现")]),_._v(" "),t("blockquote",[t("p",[_._v("CDN网络的构造十分复杂(大致如下图)，一般情况下，它先在各运营商内构件云服务，然后将不同运营商的云服务通过光纤连接起来，从而实现跨运营商的全网CDN云服务。")])]),_._v(" "),t("p",[t("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200702174905250.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3hqbDI3MTMxNA==,size_16,color_FFFFFF,t_70",alt:"CDN网络的实现"}})]),_._v(" "),t("p",[_._v("每个运营商云服务内部包含了多个节点,按照功能分为3类:")]),_._v(" "),t("ol",[t("li",[t("p",[_._v("源节点: 用于接收用户推送的媒体流。")])]),_._v(" "),t("li",[t("p",[_._v("主干节点: 起到媒体数据快速传输的作用，比如与其他运营商传送媒体流。")])]),_._v(" "),t("li",[t("p",[_._v("边缘节点: 用于用户主动推流。一般边缘节点的数量众多，它会被部署到各地级市，主要解决网络最后一公里的问题。")])])]),_._v(" "),t("h2",{attrs:{id:"cdn网络的处理流程"}},[_._v("CDN网络的处理流程")]),_._v(" "),t("p",[_._v("当一个主播想将自己的音视频共享出去的时候，首先通过直播系统的信令服务器获取到可以推送媒体流的CDN源节点。CDN网络从源节点接收到媒体数据之后，会主动向各个主干节点传送流媒体数据，这样各个主干节点就会将媒体数据缓存起来了。当然这个缓冲区的大小是有限的，随着时间的流逝，缓冲区中的数据也在不断更替中。")]),_._v(" "),t("p",[_._v("当有用户想看某个直播节目时，会从直播系统的服务器中获取离自己最近的CDN边缘节点，然后到这个边缘节点去拉流。由于它是第一个在该节点拉流的用户，因此该CDN节点还没有用户想要的媒体流。")]),_._v(" "),t("p",[_._v("怎么办呢？这时候就要向主干节点发送请求。主干节点收到请求后，从自己的缓冲区中取出数据流源源不断的发送给边缘节点，这时边缘节点再将媒体数据发送给观众。")]),_._v(" "),t("p",[_._v("当第二个用户再次到改CDN边缘节点接流时，该节点发现该流已经在自己的缓存里了，就不在向主干节点请求，直接将媒体流下发下去了。因此，观众在使用CDN网络时会发现，第一个观众在接流时需要花很长的时间才能将流拉下来，可是后来的用户很快就会将流拉下来进行播放了。")])])}),[],!1,null,null,null);v.default=c.exports}}]);