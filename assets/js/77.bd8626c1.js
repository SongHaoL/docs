(window.webpackJsonp=window.webpackJsonp||[]).push([[77],{733:function(v,_,e){"use strict";e.r(_);var t=e(14),o=Object(t.a)({},(function(){var v=this,_=v.$createElement,e=v._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("h1",{attrs:{id:"regexp正则表达式"}},[v._v("RegExp正则表达式")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("g")]),v._v(": 表示全局(global)模式，即模式将被应用于所有字符串，而非在发现第一个匹配项时立即停止。")]),v._v(" "),e("li",[e("code",[v._v("i")]),v._v(":表示不区分大小写(case-insensitive)模式，即在确定匹配项时忽略模式与字符串的大小写;")]),v._v(" "),e("li",[e("code",[v._v("m")]),v._v(":表示多行(multiline)模式，即在到达一行文本末尾时还会继续查找下一行中是否存在与模式匹配的项。")])]),v._v(" "),e("h2",{attrs:{id:"常用正则表达式字符含义"}},[v._v("常用正则表达式字符含义")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("\\")]),v._v(' : 在非特殊字符之前的反斜杠表示下一个字符是特殊字符，不能按照字面理解。例如，前面没有 "" 的 "b" 通常匹配小写字母 "b"，即字符会被作为字面理解，无论它出现在哪里。但如果前面加了 ""，它将不再匹配任何字符，而是表示一个字符边界。在特殊字符之前的反斜杠表示下一个字符不是特殊字符，应该按照字面理解。')]),v._v(" "),e("li",[e("code",[v._v("^")]),v._v(": 匹配输入的开始。如果多行标志被设置为 "),e("code",[v._v("true")]),v._v("，那么也匹配换行符后紧跟的位置。\n"),e("blockquote",[e("p",[v._v("例如，/^A/ 并不会匹配 \"an A\" 中的 'A'，但是会匹配 \"An E\" 中的 'A'。")])])]),v._v(" "),e("li",[e("code",[v._v("$")]),v._v(": 匹配输入的结束。如果多行标示被设置为 true，那么也匹配换行符前的位置。\n"),e("blockquote",[e("p",[v._v("例如，/t$/ 并不会匹配 \"eater\" 中的 't'，但是会匹配 \"eat\" 中的 't'。")])])]),v._v(" "),e("li",[e("code",[v._v("*")]),v._v(": 匹配前一个表达式 0 次或多次。等价于 "),e("code",[v._v("{0,}")]),v._v("。\n"),e("blockquote",[e("p",[v._v('例如，/bo*/ 会匹配 "A ghost boooooed" 中的 \'booooo\' 和 "A bird warbled" 中的 \'b\'，但是在 "A goat grunted" 中不会匹配任何内容。')])])]),v._v(" "),e("li",[e("code",[v._v("+")]),v._v(": 匹配前面一个表达式 1 次或者多次。等价于 "),e("code",[v._v("{1,}")]),v._v("。\n"),e("blockquote",[e("p",[v._v('例如，/a+/ 会匹配 "candy" 中的 \'a\' 和 "caaaaaaandy" 中所有的 \'a\'，但是在 "cndy" 中不会匹配任何内容。')])])]),v._v(" "),e("li",[e("code",[v._v("?")]),v._v(": 匹配前面一个表达式 0 次或者 1 次。等价于 "),e("code",[v._v("{0,1}")]),v._v("。\n"),e("blockquote",[e("p",[v._v("例如，/e?le?/ 匹配 \"angel\" 中的 'el'、\"angle\" 中的 'le' 以及 \"oslo' 中的 'l'。")])])])]),v._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[v._v("TIP")]),v._v(" "),e("p",[v._v("如果紧跟在任何量词 "),e("code",[v._v("*")]),v._v("、"),e("code",[v._v("+")]),v._v("、"),e("code",[v._v("?")]),v._v(" 或 "),e("code",[v._v("{}")]),v._v(" 的后面，将会使量词变为"),e("code",[v._v("非贪婪（匹配尽量少的字符）")]),v._v(",和"),e("code",[v._v("缺省使用的贪婪模式（匹配尽可能多的字符）")]),v._v("正好相反。")]),v._v(" "),e("p",[v._v('例如，对 "123abc" 使用 '),e("code",[v._v("/\\d+/")]),v._v(' 将会匹配 "123"，而使用 '),e("code",[v._v("/\\d+?/")]),v._v(' 则只会匹配到 "1"。')])]),v._v(" "),e("ul",[e("li",[e("p",[e("code",[v._v(".")]),v._v(": （小数点）默认匹配除换行符之外的任何单个字符。")]),v._v(" "),e("blockquote",[e("p",[v._v("例如，/.n/ 将会匹配 \"nay, an apple is on the tree\" 中的 'an' 和 'on'，但是不会匹配 'nay'。如果 s (\"dotAll\") 标志位被设为 true，它也会匹配换行符。")])])]),v._v(" "),e("li",[e("p",[e("code",[v._v("(x)")]),v._v(": 像下面的例子展示的那样，它会匹配 'x' 并且记住匹配项。其中括号被称为"),e("code",[v._v("捕获括号")]),v._v("。")]),v._v(" "),e("blockquote",[e("p",[v._v("模式"),e("code",[v._v("/(foo) (bar) \\1 \\2/ 中的 '(foo)' 和 '(bar)'")]),v._v("匹配并记住字符串 "),e("code",[v._v('"foo bar foo bar"')]),v._v("中前两个单词。\n模式中的 \\1 和 \\2 表示第一个和第二个被捕获括号匹配的子字符串，即 foo 和 bar，匹配了原字符串中的后两个单词。\n注意 "),e("code",[v._v("\\1、\\2、...、\\n")]),v._v("是用在正则表达式的匹配环节。\n而在正则表达式的替换环节，则要使用像 "),e("code",[v._v("$1")]),v._v("、"),e("code",[v._v("$2")]),v._v("、"),e("code",[v._v("...")]),v._v("、"),e("code",[v._v("$n")]),v._v(" 这样的语法，\n例如，"),e("code",[v._v("'bar foo'.replace(/(...) (...)/, '$2 $1')")]),v._v("。"),e("code",[v._v("$&")]),v._v(" 表示整个用于匹配的原字符串。")])])]),v._v(" "),e("li",[e("p",[e("code",[v._v("x(?=y)")]),v._v(": 匹配'x'仅仅当'x'后面跟着'y'.这种叫做"),e("code",[v._v("先行断言")]),v._v("。")]),v._v(" "),e("blockquote",[e("p",[v._v("例如，/Jack(?=Sprat)/会匹配到'Jack'仅仅当它后面跟着'Sprat'。\n/Jack(?=Sprat|Frost)/匹配‘Jack’仅仅当它后面跟着'Sprat'或者是‘Frost’。但是‘Sprat’和‘Frost’都不是匹配结果的一部分。")])])]),v._v(" "),e("li",[e("p",[e("code",[v._v("(?<=y)x")]),v._v(": 匹配'x'仅仅当'x'前面是'y'.这种叫做"),e("code",[v._v("后行断言")]),v._v("。")]),v._v(" "),e("blockquote",[e("p",[v._v("例如，/(?<=Jack)Sprat/会匹配到' Sprat '仅仅当它前面是' Jack '。/(?<=Jack|Tom)Sprat/匹配‘ Sprat ’仅仅当它前面是'Jack'或者是‘Tom’。但是‘Jack’和‘Tom’都不是匹配结果的一部分。")])])]),v._v(" "),e("li",[e("p",[e("code",[v._v("x(?!y)")]),v._v(": 仅仅当'x'后面不跟着'y'时匹配'x'，这被称为"),e("code",[v._v("正向否定查找")]),v._v("。")]),v._v(" "),e("blockquote",[e("p",[v._v('例如，仅仅当这个数字后面没有跟小数点的时候，/\\d+(?!.)/ 匹配一个数字。正则表达式/\\d+(?!.)/.exec("3.141")匹配‘141’而不是‘3.141’')])])]),v._v(" "),e("li",[e("p",[e("code",[v._v("(?<!y)x")]),v._v(": 仅仅当'x'前面不是'y'时匹配'x'，这被称为"),e("code",[v._v("反向否定查找")]),v._v("。")]),v._v(" "),e("blockquote",[e("p",[v._v("例如, 仅仅当这个数字前面没有负号的时候，/(?<!-)\\d+/ 匹配一个数字。/(?<!-)\\d+/.exec('3') 匹配到 \"3\"./(?<!-)\\d+/.exec('-3') 因为这个数字前有负号，所以没有匹配到。")])])]),v._v(" "),e("li",[e("p",[e("code",[v._v("x|y")]),v._v(": 匹配‘x’或者‘y’。")]),v._v(" "),e("blockquote",[e("p",[v._v("例如，"),e("code",[v._v("/green|red/")]),v._v("匹配"),e("code",[v._v("“green apple”")]),v._v("中的"),e("code",[v._v("‘green’")]),v._v("和"),e("code",[v._v("“red apple”")]),v._v("中的"),e("code",[v._v("‘red’")])])])]),v._v(" "),e("li",[e("p",[e("code",[v._v("{n}")]),v._v(":n 是一个正整数，匹配了前面一个字符刚好出现了 n 次。")]),v._v(" "),e("blockquote",[e("p",[v._v("比如， /a{2}/ 不会匹配“candy”中的'a',但是会匹配“caandy”中所有的 a，以及“caaandy”中的前两个'a'。")])])]),v._v(" "),e("li",[e("p",[e("code",[v._v("{n,}")]),v._v(":\tn是一个正整数，匹配前一个字符至少出现了n次。")]),v._v(" "),e("blockquote",[e("p",[v._v('例如, /a{2,}/ 匹配 "aa", "aaaa" 和 "aaaaa" 但是不匹配 "a"。')])])]),v._v(" "),e("li",[e("p",[e("code",[v._v("{n,m}")]),v._v(": n 和 m 都是整数。匹配前面的字符至少n次，最多m次。如果 n 或者 m 的值是0， 这个值被忽略。")]),v._v(" "),e("blockquote",[e("p",[v._v("例如，/a{1, 3}/ 并不匹配“cndy”中的任意字符，匹配“candy”中的a，匹配“caandy”中的前两个a，也匹配“caaaaaaandy”中的前三个a。注意，当匹配”caaaaaaandy“时，匹配的值是“aaa”，即使原始的字符串中有更多的a。")])])]),v._v(" "),e("li",[e("p",[e("code",[v._v("\\d")]),v._v(": 匹配一个数字。等价于[0-9]。")]),v._v(" "),e("blockquote",[e("p",[v._v("例如， /\\d/ 或者 /[0-9]/ 匹配\"B2 is the suite number.\"中的'2'。")])])]),v._v(" "),e("li",[e("p",[e("code",[v._v("\\D")]),v._v(": 匹配一个非数字字符。等价于[^0-9]。")]),v._v(" "),e("blockquote",[e("p",[v._v("例如， /\\D/ 或者 /[^0-9]/ 匹配\"B2 is the suite number.\"中的'B' 。")])])]),v._v(" "),e("li",[e("p",[e("code",[v._v("\\n")]),v._v(": 匹配一个换行符 (U+000A)。")])]),v._v(" "),e("li",[e("p",[e("code",[v._v("\\f")]),v._v(" : 匹配一个换页符 (U+000C)。")])]),v._v(" "),e("li",[e("p",[e("code",[v._v("\\r")]),v._v(": 匹配一个回车符 (U+000D)。")])]),v._v(" "),e("li",[e("p",[e("code",[v._v("\\s")]),v._v(": 匹配一个空白字符，包括空格、制表符、换页符和换行符。")]),v._v(" "),e("blockquote",[e("p",[v._v("例如, /\\s\\w*/ 匹配\"foo bar.\"中的' bar'。")])])]),v._v(" "),e("li",[e("p",[e("code",[v._v("\\S")]),v._v(": \t匹配一个非空白字符。")]),v._v(" "),e("blockquote",[e("p",[v._v("例如，/\\S\\w*/ 匹配\"foo bar.\"中的'foo'。")])])]),v._v(" "),e("li",[e("p",[e("code",[v._v("\\t")]),v._v(": 匹配一个水平制表符 (U+0009)。")])]),v._v(" "),e("li",[e("p",[e("code",[v._v("\\v")]),v._v(": 匹配一个垂直制表符 (U+000B)。")])]),v._v(" "),e("li",[e("p",[e("code",[v._v("\\w")]),v._v(": \t匹配一个单字字符（字母、数字或者下划线）。等价于"),e("code",[v._v("[A-Za-z0-9_]")]),v._v("。")]),v._v(" "),e("blockquote",[e("p",[v._v("例如, /\\w/ 匹配 \"apple,\" 中的 'a'，\"$5.28,\"中的 '5' 和 \"3D.\" 中的 '3'。")])])]),v._v(" "),e("li",[e("p",[e("code",[v._v("\\W")]),v._v(": 匹配一个非单字字符。等价于 "),e("code",[v._v("[^A-Za-z0-9_]")]),v._v("。")]),v._v(" "),e("blockquote",[e("p",[v._v("例如, /\\W/ 或者 /[^A-Za-z0-9_]/ 匹配 \"50%.\" 中的 '%'。")])])])]),v._v(" "),e("h2",{attrs:{id:"常用方法与描述"}},[v._v("常用方法与描述")]),v._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"center"}},[v._v("方法")]),v._v(" "),e("th",{staticStyle:{"text-align":"left"}},[v._v("描述")])])]),v._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("code",[v._v("exec")])]),v._v(" "),e("td",{staticStyle:{"text-align":"left"}},[v._v("一个在字符串中执行查找匹配的"),e("code",[v._v("RegExp")]),v._v("方法，它返回一个数组（未匹配到则返回"),e("code",[v._v("null")]),v._v("）。")])]),v._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("code",[v._v("test")])]),v._v(" "),e("td",{staticStyle:{"text-align":"left"}},[v._v("一个在字符串中测试是否匹配的"),e("code",[v._v("RegExp")]),v._v("方法，它返回 "),e("code",[v._v("true")]),v._v("或 "),e("code",[v._v("false")]),v._v("。")])]),v._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("code",[v._v("match")])]),v._v(" "),e("td",{staticStyle:{"text-align":"left"}},[v._v("一个在字符串中执行查找匹配的"),e("code",[v._v("String")]),v._v("方法，它返回一个数组，在未匹配到时会返回 "),e("code",[v._v("null")]),v._v("。")])]),v._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("code",[v._v("matchAll")])]),v._v(" "),e("td",{staticStyle:{"text-align":"left"}},[v._v("一个在字符串中执行查找所有匹配的"),e("code",[v._v("String")]),v._v("方法，它返回一个迭代器（"),e("code",[v._v("iterator")]),v._v("）。")])]),v._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("code",[v._v("search")])]),v._v(" "),e("td",{staticStyle:{"text-align":"left"}},[v._v("一个在字符串中测试匹配的"),e("code",[v._v("String")]),v._v("方法，它返回匹配到的位置索引，或者在失败时返回-1。")])]),v._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("code",[v._v("replace")])]),v._v(" "),e("td",{staticStyle:{"text-align":"left"}},[v._v("一个在字符串中执行查找匹配的"),e("code",[v._v("String")]),v._v("方法，并且使用替换字符串替换掉匹配到的子字符串。")])]),v._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("code",[v._v("split")])]),v._v(" "),e("td",{staticStyle:{"text-align":"left"}},[v._v("一个使用正则表达式或者一个固定字符串分隔一个字符串，并将分隔后的子字符串存储到数组中的"),e("code",[v._v("String")]),v._v(" 方法。")])])])])])}),[],!1,null,null,null);_.default=o.exports}}]);