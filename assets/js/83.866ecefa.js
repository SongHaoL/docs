(window.webpackJsonp=window.webpackJsonp||[]).push([[83],{705:function(t,s,e){"use strict";e.r(s);var n=e(15),a=Object(n.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"settimeout、setimmediate、process-nexttick"}},[t._v("setTimeout、setImmediate、Process.nextTick")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("setTimeount(IO观察者)")])]),t._v(" "),e("li",[e("p",[t._v("setImmediate(check观察者)")])]),t._v(" "),e("li",[e("p",[t._v("Process.nextTick(idle观察者)")])])]),t._v(" "),e("h2",{attrs:{id:"优先级"}},[t._v("优先级")]),t._v(" "),e("p",[t._v("Process.nextTick > setTimeount > setImmediate")]),t._v(" "),e("h2",{attrs:{id:"为什么说settimeout有个最小4ms的延迟"}},[t._v("为什么说setTimeout有个最小4ms的延迟?")]),t._v(" "),e("ul",[e("li",[t._v("2021.02.20")])]),t._v(" "),e("p",[t._v("我们先来看一下"),e("code",[t._v("html standard")]),t._v("10-13描述中的定义:")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.")]),t._v(" If timeout is less than "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" then "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" timeout to "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("11.")]),t._v(" If nesting level is greater than "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" and timeout is less than "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" then "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" timeout to "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("12.")]),t._v(" Increment nesting level by one"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("13.")]),t._v(" Let task's timer nesting level be nesting level"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n")])])]),e("p",[e("strong",[t._v("从上面的规范可以看出来")]),t._v("：")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("如果设置的 timeout 小于 0，则设置为 0。")])]),t._v(" "),e("li",[e("p",[t._v("如果嵌套的层级超过了 5 层，并且 timeout 小于 4ms，则设置 timeout 为 4ms。")])])]),t._v(" "),e("p",[e("strong",[t._v("看似我们已经找到了问题的原因，但是各大浏览器的厂商实际上并没有按照标准的规范进行设定")]),t._v("。")]),t._v(" "),e("p",[t._v("在这里我们只展示 chromium 的 source code，其他 webkit 或 Firefox 自行下载查看，在 chromium 的 blink 目录下，有一个 叫做 DOMTimer.cpp 的文件，online 地址，这里也是用来设置计时器延时的地方：")]),t._v(" "),e("div",{staticClass:"language-c extra-class"},[e("pre",{pre:!0,attrs:{class:"language-c"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" maxIntervalForUserGestureForwarding "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// One second matches Gecko.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" maxTimerNestingLevel "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" oneMillisecond "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.001")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Chromium uses a minimum timer interval of 4ms. We'd like to go")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// lower; however, there are poorly coded websites out there which do")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// create CPU-spinning loops.  Using 4ms prevents the CPU from")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// spinning too busily and provides a balance between CPU spinning and")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// the smallest possible interval timer.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" minimumInterval "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.004")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" intervalMilliseconds "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("max")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("oneMillisecond"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" interval "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" oneMillisecond"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("intervalMilliseconds "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" minimumInterval "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" m_nestingLevel "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" maxTimerNestingLevel"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    intervalMilliseconds "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" minimumInterval"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("代码逻辑很清晰，设置了三个常量：")]),t._v(" "),e("ul",[e("li",[e("p",[e("code",[t._v("maxTimerNestingLevel = 5")]),t._v("。也就是 HTML standard 当中提到的嵌套层级。")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("minimumInterval = 0.004")]),t._v("。也就是 HTML standard 当中说的最小延迟。")])])]),t._v(" "),e("p",[t._v("在第二段代码中我们会看到，首先会在 延迟时间 和 1ms 之间取一个最大值。换句话说，在不满足嵌套层级的情况下，最小延迟时间设置为 1ms。")]),t._v(" "),e("p",[t._v("在 chromium 的注释中，解释了为什么要设置 minimumInterval = 4ms。简单来讲，本身 chromium 团队想要设置更低的延迟时间（其实他们期望达到亚毫秒级别），但是由于某些网站（比如纽约时报的网站）对 setTimeout 这种计时器不良的使用，设置延迟过低会导致 CPU-spinning（在后面，我们再解释什么是 CPU-spinning），因此 chromium 做了些 benchmark 测试，选定了 4ms 作为其 minimumInterval。")]),t._v(" "),e("p",[e("strong",[t._v("到这里为止，从浏览器厂商角度和 HTML standard 规范角度都解释了 4ms 的来源和其更加精确的定义,但是究竟是 HTML standard 先做出的设定，还是 Chromium 这种浏览器厂商先做出的设定。了解先后顺序的意义在于了解其背后历史，规范和厂商是如何相互促进与制衡的")]),t._v("。")]),t._v(" "),e("p",[t._v("这里补充一下操作系统层面的知识:")]),t._v(" "),e("p",[t._v("在windows下默认情况的 "),e("code",[t._v("timer resolution")]),t._v(" 是 "),e("code",[t._v("10-15.6ms")]),t._v(",也就是最初的浏览器timer是依赖于操作系统层面的timer resolution的。换句话说,早期的setTimeout最小的延时至少会是 "),e("code",[t._v("10ms")]),t._v("。但从CPU的性能来讲,现在的CPU每秒计算可以达到4GHZ以上,而windows的默认timer并没有变化。")]),t._v(" "),e("p",[t._v("浏览器厂商认为默认计时器影响了网页的表达,如果clock tick很长，意味着浏览器会休眠很长的实际,从某一方面导致浏览器性能的下降。Chrome本身追求的是亚毫秒级(小于1ms),因此chrome团队希望可以改变浏览器对于操作系统timer的依赖,在windows和linux下采取了不同的方案来达到目的。最后chrome团队采用了和Flash和 Quicktime统一的 API 来代替系统默认的 timer resolution。")]),t._v(" "),e("p",[t._v("4ms的出现是后来市场反馈1ms的timer导致 CPU Spining等原因，从1ms提升到4ms之后大部分机器上都不再产生此现象。以致在后续的浏览器厂商的采用了4ms的设定。随后"),e("code",[t._v("HTML standard")]),t._v("才进行了相关规范的设定。")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("p",[e("strong",[t._v("总结")])]),t._v(" "),e("p",[t._v("不同浏览器的最低时延会不一致，比如 chrome 的最低时延是 1ms。而如果 timer 嵌套层级很多，那么最低时延是 4ms。具体嵌套层级的阈值不同浏览器也不一致，HTML Standard 当中是 >5，chrome 当中是 >=5。")])])])}),[],!1,null,null,null);s.default=a.exports}}]);