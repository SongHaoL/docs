(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{702:function(v,_,t){"use strict";t.r(_);var e=t(14),a=Object(e.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h1",{attrs:{id:"css面试相关知识点"}},[v._v("CSS面试相关知识点")]),v._v(" "),t("h2",{attrs:{id:"简单介绍使用图片-base64-编码的优点和缺点"}},[v._v("简单介绍使用图片 base64 编码的优点和缺点?")]),v._v(" "),t("ul",[t("li",[v._v("2020.05.20")])]),v._v(" "),t("blockquote",[t("p",[v._v("base64编码是一种图片处理格式，通过特定的算法将图片编码成一长串字符串，在页面上显示的时候，可以用该字符串来代替图片的\nurl属性。")])]),v._v(" "),t("p",[t("strong",[v._v("使用base64的优点是：")])]),v._v(" "),t("ul",[t("li",[v._v("减少一个图片的HTTP请求")])]),v._v(" "),t("p",[t("strong",[v._v("使用base64的缺点是：")])]),v._v(" "),t("ol",[t("li",[t("p",[v._v("根据base64的编码原理，编码后的大小会比原文件大小大1/3，如果把大图片编码到html/css中，不仅会造成文件体\n积的增加，影响文件的加载速度，还会增加浏览器对html或css文件解析渲染的时间。")])]),v._v(" "),t("li",[t("p",[v._v("使用base64无法直接缓存，要缓存只能缓存包含base64的文件，比如HTML或者CSS，这相比域直接缓存图片的效果要\n差很多。")])]),v._v(" "),t("li",[t("p",[v._v("兼容性的问题，ie8以前的浏览器不支持。")])])]),v._v(" "),t("p",[v._v("一般一些网站的小图标可以使用base64图片来引入。")]),v._v(" "),t("h2",{attrs:{id:"margin-重叠问题的理解"}},[v._v("margin 重叠问题的理解?")]),v._v(" "),t("ul",[t("li",[v._v("2020.05.20")])]),v._v(" "),t("blockquote",[t("p",[v._v("块级元素的上外边距"),t("code",[v._v("（margin-top）")]),v._v("与下外边距"),t("code",[v._v("（margin-bottom）")]),v._v("有时会合并为单个外边距，这样的现象称为"),t("code",[v._v("“margin合并”")]),v._v("。")])]),v._v(" "),t("p",[v._v("产生折叠的必备条件："),t("code",[v._v("margin")]),v._v("必须是邻接的!")]),v._v(" "),t("p",[t("strong",[v._v("根据w3c规范，两个margin是邻接的必须满足以下条件：")])]),v._v(" "),t("ul",[t("li",[v._v("必须是处于常规文档流（非float和绝对定位）的块级盒子，并且处于同一个BFC当中。")]),v._v(" "),t("li",[v._v("没有线盒，没有空隙，没有"),t("code",[v._v("padding")]),v._v("和"),t("code",[v._v("border")]),v._v("将他们分隔开")]),v._v(" "),t("li",[v._v("都属于垂直方向上相邻的外边距，可以是下面任意一种情况")]),v._v(" "),t("li",[v._v("元素的margin-top与其第一个常规文档流的子元素的margin-top")]),v._v(" "),t("li",[v._v("元素的margin-bottom与其下一个常规文档流的兄弟元素的margin-top")]),v._v(" "),t("li",[v._v("height为auto的元素的margin-bottom与其最后一个常规文档流的子元素的margin-bottom")]),v._v(" "),t("li",[v._v("高度为0并且最小高度也为0，不包含常规文档流的子元素，并且自身没有建立新的BFC的元素的margin-top和margin-bottom")])]),v._v(" "),t("h3",{attrs:{id:"margin合并的3种场景："}},[v._v("margin合并的3种场景：")]),v._v(" "),t("h4",{attrs:{id:"_1-相邻兄弟元素margin合并。"}},[v._v("1. 相邻兄弟元素margin合并。")]),v._v(" "),t("p",[v._v("解决方案: 设置块状格式化上下文元素（BFC）")]),v._v(" "),t("h4",{attrs:{id:"_2-父级和第一个-最后一个子元素的margin合并。"}},[v._v("2. 父级和第一个/最后一个子元素的margin合并。")]),v._v(" "),t("p",[t("strong",[v._v("对于margin-top合并，可以进行如下操作（满足一个条件即可）：")])]),v._v(" "),t("ul",[t("li",[v._v("父元素设置为块状格式化上下文元素；")]),v._v(" "),t("li",[v._v("父元素设置border-top值；")]),v._v(" "),t("li",[v._v("父元素设置padding-top值；")]),v._v(" "),t("li",[v._v("父元素和第一个子元素之间添加内联元素进行分隔。")])]),v._v(" "),t("p",[t("strong",[v._v("对于margin-bottom合并，可以进行如下操作（满足一个条件即可）：")])]),v._v(" "),t("ul",[t("li",[v._v("父元素设置为块状格式化上下文元素；")]),v._v(" "),t("li",[v._v("父元素设置border-bottom值；")]),v._v(" "),t("li",[v._v("父元素设置padding-bottom值；")]),v._v(" "),t("li",[v._v("父元素和最后一个子元素之间添加内联元素进行分隔；")]),v._v(" "),t("li",[v._v("父元素设置height、min-height或max-height。")])]),v._v(" "),t("h4",{attrs:{id:"_3-空块级元素的margin合并。"}},[v._v("3. 空块级元素的margin合并。")]),v._v(" "),t("ul",[t("li",[v._v("设置垂直方向的border；")]),v._v(" "),t("li",[v._v("设置垂直方向的padding；")]),v._v(" "),t("li",[v._v("里面添加内联元素（直接Space键空格是没用的）；")]),v._v(" "),t("li",[v._v("设置height或者min-height。")])]),v._v(" "),t("h2",{attrs:{id:"bfc-块级格式化上下文"}},[v._v("BFC(块级格式化上下文)")]),v._v(" "),t("ul",[t("li",[v._v("2020.05.20")])]),v._v(" "),t("blockquote",[t("p",[t("code",[v._v("BFC")]),v._v("是一个独立的渲染区域，只有"),t("code",[v._v("Block-level box")]),v._v("参与， 它规定了内部的"),t("code",[v._v("Block-level Box")]),v._v("如何布局，并且与这个区域外部毫不相干。"),t("code",[v._v("BFC")]),v._v(" 就好像一个结界，结界里面的东西不能影响外面的布局，也就是说，BFC的子元素再翻江倒海，都不会影响外面的元素。 所以：")])]),v._v(" "),t("ul",[t("li",[v._v("BFC本身不会发生"),t("code",[v._v("margin")]),v._v("重叠。")]),v._v(" "),t("li",[v._v("BFC可以彻底解决子元素浮动带来的的高度坍塌和文字环绕问题。")])]),v._v(" "),t("h3",{attrs:{id:"bfc的创建方法"}},[v._v("BFC的创建方法")]),v._v(" "),t("ol",[t("li",[v._v("根元素；")]),v._v(" "),t("li",[v._v("浮动元素 (float不为none的元素)；")]),v._v(" "),t("li",[v._v("绝对定位元素 (元素的position为absolute或fixed)；")]),v._v(" "),t("li",[v._v("inline-blocks(元素的 display: inline-block)；")]),v._v(" "),t("li",[v._v("表格单元格(元素的display: table-cell，HTML表格单元格默认属性)；")]),v._v(" "),t("li",[v._v("overflow的值不为visible的元素；")]),v._v(" "),t("li",[v._v("弹性盒 flex boxes (元素的display: flex或inline-flex)；")])]),v._v(" "),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"custom-block-title"},[v._v("WARNING")]),v._v(" "),t("p",[v._v("BFC包含创建该上下文元素的所有子元素，但不包括创建了新BFC的子元素的内部元素。")])]),v._v(" "),t("h2",{attrs:{id:"css-优化、提高性能的方法有哪些？"}},[v._v("CSS 优化、提高性能的方法有哪些？")]),v._v(" "),t("ul",[t("li",[v._v("2020.05.20")])]),v._v(" "),t("h3",{attrs:{id:"加载性能："}},[v._v("加载性能：")]),v._v(" "),t("ol",[t("li",[t("p",[t("code",[v._v("css压缩")]),v._v("：将写好的css进行打包压缩，可以减少很多的体积。")])]),v._v(" "),t("li",[t("p",[t("code",[v._v("css单一样式")]),v._v("：当需要下边距和左边距的时候，很多时候选择:"),t("code",[v._v("margin:top0 bottom0;")]),v._v("但"),t("code",[v._v("margin-bottom:bottom;margin-left:left;")]),v._v("执行的效率更高。")])]),v._v(" "),t("li",[t("p",[t("code",[v._v("减少使用@import")]),v._v(",而建议使用link，因为后者在页面加载时一起加载，前者是等待页面加载完成之后再进行加载。")])])]),v._v(" "),t("h3",{attrs:{id:"选择器性能："}},[v._v("选择器性能：")]),v._v(" "),t("ol",[t("li",[t("p",[t("code",[v._v("关键选择器（keyselector）")]),v._v("。选择器的最后面的部分为关键选择器（即用来匹配目标元素的部分）。CSS选择符是从右到\n左进行匹配的。当使用后代选择器的时候，浏览器会遍历所有子元素来确定是否是指定的元素等等；")])]),v._v(" "),t("li",[t("p",[v._v("如果规则拥有ID选择器作为其关键选择器，则不要为规则增加标签。过滤掉无关的规则（这样样式系统就不会浪费时间去匹\n配它们了）。")])]),v._v(" "),t("li",[t("p",[v._v("避免使用通配规则，如*{}计算次数惊人！只对需要用到的元素进行选择。")])]),v._v(" "),t("li",[t("p",[v._v("尽量少的去对标签进行选择，而是用class。")])]),v._v(" "),t("li",[t("p",[v._v("尽量少的去使用后代选择器，降低选择器的权重值。后代选择器的开销是最高的，尽量将选择器的深度降到最低，最高不要超过\n三层，更多的使用类来关联每一个标签元素。")])]),v._v(" "),t("li",[t("p",[v._v("了解哪些属性是可以通过继承而来的，然后避免对这些属性重复指定规则。")])])]),v._v(" "),t("h3",{attrs:{id:"渲染性能："}},[v._v("渲染性能：")]),v._v(" "),t("ol",[t("li",[t("p",[v._v("慎重使用高性能属性：浮动、定位。")])]),v._v(" "),t("li",[t("p",[v._v("尽量减少页面重排、重绘。")])]),v._v(" "),t("li",[t("p",[v._v("去除空规则：｛｝。空规则的产生原因一般来说是为了预留样式。去除这些空规则无疑能减少css文档体积。")])]),v._v(" "),t("li",[t("p",[v._v("属性值为0时，不加单位。")])]),v._v(" "),t("li",[t("p",[v._v("属性值为浮动小数0.**，可以省略小数点之前的0。")])]),v._v(" "),t("li",[t("p",[v._v("标准化各种浏览器前缀：带浏览器前缀的在前。标准属性在后。")])]),v._v(" "),t("li",[t("p",[v._v("不使用@import前缀，它会影响css的加载速度。")])]),v._v(" "),t("li",[t("p",[v._v("选择器优化嵌套，尽量避免层级过深。")])]),v._v(" "),t("li",[t("p",[v._v("css雪碧图，同一页面相近部分的小图标，方便使用，减少页面的请求次数，但是同时图片本身会变大，使用时，优劣考虑清\n楚，再使用。")])]),v._v(" "),t("li",[t("p",[v._v("正确使用display的属性，由于display的作用，某些样式组合会无效，徒增样式体积的同时也影响解析性能。")])]),v._v(" "),t("li",[t("p",[v._v("不滥用web字体。对于中文网站来说"),t("code",[v._v("WebFonts")]),v._v("可能很陌生，国外却很流行。"),t("code",[v._v("webfonts")]),v._v("通常体积庞大，而且一些浏\n览器在下载"),t("code",[v._v("webfonts")]),v._v("时会阻塞页面渲染损伤性能。")])])]),v._v(" "),t("h3",{attrs:{id:"可维护性、健壮性："}},[v._v("可维护性、健壮性：")]),v._v(" "),t("ol",[t("li",[t("p",[v._v("将具有相同属性的样式抽离出来，整合并通过class在页面中进行使用，提高css的可维护性。")])]),v._v(" "),t("li",[t("p",[v._v("样式与内容分离：将css代码定义到外部css中。")])])]),v._v(" "),t("h2",{attrs:{id:"浏览器是怎样解析-css-选择器的？"}},[v._v("浏览器是怎样解析 CSS 选择器的？")]),v._v(" "),t("ul",[t("li",[v._v("2020.05.21")])]),v._v(" "),t("blockquote",[t("p",[v._v("样式系统从关键选择器开始匹配，然后左移查找规则选择器的祖先元素。只要选择器的子树一直在工作，样式系统就会持续左移，直到和规则匹配，或者是因为不匹配而放弃该规则。")])]),v._v(" "),t("p",[v._v("试想一下，如果采用"),t("code",[v._v("从左至右")]),v._v("的方式读取CSS规则，那么大多数规则读到最后（最右）才会发现是不匹配的，这样做会费时耗能，\n最后有很多都是无用的；而如果采取"),t("code",[v._v("从右向左")]),v._v("的方式，那么只要发现最右边选择器不匹配，就可以直接舍弃了，避免了许多无效匹配。")]),v._v(" "),t("p",[v._v("推荐阅读:"),t("a",{attrs:{href:"https://juejin.im/entry/5a123c55f265da432240cc90",target:"_blank",rel:"noopener noreferrer"}},[v._v("《探究 CSS 解析原理》"),t("OutboundLink")],1)]),v._v(" "),t("h2",{attrs:{id:"margin-和-padding-分别适合什么场景使用？"}},[v._v("margin 和 padding 分别适合什么场景使用？")]),v._v(" "),t("ul",[t("li",[v._v("2020.05.21")])]),v._v(" "),t("blockquote",[t("p",[t("code",[v._v("margin")]),v._v("是用来隔开元素与元素的间距；"),t("code",[v._v("padding")]),v._v("是用来隔开元素与内容的间隔。")])]),v._v(" "),t("ul",[t("li",[t("p",[t("code",[v._v("margin")]),v._v("用于布局分开元素使元素与元素互不相干。")])]),v._v(" "),t("li",[t("p",[t("code",[v._v("padding")]),v._v("用于元素与内容之间的间隔，让内容（文字）与（包裹）元素之间有一段距离。")])])]),v._v(" "),t("h3",{attrs:{id:"何时应当使用margin："}},[v._v("何时应当使用margin：")]),v._v(" "),t("ol",[t("li",[t("p",[v._v("需要在border外侧添加空白时。")])]),v._v(" "),t("li",[t("p",[v._v("空白处不需要背景（色）时。")])]),v._v(" "),t("li",[t("p",[v._v("上下相连的两个盒子之间的空白，需要相互抵消时。如"),t("code",[v._v("15px+20px")]),v._v("的"),t("code",[v._v("margin")]),v._v("，将得到"),t("code",[v._v("20px")]),v._v("的空白。")])])]),v._v(" "),t("h3",{attrs:{id:"何时应当时用padding："}},[v._v("何时应当时用padding：")]),v._v(" "),t("ol",[t("li",[t("p",[v._v("需要在border内测添加空白时。")])]),v._v(" "),t("li",[t("p",[v._v("空白处需要背景（色）时。")])]),v._v(" "),t("li",[t("p",[v._v("上下相连的两个盒子之间的空白，希望等于两者之和时。如"),t("code",[v._v("15px+20px")]),v._v("的"),t("code",[v._v("padding")]),v._v("，将得到"),t("code",[v._v("35px")]),v._v("的空白。")])])]),v._v(" "),t("h2",{attrs:{id:"为什么不建议使用统配符初始化-css-样式？"}},[v._v("为什么不建议使用统配符初始化 css 样式？")]),v._v(" "),t("ul",[t("li",[v._v("2020.05.21")])]),v._v(" "),t("p",[v._v("采用"),t("code",[v._v("*{ pading:0;margin:0; }")]),v._v("这样的写法好处是写起来很简单，但是通配符，需要把所有的标签都遍历一遍，当网站较大时，样式比较多，这样写就大大的加强了网站运行的负载，需要很长一段时间加载。")]),v._v(" "),t("p",[v._v("出于性能的考虑，并不是所有标签都会有"),t("code",[v._v("padding")]),v._v("和"),t("code",[v._v("margin")]),v._v("，因此对常见的具有默认"),t("code",[v._v("padding")]),v._v("和"),t("code",[v._v("margin")]),v._v("的元素初始化即可，并不需使用通配符*来初始化。")]),v._v(" "),t("h2",{attrs:{id:"设备像素、css-像素、设备独立像素、dpr、ppi-之间的区别？"}},[v._v("设备像素、css 像素、设备独立像素、dpr、ppi 之间的区别？")]),v._v(" "),t("ul",[t("li",[t("p",[v._v("2020.05.21")])]),v._v(" "),t("li",[t("p",[t("code",[v._v("设备像素")]),v._v("指的是物理像素，一般手机的分辨率指的就是设备像素，一个设备的设备像素是不可变的。")])]),v._v(" "),t("li",[t("p",[t("code",[v._v("css像素")]),v._v("和"),t("code",[v._v("设备独立像素")]),v._v("是等价的，不管在何种分辨率的设备上，css像素的大小应该是一致的，css像素是一个相对单位，它是相\n对于设备像素的，一个css像素的大小取决于页面缩放程度和dpr的大小。")])]),v._v(" "),t("li",[t("p",[t("code",[v._v("dpr")]),v._v("指的是"),t("code",[v._v("设备像素")]),v._v("和"),t("code",[v._v("设备独立像素")]),v._v("的比值，一般的pc屏幕，dpr=1。在iphone4时，苹果推出了retina屏幕，它的dpr\n为2。屏幕的缩放会改变dpr的值。")])]),v._v(" "),t("li",[t("p",[t("code",[v._v("ppi")]),v._v("指的是"),t("code",[v._v("每英寸的物理像素的密度")]),v._v("，"),t("code",[v._v("ppi")]),v._v("越大，屏幕的分辨率越大。")])])]),v._v(" "),t("h2",{attrs:{id:"layoutviewport、visualviewport-和-idealviewport-的区别？"}},[v._v("layoutviewport、visualviewport 和 idealviewport 的区别？")]),v._v(" "),t("ul",[t("li",[t("p",[v._v("2020.05.21")])]),v._v(" "),t("li",[t("p",[v._v("如果把移动设备上浏览器的可视区域设为"),t("code",[v._v("viewport")]),v._v("的话，某些网站就会因为"),t("code",[v._v("viewport")]),v._v("太窄而显示错乱，所以这些浏览器就决定\n默认情况下把"),t("code",[v._v("viewport")]),v._v("设为一个较宽的值，比如"),t("code",[v._v("980px")]),v._v("，这样的话即使是那些为桌面设计的网站也能在移动浏览器上正常显示了。\n"),t("code",[v._v("ppk")]),v._v("把这个浏览器默认的"),t("code",[v._v("viewport")]),v._v("叫做"),t("code",[v._v("layoutviewport")]),v._v("。")])]),v._v(" "),t("li",[t("p",[t("code",[v._v("layoutviewport")]),v._v("的宽度是大于浏览器可视区域的宽度的，所以我们还需要一个"),t("code",[v._v("viewport")]),v._v("来代表浏览器可视区域的大小，"),t("code",[v._v("ppk")]),v._v("把\n这个"),t("code",[v._v("viewport")]),v._v("叫做"),t("code",[v._v("visualviewport")]),v._v("。")])]),v._v(" "),t("li",[t("p",[t("code",[v._v("idealviewport")]),v._v("是最适合移动设备的"),t("code",[v._v("viewport")]),v._v("，"),t("code",[v._v("idealviewport")]),v._v("的宽度等于"),t("code",[v._v("移动设备的屏幕宽度")]),v._v("，只要在"),t("code",[v._v("css")]),v._v("中把某一元素的宽度设为"),t("code",[v._v("idealviewport")]),v._v("的宽度（单位用px），那么这个元素的宽度就是设备屏幕的宽度了，也就是宽度为100%的效果。"),t("code",[v._v("idealviewport")]),v._v("的意义在于，无论在何种分辨率的屏幕下，那些针对"),t("code",[v._v("idealviewport")]),v._v("而设计的网站，不需要用户手动缩放，也不需要出现横向滚动条，都可以完美的呈现给用户。")])])]),v._v(" "),t("h2",{attrs:{id:"position-fixed-在-android-下无效怎么处理？"}},[v._v("position:fixed;在 android 下无效怎么处理？")]),v._v(" "),t("ul",[t("li",[v._v("2020.05.21")])]),v._v(" "),t("p",[v._v("因为移动端浏览器默认的"),t("code",[v._v("viewport")]),v._v("叫做"),t("code",[v._v("layoutviewport")]),v._v("。在移动端显示时，因为"),t("code",[v._v("layoutviewport")]),v._v("的宽度大于移动端屏幕\n的宽度，所以页面会出现滚动条左右移动，"),t("code",[v._v("fixed")]),v._v("的元素是相对"),t("code",[v._v("layoutviewport")]),v._v("来固定位置的，而不是移动端屏幕来固定位置的\n，所以会出现感觉"),t("code",[v._v("fixed")]),v._v("无效的情况。")]),v._v(" "),t("p",[v._v("如果想实现fixed相对于屏幕的固定效果，我们需要改变的是viewport的大小为idealviewport，可以如下设置：")]),v._v(" "),t("div",{staticClass:"language-html extra-class"},[t("pre",{pre:!0,attrs:{class:"language-html"}},[t("code",[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("<")]),v._v("meta")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[v._v("name")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v('"')]),v._v("viewport"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v('"')])]),v._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[v._v("content")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v('"')]),v._v("width=device-width,initial-scale=1.0,maximum-scale=1.0,minimum-sca\nle=1.0,user-scalable=no"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v('"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("/>")])]),v._v("\n")])])]),t("p",[v._v("这也是为什么我们开发移动端项目的时候要设置"),t("code",[v._v("viewport")]),v._v("的原因。")]),v._v(" "),t("h2",{attrs:{id:"overflow-scroll-时不能平滑滚动的问题怎么处理？"}},[v._v("overflow:scroll 时不能平滑滚动的问题怎么处理？")]),v._v(" "),t("ul",[t("li",[v._v("2020.05.21")])]),v._v(" "),t("p",[t("code",[v._v("-webkit-overflow-scrolling")]),v._v("属性控制元素在移动设备上是否使用滚动回弹效果.")]),v._v(" "),t("p",[v._v("在ios下默认的"),t("code",[v._v("-webkit-overflow-scrolling:auto;")]),v._v(" 使用普通滚动, 当手指从触摸屏上移开，滚动会立即停止,会产生滚动卡顿的效果。")]),v._v(" "),t("p",[v._v("需要修改为:")]),v._v(" "),t("div",{staticClass:"language-css extra-class"},[t("pre",{pre:!0,attrs:{class:"language-css"}},[t("code",[t("span",{pre:!0,attrs:{class:"token property"}},[v._v("-webkit-overflow-scrolling")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(":")]),v._v("touch"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n")])])]),t("h2",{attrs:{id:"浏览器如何判断是否支持-webp-格式图片？"}},[v._v("浏览器如何判断是否支持 webp 格式图片？")]),v._v(" "),t("ul",[t("li",[v._v("2020.05.21")])]),v._v(" "),t("ol",[t("li",[t("p",[t("code",[v._v("宽高判断法")]),v._v("。通过创建"),t("code",[v._v("image")]),v._v("对象，将其"),t("code",[v._v("src")]),v._v("属性设置为"),t("code",[v._v("webp")]),v._v("格式的图片，然后在"),t("code",[v._v("onload")]),v._v("事件中获取图片的宽高，如\n果能够获取，则说明浏览器支持"),t("code",[v._v("webp")]),v._v("格式图片。如果不能获取或者触发了"),t("code",[v._v("onerror")]),v._v("函数，那么就说明浏览器不支持"),t("code",[v._v("webp")]),v._v("格\n式的图片。")])]),v._v(" "),t("li",[t("p",[t("code",[v._v("canvas判断方法")]),v._v("。我们可以动态的创建一个"),t("code",[v._v("canvas")]),v._v("对象，通过"),t("code",[v._v("canvas")]),v._v("的"),t("code",[v._v("toDataURL")]),v._v("将设置为"),t("code",[v._v("webp")]),v._v("格式，然后判断\n返回值中是否含有"),t("code",[v._v("image/webp")]),v._v("字段，如果包含则说明支持"),t("code",[v._v("WebP")]),v._v("，反之则不支持")])])]),v._v(" "),t("h2",{attrs:{id:"transition-和-animation-的区别"}},[v._v("transition 和 animation 的区别?")]),v._v(" "),t("ul",[t("li",[v._v("2020.05.21")])]),v._v(" "),t("ol",[t("li",[t("p",[t("code",[v._v("transition")]),v._v("关注的是"),t("code",[v._v("CSSproperty")]),v._v("的变化，"),t("code",[v._v("property")]),v._v("值和时间的关系是一个"),t("code",[v._v("三次贝塞尔曲线")]),v._v("。")])]),v._v(" "),t("li",[t("p",[t("code",[v._v("animation")]),v._v("作用于"),t("code",[v._v("元素本身")]),v._v("而不是样式属性，可以使用"),t("code",[v._v("关键帧")]),v._v("的概念，应该说可以实现更自由的动画效果。")])])]),v._v(" "),t("h2",{attrs:{id:"什么是幽灵空白节点？"}},[v._v("什么是幽灵空白节点？")]),v._v(" "),t("ul",[t("li",[v._v("2020.05.21")])]),v._v(" "),t("blockquote",[t("p",[t("code",[v._v("幽灵空白节点")]),v._v("是内联盒模型中非常重要的一个概念，具体指的是：在"),t("code",[v._v("HTML5")]),v._v("文档声明中，内联元素的所有解析和渲染表现就如同每个行框盒子的前面有一个"),t("code",[v._v("空白节点")]),v._v("一样。这个"),t("code",[v._v("空白节点")]),v._v("永远透明，不占据任何宽度，看不见也无法通过脚本获取，就好像幽灵一样，但又确确实实地存在，表现如同文本节点一样，因此，我们称之为"),t("code",[v._v("幽灵空白节点")]),v._v("。")])]),v._v(" "),t("h2",{attrs:{id:"content-与替换元素的关系？"}},[v._v("content 与替换元素的关系？")]),v._v(" "),t("ul",[t("li",[v._v("2020.05.21")])]),v._v(" "),t("blockquote",[t("p",[v._v("content属性生成的对象称为“匿名替换元素”。")])]),v._v(" "),t("ol",[t("li",[v._v("我们使用"),t("code",[v._v("content")]),v._v("生成的文本是无法选中、无法复制的，好像设置了"),t("code",[v._v("userselect:none")]),v._v("声明一般，但是普通元素的文本却可以被轻松选中。同时，"),t("code",[v._v("content")]),v._v("生成的文本无法被屏幕阅读设备读取，也无法被搜索引擎抓取。")])]),v._v(" "),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"custom-block-title"},[v._v("WARNING")]),v._v(" "),t("p",[v._v("因此，千万不要自以为是地把重要的文本信息使用"),t("code",[v._v("content")]),v._v("属性生成，因为这对"),t("code",[v._v("可访问性")]),v._v("和"),t("code",[v._v("SEO")]),v._v("都很不友好。")])]),v._v(" "),t("ol",{attrs:{start:"2"}},[t("li",[t("p",[t("code",[v._v("content")]),v._v("生成的内容不能左右:"),t("code",[v._v("empty伪类")]),v._v("。")])]),v._v(" "),t("li",[t("p",[t("code",[v._v("content")]),v._v("动态生成值无法获取。")])])]),v._v(" "),t("h2",{attrs:{id:"margin-auto-的填充规则？"}},[v._v("margin:auto 的填充规则？")]),v._v(" "),t("ul",[t("li",[v._v("2020.05.21")])]),v._v(" "),t("blockquote",[t("p",[t("code",[v._v("margin:auto;")]),v._v("是具有强烈的计算意味的关键字，用来计算元素对应方向应该获得的剩余间距大小。但是触发"),t("code",[v._v("margin:auto")]),v._v("计算有一个前提条件，就是"),t("code",[v._v("width")]),v._v("或"),t("code",[v._v("height")]),v._v("为"),t("code",[v._v("auto")]),v._v("时，元素是具有对应方向的自动填充特性的。")])]),v._v(" "),t("ol",[t("li",[t("p",[v._v("如果一侧定值，一侧"),t("code",[v._v("auto")]),v._v("，则"),t("code",[v._v("auto")]),v._v("为剩余空间大小。")])]),v._v(" "),t("li",[t("p",[v._v("如果两侧均是"),t("code",[v._v("auto")]),v._v("，则平分剩余空间。")])])]),v._v(" "),t("h2",{attrs:{id:"什么是基线和-x-height？"}},[v._v("什么是基线和 x-height？")]),v._v(" "),t("ul",[t("li",[v._v("2020.05.21")])]),v._v(" "),t("p",[v._v("字母x的下边缘（线）就是我们的基线。")]),v._v(" "),t("p",[t("code",[v._v("x-height")]),v._v("指的就是"),t("code",[v._v("小写字母x")]),v._v("的高度，术语描述就是基线和等分线（meanline）（也称作中线，midline）之间的距离。在"),t("code",[v._v("CSS")]),v._v("世界中，middle指的是基线往上"),t("code",[v._v("1/2x-height")]),v._v("高度。我们可以近似理解为"),t("code",[v._v("字母x交叉点")]),v._v("那个位置。")]),v._v(" "),t("p",[t("code",[v._v("ex")]),v._v("是CSS中的一个相对单位，指的是小写字母x的高度，没错，就是指x-height。ex的价值就在其副业上不受字体和字号影响的内联元素的垂直居中对齐效果。内联元素默认是基线对齐的，而基线就是x的底部，而1ex就是一个x的高度。")]),v._v(" "),t("h2",{attrs:{id:"line-height-的特殊性？"}},[v._v("line-height 的特殊性？")]),v._v(" "),t("ul",[t("li",[v._v("2020.05.21")])]),v._v(" "),t("p",[v._v("（1）对于非替换元素的纯内联元素，其可视高度完全由line-height决定。对于文本这样的纯内联元素，line-height就是高\n度计算的基石，用专业说法就是指定了用来计算行框盒子高度的基础高度。")]),v._v(" "),t("p",[v._v("（2）内联元素的高度由固定高度和不固定高度组成，这个不固定的部分就是这里的“行距”。换句话说，line-height之所以起作\n用，就是通过改变“行距”来实现的。在CSS中，“行距”分散在当前文字的上方和下方，也就是即使是第一行文字，其上方也是\n有“行距”的，只不过这个“行距”的高度仅仅是完整“行距”高度的一半，因此，也被称为“半行距”。")]),v._v(" "),t("p",[v._v("（3）行距=line-height-font-size。")]),v._v(" "),t("p",[v._v("（4）border以及line-height等传统CSS属性并没有小数像素的概念。如果标注的是文字上边距，则向下取整；如果是文字下\n边距，则向上取整。")]),v._v(" "),t("p",[v._v("（5）对于纯文本元素，line-height直接决定了最终的高度。但是，如果同时有替换元素，则line-height只能决定最小高度。")]),v._v(" "),t("p",[v._v("（6）对于块级元素，line-height对其本身是没有任何作用的，我们平时改变line-height，块级元素的高度跟着变化实际上是\n通过改变块级元素里面内联级别元素占据的高度实现的。")]),v._v(" "),t("p",[v._v("（7）line-height的默认值是normal，还支持数值、百分比值以及长度值。为数值类型时，其最终的计算值是和当前font-si\nze相乘后的值。为百分比值时，其最终的计算值是和当前font-size相乘后的值。为长度值时原意不变。")]),v._v(" "),t("p",[v._v("（8）如果使用数值作为line-height的属性值，那么所有的子元素继承的都是这个值；但是，如果使用百分比值或者长度值作为\n属性值，那么所有的子元素继承的是最终的计算值。")]),v._v(" "),t("p",[v._v("（9）无论内联元素line-height如何设置，最终父级元素的高度都是由数值大的那个line-height决定的。")]),v._v(" "),t("p",[v._v("（10）只要有“内联盒子”在，就一定会有“行框盒子”，就是每一行内联元素外面包裹的一层看不见的盒子。然后，重点来了，在每个\n“行框盒子”前面有一个宽度为0的具有该元素的字体和行高属性的看不见的“幽灵空白节点”。")]),v._v(" "),t("h2",{attrs:{id:"vertical-align-的特殊性？"}},[v._v("vertical-align 的特殊性？")]),v._v(" "),t("ul",[t("li",[v._v("2020.05.21")])]),v._v(" "),t("p",[v._v("（1）vertical-align的默认值是baseline，即基线对齐，而基线的定义是字母x的下边缘。因此，内联元素默认都是沿着字\n母x的下边缘对齐的。对于图片等替换元素，往往使用元素本身的下边缘作为基线。：一个inline-block元素，如果里面\n没有内联元素，或者overflow不是visible，则该元素的基线就是其margin底边缘；否则其基线就是元素里面最后一行\n内联元素的基线。")]),v._v(" "),t("p",[v._v("（2）vertical-align:top就是垂直上边缘对齐，如果是内联元素，则和这一行位置最高的内联元素的顶部对齐；如果display\n计算值是table-cell的元素，我们不妨脑补成"),t("code",[v._v("<td>")]),v._v("元素，则和"),t("code",[v._v("<tr>")]),v._v("元素上边缘对齐。")]),v._v(" "),t("p",[v._v("（3）vertical-align:middle是中间对齐，对于内联元素，元素的垂直中心点和行框盒子基线往上1/2x-height处对齐。对\n于table-cell元素，单元格填充盒子相对于外面的表格行居中对齐。")]),v._v(" "),t("p",[v._v("（4）vertical-align支持数值属性，根据数值的不同，相对于基线往上或往下偏移，如果是负值，往下偏移，如果是正值，往上\n偏移。")]),v._v(" "),t("p",[v._v("（5）vertical-align属性的百分比值则是相对于line-height的计算值计算的。")]),v._v(" "),t("p",[v._v("（6）vertical-align起作用是有前提条件的，这个前提条件就是：只能应用于内联元素以及display值为table-cell的元\n素。")]),v._v(" "),t("p",[v._v("（7）table-cell元素设置vertical-align垂直对齐的是子元素，但是其作用的并不是子元素，而是table-cell元素自身。")]),v._v(" "),t("h2",{attrs:{id:"overflow-的特殊性？"}},[v._v("overflow 的特殊性？")]),v._v(" "),t("ul",[t("li",[v._v("2020.05.21")])]),v._v(" "),t("p",[v._v("（1）一个设置了overflow:hidden声明的元素，假设同时存在border属性和padding属性，则当子元素内容超出容器宽度\n高度限制的时候，剪裁的边界是borderbox的内边缘，而非paddingbox的内边缘。")]),v._v(" "),t("p",[v._v("（2）HTML中有两个标签是默认可以产生滚动条的，一个是根元素"),t("code",[v._v("<html>")]),v._v("，另一个是文本域"),t("code",[v._v("<textarea>")]),v._v("。")]),v._v(" "),t("p",[v._v("（3）滚动条会占用容器的可用宽度或高度。")]),v._v(" "),t("p",[v._v("（4）元素设置了overflow:hidden声明，里面内容高度溢出的时候，滚动依然存在，仅仅滚动条不存在！")]),v._v(" "),t("h2",{attrs:{id:"元素的层叠顺序？"}},[v._v("元素的层叠顺序？")]),v._v(" "),t("ul",[t("li",[v._v("2020.05.21")])]),v._v(" "),t("p",[v._v("层叠顺序，英文称作 "),t("code",[v._v("stackingorder")]),v._v("，表示元素发生层叠时有着特定的垂直显示顺序。")]),v._v(" "),t("p",[t("a",{attrs:{href:"https://segmentfault.com/img/remote/1460000022021560",target:"_blank",rel:"noopener noreferrer"}},[v._v("层叠顺序"),t("OutboundLink")],1)]),v._v(" "),t("h2",{attrs:{id:"white-space-与换行和空格的控制？"}},[v._v("white-space 与换行和空格的控制？")]),v._v(" "),t("ul",[t("li",[v._v("2020.05.21")])]),v._v(" "),t("blockquote",[t("p",[t("code",[v._v("white-space")]),v._v("属性声明了如何处理元素内的空白字符，这类空白字符包括"),t("code",[v._v("Space（空格）键")]),v._v("、"),t("code",[v._v("Enter（回车）键")]),v._v("、"),t("code",[v._v("Tab（制表符）键")]),v._v("产生的空白。因此，"),t("code",[v._v("white-space")]),v._v("可以决定图文内容是否在一行显示（回车空格是否生效），是否显示大段连续空白（空格是否生效）等。")])]),v._v(" "),t("ul",[t("li",[t("code",[v._v("normal")]),v._v("：合并空白字符和换行符。")]),v._v(" "),t("li",[t("code",[v._v("pre")]),v._v("：空白字符不合并，并且内容只在有换行符的地方换行。")]),v._v(" "),t("li",[t("code",[v._v("nowrap")]),v._v("：该值和normal一样会合并空白字符，但不允许文本环绕。")]),v._v(" "),t("li",[t("code",[v._v("pre-wrap")]),v._v("：空白字符不合并，并且内容只在有换行符的地方换行，同时允许文本环绕。")]),v._v(" "),t("li",[t("code",[v._v("pre-line")]),v._v("：合并空白字符，但只在有换行符的地方换行，允许文本环绕。")])]),v._v(" "),t("h2",{attrs:{id:"实现一个宽高自适应的正方形"}},[v._v("实现一个宽高自适应的正方形")]),v._v(" "),t("ul",[t("li",[v._v("2020.05.21")])]),v._v(" "),t("div",{staticClass:"language-css extra-class"},[t("pre",{pre:!0,attrs:{class:"language-css"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[v._v("/*1.第一种方式是利用vw来实现*/")]),v._v("\n"),t("span",{pre:!0,attrs:{class:"token selector"}},[v._v(".square")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("{")]),v._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[v._v("width")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(":")]),v._v(" 10%"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[v._v("height")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(":")]),v._v(" 10vw"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[v._v("background")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(":")]),v._v(" tomato"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("}")]),v._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[v._v("/*2.第二种方式是利用元素的margin/padding百分比是相对父元素width的性质来实现*/")]),v._v("\n"),t("span",{pre:!0,attrs:{class:"token selector"}},[v._v(".square")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("{")]),v._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[v._v("width")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(":")]),v._v(" 20%"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[v._v("height")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(":")]),v._v(" 0"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[v._v("padding-top")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(":")]),v._v(" 20%"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[v._v("background")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(":")]),v._v(" orange"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("}")]),v._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[v._v("/*3.第三种方式是利用子元素的margin-top的值来实现的*/")]),v._v("\n"),t("span",{pre:!0,attrs:{class:"token selector"}},[v._v(".square")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("{")]),v._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[v._v("width")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(":")]),v._v(" 30%"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[v._v("overflow")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(":")]),v._v(" hidden"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[v._v("background")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(":")]),v._v(" yellow"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("}")]),v._v("\n\n"),t("span",{pre:!0,attrs:{class:"token selector"}},[v._v(".square::after")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("{")]),v._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[v._v("content")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(":")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[v._v('""')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[v._v("display")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(":")]),v._v(" block"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[v._v("margin-top")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(":")]),v._v(" 100%"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("}")]),v._v("\n")])])])])}),[],!1,null,null,null);_.default=a.exports}}]);