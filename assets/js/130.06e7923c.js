(window.webpackJsonp=window.webpackJsonp||[]).push([[130],{749:function(t,s,a){"use strict";a.r(s);var e=a(15),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"查询相关"}},[t._v("查询相关")]),t._v(" "),a("h2",{attrs:{id:"union去相同记录查询"}},[t._v("union去相同记录查询")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" column1 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" table1\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("union")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" column2 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" table2\n")])])]),a("h2",{attrs:{id:"union-all直接聚合查询"}},[t._v("union all直接聚合查询")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" column1 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" table1\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("union")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("all")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" column2 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" table2\n")])])]),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("column1")]),t._v("与"),a("code",[t._v("column2")]),t._v("应有相同的数据类型。当然它们可以相同。")]),t._v(" "),a("li",[a("code",[t._v("union all")]),t._v("关键字并不去除重复值，如果需要去除，你可以使用"),a("code",[t._v("union")]),t._v("替代它。")]),t._v(" "),a("li",[t._v("为什么说"),a("code",[t._v("伪集合")]),t._v("呢，因为你并没有去除重复值（没有保证从"),a("code",[t._v("table1 select")]),t._v("出来的是不重复，也没有保证"),a("code",[t._v("table2")]),t._v("，更没有保证并之后的结果是不重复的）。")])])]),t._v(" "),a("h2",{attrs:{id:"distinct去重复查询"}},[t._v("distinct去重复查询")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("distinct")]),t._v(" 字段名 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" 表名；\n")])])]),a("h2",{attrs:{id:"order-by查询结果进行排序"}},[t._v("order by查询结果进行排序")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" 表名 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("order")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" 字段名 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("desc")]),t._v("；"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 降序，从大到小")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" 表名 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("order")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" 字段名 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("asc")]),t._v("；"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 升序，asc默认可以不写")]),t._v("\n")])])]),a("h2",{attrs:{id:"判断产品是否过期，有效期30天"}},[t._v("判断产品是否过期，有效期30天")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" product "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" datediff（"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("day")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" getdate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" productTime）"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v("\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[a("code",[t._v("datediff()")]),t._v(" 这个函数是取得2个日期之前的差，第一个参数是表示返回的是天数（day），月数（month）、年（year）等等 ；")]),t._v(" "),a("p",[a("code",[t._v("getdate（）")]),t._v(" 表示取得当前日期")])]),t._v(" "),a("h2",{attrs:{id:"分页限制查询"}},[t._v("分页限制查询")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查出符合条件的记录总数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("COUNT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" 表名 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查询当页要显示的数据")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" 表名  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("limit")]),t._v(" M"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("N"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 但是从 Mysql4.0.0 开始，我们可以选择使用另外一个方式：")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" SQL_CALC_FOUND_ROWS "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" 表名 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("limit")]),t._v(" M"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" N"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" FOUND_ROWS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[a("code",[t._v("SQL_CALC_FOUND_ROWS")]),t._v(" 告诉 MySQL 将sql所处理的行数记录下来。")]),t._v(" "),a("p",[a("code",[t._v("FOUND_ROWS()")]),t._v(" 则取到了这个纪录。")]),t._v(" "),a("p",[t._v("虽然也是两个语句，但是只执行了一次主查询，所以效率比原来要高很多。")])]),t._v(" "),a("p",[a("code",[t._v("SELECT")]),t._v("语句中经常可能用"),a("code",[t._v("LIMIT")]),t._v("限制返回行数。有时候可能想要知道如果没有"),a("code",[t._v("LIMIT")]),t._v("会返回多少行，但又不想再执行一次相同语句。那么，在"),a("code",[t._v("SELECT")]),t._v("查询中包含"),a("code",[t._v("SQL_CALC_FOUND_ROWS")]),t._v("选项，然后执行"),a("code",[t._v("FOUND_ROWS()")]),t._v("就可以了：")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" SQL_CALC_FOUND_ROWS "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" 表名 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LIMIT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" FOUND_ROWS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("第二个"),a("code",[t._v("SELECT")]),t._v("将返回第一条"),a("code",[t._v("SELECT")]),t._v("如果没有"),a("code",[t._v("LIMIT")]),t._v("时返回的行数。")]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("如果在前一条语句中没有使用"),a("code",[t._v("SQL_CALC_FOUND_ROWS")]),t._v("选项，"),a("code",[t._v("FOUND_ROWS()")]),t._v("将返回前一条语句实际返回的行数。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("FOUND_ROWS()")]),t._v("得到的数字是临时的，执行下一条语句就会失效。如果想要这个数字，就要将它保存下来：")])])]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" SQL_CALC_FOUND_ROWS "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@rows")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" FOUND_ROWS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("ol",{attrs:{start:"3"}},[a("li",[a("p",[t._v("如果使用 "),a("code",[t._v("SELECT SQL_CALC_FOUND_ROWS")]),t._v("，"),a("code",[t._v("MySQL")]),t._v("必须计算所有结果集的行数。尽管这样，总比再执行一次不使用"),a("code",[t._v("LIMIT")]),t._v("的查询要快多了，因为结果集不需要返回客户端。")])]),t._v(" "),a("li",[a("p",[t._v("当你想要限制查询的返回行数的同时又想得到查询的完整结果集合的行数,但又不想重复执行一次查询,那么"),a("code",[t._v("SQL_CALC_FOUND_ROWS and FOUND_ROWS()")]),t._v(" 是非常有用的！")])])])]),t._v(" "),a("h2",{attrs:{id:"inner-join-内连接查询"}},[t._v("inner join 内连接查询")]),t._v(" "),a("blockquote",[a("p",[t._v("INNER JOIN（内连接：inner可以省略），也称为"),a("code",[t._v("自然连接")]),t._v("。与select  a.* , b.*   from  表a, 表b where  a.id = b.id  等效，也是内连接（推荐使用join）")])]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),a("p",[t._v("内连接是从结果中删除其他被连接表中没有匹配行的所有行，所以内连接可能会丢失信息。")])]),t._v(" "),a("h3",{attrs:{id:"学生表信息-students"}},[t._v("学生表信息(Students):")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("ID")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Name")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Age")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("City")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("MajorID")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("101")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Tom")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("20")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Beijing")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("10")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("102")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Lucy")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("18")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Shanghai")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("11")])])])]),t._v(" "),a("h3",{attrs:{id:"专业信息表-majors"}},[t._v("专业信息表(Majors):")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("ID")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Name")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("10")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("English")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("11")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Computer")])])])]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" Students"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Students"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Majors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" MajorName "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Students "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INNER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" Majors "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" Students"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MajorID "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Majors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ID\n")])])]),a("h3",{attrs:{id:"查询结果"}},[t._v("查询结果:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("ID")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Name")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("MajorName")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("101")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Tom")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("English")])])])]),t._v(" "),a("h2",{attrs:{id:"left-join（左连接）查询"}},[t._v("LEFT JOIN（左连接）查询")]),t._v(" "),a("blockquote",[a("p",[t._v("结果集保留左表的所有行，但只包含第二个表与第一表匹配的行。第二个表相应的空行被放入NULL值。")])]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" Students"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Students"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Majors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" MajorName\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Students "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LEFT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" Majors\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" Students"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MajorID "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Majors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ID\n")])])]),a("h3",{attrs:{id:"查询结果-2"}},[t._v("查询结果:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("ID")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Name")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("MajorName")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("101")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Tom")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("English")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("102")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Lucy")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Null")])])])]),t._v(" "),a("h2",{attrs:{id:"right-join-右连接-查询"}},[t._v("right join (右连接)查询")]),t._v(" "),a("blockquote",[a("p",[t._v("右外连接保留了第二个表的所有行，但只包含第一个表与第二个表匹配的行。第一个表相应空行被入NULL值。")])]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" Students"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Students"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Majors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" MajorName\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Students "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RIGHT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" Majors\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" Students"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MajorID "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Majors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ID\n")])])]),a("h3",{attrs:{id:"查询结果-3"}},[t._v("查询结果:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("ID")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Name")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("MajorName")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("101")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Tom")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("English")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("Null")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Null")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Computer")])])])]),t._v(" "),a("h2",{attrs:{id:"full-join-全外连接）查询"}},[t._v("FULL JOIN (全外连接）查询")]),t._v(" "),a("blockquote",[a("p",[t._v("会把两个表所有的行都显示在结果表中")])]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" Students"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Students"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Majors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" MajorName\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Students "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FULL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" Majors\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" Students"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MajorID "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Majors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ID\n")])])]),a("h3",{attrs:{id:"查询结果-4"}},[t._v("查询结果:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("ID")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Name")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("MajorName")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("101")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Tom")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("English")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("102")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Lucy")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Null")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("Null")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Null")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Computer")])])])]),t._v(" "),a("h2",{attrs:{id:"cross-join（交叉连接）查询"}},[t._v("cross join（交叉连接）查询")]),t._v(" "),a("blockquote",[a("p",[t._v("交叉连接返回左表中的所有行，左表中的每一行与右表中的所有行组合。交叉连接也称作笛卡尔积。 简单查询两张表组合，这是求笛卡儿积，效率最低。")])]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" Students"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Students"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Majors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" MajorName\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Students "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CROSS")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" Majors\n")])])]),a("h3",{attrs:{id:"查询结果-5"}},[t._v("查询结果:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("ID")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Name")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("MajorName")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("101")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Tom")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("English")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("102")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Lucy")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("English")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("101")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Tom")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Computer")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("102")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Lucy")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Computer")])])])])])}),[],!1,null,null,null);s.default=n.exports}}]);