(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{713:function(t,v,_){"use strict";_.r(v);var s=_(14),c=Object(s.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"函数中的参数"}},[t._v("函数中的参数")]),t._v(" "),_("p",[_("code",[t._v("ECMAScript")]),t._v("函数的参数与大多数其他语言中函数的参数有所不同。"),_("code",[t._v("ECMAScript")]),t._v("函数不介意传递进来多少个参数，也不在乎传进来参数是什么数据类型。")]),t._v(" "),_("p",[t._v("也就是说，即便你定义的函数只接收两个参数，在调用这个函数时也未必一定要传递两个参数。可以传递一个、三个甚至不传递参数，而解析器永远不会有什么怨言。")]),t._v(" "),_("p",[t._v("之所以会这样，原因是"),_("code",[t._v("ECMAScript")]),t._v("中的参数在内部是用一个"),_("code",[t._v("数组")]),t._v("来表示的。")]),t._v(" "),_("p",[t._v("函数接收到的始终都是这个数组，而不关心数组中包含哪些参数。如果这个数组中不包含任何元素，无所谓；如果包含多个元素，也没有问题。")]),t._v(" "),_("div",{staticClass:"custom-block tip"},[_("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),_("p",[t._v("实际上，在函数体内可以通过"),_("code",[t._v("arguments")]),t._v("对象来访问这个参数数组，从而获取传递给函数的每一个参数。")])]),t._v(" "),_("div",{staticClass:"custom-block warning"},[_("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),_("p",[t._v("由于大量使用"),_("code",[t._v("with")]),t._v("语句会导致性能下降，同时也会给调试代码造成困难，因此在开发大型应用程序时，不建议使用"),_("code",[t._v("with")]),t._v("语句。")])])])}),[],!1,null,null,null);v.default=c.exports}}]);