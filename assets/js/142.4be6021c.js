(window.webpackJsonp=window.webpackJsonp||[]).push([[142],{803:function(t,a,s){"use strict";s.r(a);var e=s(14),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"gitlab-ci-pipeline框架"}},[t._v("GitLab CI Pipeline框架")]),t._v(" "),s("ul",[s("li",[t._v("2020.05.20")])]),t._v(" "),s("p",[t._v("本文将会介绍一些跟"),s("code",[t._v("GitLab CI")]),t._v("流程相关的知识,方便大家对CI/CD流程的熟悉,设计适合自己项目的流程。")]),t._v(" "),s("h2",{attrs:{id:"ci-cd-工作流程"}},[t._v("CI/CD 工作流程")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200520181143980.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3hqbDI3MTMxNA==,size_16,color_FFFFFF,t_70",alt:"CI/CD 工作流程"}})]),t._v(" "),s("h2",{attrs:{id:"gitlab-ci"}},[t._v("Gitlab CI")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("GitLab CI")]),t._v(" 是 "),s("code",[t._v("GitLab")]),t._v("内置的进行持续集成的工具，在你安装好 "),s("code",[t._v("GitLab")]),t._v(" 之后，即同时安装了 "),s("code",[t._v("GitLab CI")]),t._v("。只需要在仓库根目录下创建 "),s("code",[t._v(".gitlab-ci.yml")]),t._v(" 文件，并配置"),s("code",[t._v("GitLab Runner")]),t._v("；每次提交的时候，"),s("code",[t._v("gitlab")]),t._v("将自动识别到"),s("code",[t._v(".gitlab-ci.yml")]),t._v("文件，并且使用"),s("code",[t._v("Gitlab Runner")]),t._v("执行该脚本。")])]),t._v(" "),s("h2",{attrs:{id:"gitlab-runner"}},[t._v("Gitlab Runner")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("GitLab Runner")]),t._v(" 是用来执行"),s("code",[t._v(".gitlab-ci.yml")]),t._v(" 脚本的工具，从 "),s("code",[t._v("GitLab CI")]),t._v(" 中获取到任务，并按其要求完成任务的执行。可以理解成，"),s("code",[t._v("Runner")]),t._v("就像认真工作的工人，"),s("code",[t._v("GitLab-CI")]),t._v("就是管理工人的中心，所有工人都要在 "),s("code",[t._v("GitLab-CI")]),t._v(" 里面注册，并且表明自己是为哪个项目服务。当相应的项目发生变化时，"),s("code",[t._v("GitLab-CI")]),t._v(" 就会通知相应的工人执行对应的脚本。")])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[s("code",[t._v("Runner")]),t._v("负责执行"),s("code",[t._v(".gitlab-ci.yml")]),t._v("文件中定义的"),s("code",[t._v("job")]),t._v("，可以是"),s("code",[t._v("虚拟机")]),t._v("、"),s("code",[t._v("vps")]),t._v("、"),s("code",[t._v("裸机")]),t._v("、"),s("code",[t._v("docker容器")]),t._v("或"),s("code",[t._v("容器集群")]),t._v("。")]),t._v(" "),s("p",[s("code",[t._v("GitLab Runner")]),t._v(" 是由Go语言编写的,可以运行在 "),s("code",[t._v("GNU/Linux")]),t._v(", "),s("code",[t._v("macOS")]),t._v(" 和 "),s("code",[t._v("Windows")]),t._v("上。")]),t._v(" "),s("p",[t._v("如果我们项目中需要使用到"),s("code",[t._v("Docker")]),t._v("的话,最低版本的 "),s("code",[t._v("Docker")]),t._v(" 需要 "),s("code",[t._v("v1.13.0")]),t._v("。")]),t._v(" "),s("p",[t._v("我们可以在项目的"),s("code",[t._v("Settings--\x3eCI/CD--\x3eRunners")]),t._v("页面可以查看到是否有可用的"),s("code",[t._v("Runner")]),t._v("。")])]),t._v(" "),s("h3",{attrs:{id:"runner类型"}},[t._v("Runner类型")]),t._v(" "),s("p",[s("code",[t._v("GitLab-Runner")]),t._v(" 可以分类两种类型："),s("code",[t._v("Shared Runner（共享型）")]),t._v("和 "),s("code",[t._v("Specific Runner（指定型）")]),t._v("。")]),t._v(" "),s("ol",[s("li",[s("p",[s("code",[t._v("Shared Runner")]),t._v("：所有工程都能够用的，且只有"),s("code",[t._v("系统管理员")]),t._v("能够创建。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Specific Runner")]),t._v("：只有特定的项目可以使用。")])])]),t._v(" "),s("h3",{attrs:{id:"runner安装"}},[t._v("Runner安装")]),t._v(" "),s("p",[t._v("以"),s("code",[t._v("macOs")]),t._v("为例子,完整的安装地址参考:"),s("a",{attrs:{href:"https://docs.gitlab.com/runner/install/",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方下载地址"),s("OutboundLink")],1)]),t._v(" "),s("ul",[s("li",[t._v("方式1")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("sudo curl --output /usr/local/bin/gitlab-runner https://gitlab-runner-downloads.s3.amazonaws.com/latest/binaries/gitlab-runner-darwin-amd64\n\nsudo chmod +x /usr/local/bin/gitlab-runner\n\ncd ~\ngitlab-runner install\ngitlab-runner start\n")])])]),s("ul",[s("li",[t._v("方式2")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("brew install gitlab-runner\n\nbrew services start gitlab-runner\n")])])]),s("h3",{attrs:{id:"获取runner注册token"}},[t._v("获取Runner注册Token")]),t._v(" "),s("p",[t._v("安装好"),s("code",[t._v("Runner")]),t._v("之后，需要向"),s("code",[t._v("Gitlab")]),t._v("进行注册，注册"),s("code",[t._v("Runner")]),t._v("需要 "),s("code",[t._v("GitLab-CI")]),t._v(" 的 "),s("code",[t._v("url")]),t._v(" 和 "),s("code",[t._v("token")]),t._v("。可根据需求注册选择所需类型"),s("code",[t._v("Runner")]),t._v("。")]),t._v(" "),s("ul",[s("li",[t._v("获取"),s("code",[t._v("Shared Runner注册Token")]),t._v("：")])]),t._v(" "),s("p",[t._v("使用管理员用户登录，进入"),s("code",[t._v("Admin Area->OverView->Runners")]),t._v("界面。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAxOS83LzI5LzE2YzNjZWVkMTM5OGRjZjg",alt:"图片地址"}})]),t._v(" "),s("ul",[s("li",[t._v("获取"),s("code",[t._v("Specific Runner注册Token")]),t._v("：")])]),t._v(" "),s("p",[t._v("进行项目仓库->settings->CI/CD界面")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAxOS83LzI5LzE2YzNjZWVmZmFkYTc4NWI",alt:"图片地址"}})]),t._v(" "),s("h3",{attrs:{id:"注册runner"}},[t._v("注册Runner")]),t._v(" "),s("p",[t._v("完整的注册文档请参见"),s("a",{attrs:{href:"https://docs.gitlab.com/runner/register/",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方注册文档"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("执行 "),s("code",[t._v("gitlab-ci-multi-runner register")]),t._v("命令进行 "),s("code",[t._v("Runner注册")]),t._v("，期间会用到前期获取的url及token；注册完成之后，"),s("code",[t._v("GitLab-CI")]),t._v("就会多出一条"),s("code",[t._v("Runner记录")]),t._v("。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAxOS83LzI5LzE2YzNjZWYzZDVmZmI5MTA",alt:"图片地址"}})]),t._v(" "),s("h2",{attrs:{id:"gitlab-ci-yml-配置文件"}},[t._v("gitlab-ci.yml(配置文件)")]),t._v(" "),s("blockquote",[s("p",[t._v("从"),s("code",[t._v("7.12")]),t._v("版本开始，"),s("code",[t._v("GitLab CI")]),t._v("使用"),s("code",[t._v("YAML")]),t._v("文件("),s("code",[t._v(".gitlab-ci.yml")]),t._v(")来管理项目配置。该文件存放于项目"),s("code",[t._v("仓库的根目录")]),t._v("，并且包含了你的项目如何被编译的描述语句。"),s("code",[t._v("YAML")]),t._v("文件使用一系列约束叙述定义了Job启动时所要做的事情。")])]),t._v(" "),s("p",[t._v("通过配置"),s("code",[t._v("gitlab-ci.yml")]),t._v("文件我们可以定义"),s("code",[t._v("Pipeline")]),t._v("的结构和执行顺序。")]),t._v(" "),s("h3",{attrs:{id:"关键字及含义"}},[t._v("关键字及含义")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("关键字")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("含义")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("before_script")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("定义任何 Jobs 运行前都会执行的命令。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("after_script")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("定义任何 Jobs 运行完后都会执行的命令。（要求 GitLab 8.7+ 和 GitLab Runner 1.2+）")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("variables && Job.variables")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("定义环境变量。如果定义了 Job 级别的环境变量的话，该 Job 会优先使用 Job 级别的环境变量。（要求 GitLab Runner 0.5.0+）")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("cache && Job.cache")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("定义需要缓存的文件。每个 Job 开始的时候，Runner 都会删掉 .gitignore 里面的文件。如果有些文件 (如 node_modules/) 需要多个 Jobs 共用的话，我们只能让每个 Job 都先执行一遍 npm install。（要求 GitLab Runner 0.7.0+）")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("Job.scrip")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("定义 Job 要运行的命令，必填项")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("Job.stage")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("定义 Job 的 stage，默认为 test")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("Job.artifacts")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("定义 Job 中生成的附件。当该 Job 运行成功后，生成的文件可以作为附件 (如生成的二进制文件) 保留下来，打包发送到 GitLab，之后我们可以在 GitLab 的项目页面下下载该附件。")])])])]),t._v(" "),s("h3",{attrs:{id:"工作流程"}},[t._v("工作流程")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://www.chenshaowen.com/blog/images/2017/11/cicd_pipeline_infograph.png",alt:"工作流程"}})]),t._v(" "),s("h2",{attrs:{id:"pipeline-管道"}},[t._v("Pipeline(管道)")]),t._v(" "),s("p",[t._v("完整的 "),s("code",[t._v("pipeline")]),t._v(" 配置可以参考"),s("a",{attrs:{href:"https://docs.gitlab.com/ee/user/project/pipelines/schedules.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方文档"),s("OutboundLink")],1)]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("PipeLine")]),t._v(" 即流水线是持续集成、发布、部署的最顶层的组件。由 "),s("code",[t._v("Stage")]),t._v(" 和 "),s("code",[t._v("Job")]),t._v(" 组成，由"),s("code",[t._v(".gitlab-ci.yml")]),t._v("来定义。按触发模式可分为："),s("code",[t._v("自动触发")]),t._v("和"),s("code",[t._v("人工触发")]),t._v("。")])]),t._v(" "),s("p",[t._v("一次 "),s("code",[t._v("Pipeline")]),t._v(" 其实相当于一次构建任务，里面可以包含多个流程，比如"),s("code",[t._v("自动构建")]),t._v("、"),s("code",[t._v("自动进行单元测试")]),t._v("、"),s("code",[t._v("自动进行代码检查")]),t._v("等流程 ;")]),t._v(" "),s("p",[t._v("任何提交或者 "),s("code",[t._v("Merge Request")]),t._v(" 的合并都可以触发 "),s("code",[t._v("Pipeline")]),t._v(" ;")]),t._v(" "),s("h3",{attrs:{id:"自动触发"}},[t._v("自动触发")]),t._v(" "),s("ul",[s("li",[t._v("定时触发")])]),t._v(" "),s("p",[t._v("比如我们可以通过配置"),s("a",{attrs:{href:"https://docs.gitlab.com/ee/api/pipeline_schedules.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Pipeline schedules API"),s("OutboundLink")],1),t._v("在每天的0:00进行一次操作。")]),t._v(" "),s("p",[t._v("创建一个新的项目管道计划。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("POST /projects/:id/pipeline_schedules\n")])])]),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("属性")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("类型")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("需要")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("id")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("int / string")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("是")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("经过身份验证的用户拥有的项目的ID或URL编码路径")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("description")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("string")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("是")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("管道进度表的描述")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("ref")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("string")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("是")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("分支/标签名称将被触发")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("cron")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("string")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("是")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("cron（例如0 1 * * *）（Cron语法）")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("cron_timezone")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("string")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("否")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("所支持的时区ActiveSupport::TimeZone（如Pacific Time (US & Canada)）（默认值：'UTC'）")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("active")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("boolean")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("否")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("管道计划的激活。如果假设置，管道计划将首先停用（默认值：true）")])])])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('curl --request POST --header "PRIVATE-TOKEN: k5ESFgWY2Qf5xEvDcFxZ" --form description="Build packages" --form ref="master" --form cron="0 0 * * *" --form cron_timezone="UTC" --form active="true" "https://gitlab.example.com/api/v4/projects/29/pipeline_schedules"\n')])])]),s("p",[t._v("执行结果:")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"id"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("14")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"description"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Build packages"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ref"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"master"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"cron"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0 0 * * *"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"cron_timezone"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"UTC"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"next_run_at"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2020-05-21T00:00:00.000Z"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"active"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"created_at"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2020-05-20T13:43:08.169Z"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"updated_at"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2020-05-20T13:43:08.169Z"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"last_pipeline"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token null keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"owner"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Administrator"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"username"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"root"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"id"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"state"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"active"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"avatar_url"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://www.gravatar.com/avatar/e64c7d89f26bd1972efa854d13d7dd61?s=80&d=identicon"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"web_url"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://gitlab.example.com/root"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[s("code",[t._v("Merge请求")]),t._v("触发")])]),t._v(" "),s("blockquote",[s("p",[t._v("此功能在"),s("code",[t._v("GitLab 11.6")]),t._v("版本中引入。")])]),t._v(" "),s("p",[t._v("在基础配置中,每次提交一个更改到分支的时候,GitLab都会运行一个管道。要在merge的时候触发需要配置CI/CD配置文件。")]),t._v(" "),s("p",[t._v("例如使用"),s("code",[t._v("only")]),t._v("或"),s("code",[t._v("except")]),t._v("运行管道以进行合并请求:")]),t._v(" "),s("div",{staticClass:"language-yml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("build")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("stage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" build\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ./build\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("only")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" master\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("stage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" test\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ./test\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("only")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" merge_requests\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("deploy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("stage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" deploy\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ./deploy\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("only")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" master\n")])])]),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),s("p",[t._v("使用此方法时，必须"),s("code",[t._v("only: - merge_requests")]),t._v("为每个作业指定。")]),t._v(" "),s("p",[t._v("在此示例中，管道包含"),s("code",[t._v("test")]),t._v("配置为在合并请求上运行的作业,在"),s("code",[t._v("build")]),t._v("与"),s("code",[t._v("deploy")]),t._v("工作没有"),s("code",[t._v("only: - merge_requests")]),t._v("参数，所以他们不会合并请求运行。")])]),t._v(" "),s("h3",{attrs:{id:"人工触发"}},[t._v("人工触发")]),t._v(" "),s("p",[t._v("手动去触发打包")]),t._v(" "),s("h2",{attrs:{id:"stages"}},[t._v("Stages")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("stages")]),t._v(" 表示构建阶段,一个 "),s("code",[t._v("Pipeline")]),t._v(" 中可以定义多个 "),s("code",[t._v("stage")]),t._v(",包括了 "),s("code",[t._v("build")]),t._v("、"),s("code",[t._v("test")]),t._v(" 和 "),s("code",[t._v("deploy")]),t._v("等阶段。")])]),t._v(" "),s("p",[s("strong",[t._v("stages有如下特点 :")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("所有 "),s("code",[t._v("stages")]),t._v(" 会按照顺序运行，即当一个 "),s("code",[t._v("stage")]),t._v(" 完成后，下一个 "),s("code",[t._v("stage")]),t._v(" 才会开始")])]),t._v(" "),s("li",[s("p",[t._v("只有当所有 "),s("code",[t._v("stages")]),t._v(" 成功完成后，该构建任务 ("),s("code",[t._v("Pipeline")]),t._v(") 才算成功")])]),t._v(" "),s("li",[s("p",[t._v("如果任何一个 "),s("code",[t._v("stage")]),t._v(" 失败，那么后面的 "),s("code",[t._v("stages")]),t._v(" 不会执行，该构建任务 ("),s("code",[t._v("Pipeline")]),t._v(") 失败")])])]),t._v(" "),s("div",{staticClass:"language-yml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("stages")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" build\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" test\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" deploy\n\njob 1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("stage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" build\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" make build dependencies\n\njob 2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("stage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" build\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" make build artifacts\n\njob 3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("stage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" test\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" make test\n\njob 4"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("stage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" deploy\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" make deploy\n")])])]),s("h3",{attrs:{id:"stages执行顺序"}},[t._v("Stages执行顺序")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAxOS83LzI5LzE2YzNjZjAzOTY1MzVkM2M",alt:"Stages执行顺序"}})]),t._v(" "),s("p",[t._v("以图中所示为例，整个 CI 环节包含三个 Stage："),s("code",[t._v("build、test 和deploy")]),t._v("。")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("build")]),t._v(" 被首先执行。如果发生错误，本次 CI 立刻失败；")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("test")]),t._v(" 在 build 成功执行完毕后执行。如果发生错误，本次 CI 立刻失败；")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("deploy")]),t._v(" 在 test 成功执行完毕后执行。如果发生错误，本次 CI 失败。")])])]),t._v(" "),s("h2",{attrs:{id:"jobs"}},[t._v("Jobs")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("Job")]),t._v("是 "),s("code",[t._v(".gitlab-ci.yml")]),t._v(" 文件中最基本的元素，表示某个"),s("code",[t._v("stage")]),t._v("里面执行的工作。一个"),s("code",[t._v("stage")]),t._v("中用户可以创建任意个任务；每个任务必须有一个独一无二的名字，但有一些保留 "),s("code",[t._v("keywords")]),t._v(" 不能用于"),s("code",[t._v("Job")]),t._v("名称。")])]),t._v(" "),s("p",[s("strong",[t._v("保留关键字")]),t._v(":")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("image")]),t._v("，")]),t._v(" "),s("li",[s("code",[t._v("services")]),t._v("，")]),t._v(" "),s("li",[s("code",[t._v("stages")]),t._v("，")]),t._v(" "),s("li",[s("code",[t._v("types")]),t._v("，")]),t._v(" "),s("li",[s("code",[t._v("before_script")]),t._v("，")]),t._v(" "),s("li",[s("code",[t._v("after_script")]),t._v("，")]),t._v(" "),s("li",[s("code",[t._v("variables")]),t._v("，")]),t._v(" "),s("li",[s("code",[t._v("cache")]),t._v("，")]),t._v(" "),s("li",[s("code",[t._v("include")]),t._v("。")])]),t._v(" "),s("p",[s("code",[t._v("Job")]),t._v("被定义为"),s("code",[t._v("顶级元素")]),t._v("，并且至少包括一条"),s("code",[t._v("script")]),t._v("语句，如果一个 "),s("code",[t._v("Job")]),t._v(" 没有显式地关联某个 "),s("code",[t._v("Stage")]),t._v("，则会被默认关联到 "),s("code",[t._v("test Stage")]),t._v("。")]),t._v(" "),s("p",[s("strong",[t._v("jobs有如下特点 :")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("相同 "),s("code",[t._v("stage")]),t._v(" 中的"),s("code",[t._v("jobs")]),t._v(" 会并行执行")])]),t._v(" "),s("li",[s("p",[t._v("相同 "),s("code",[t._v("stage")]),t._v(" 中的 "),s("code",[t._v("jobs")]),t._v(" 都执行成功时，该 "),s("code",[t._v("stage")]),t._v(" 才会成功")])]),t._v(" "),s("li",[s("p",[t._v("如果任何一个"),s("code",[t._v("job")]),t._v(" 失败，那么该 "),s("code",[t._v("stage")]),t._v(" 失败，即该构建任务 ("),s("code",[t._v("Pipeline")]),t._v(") 失败")])])]),t._v(" "),s("h3",{attrs:{id:"job执行流程"}},[t._v("Job执行流程")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200520181121774.png",alt:"在这里插入图片描述"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200520181035314.png",alt:"Job执行流程"}})]),t._v(" "),s("h2",{attrs:{id:"script"}},[t._v("Script")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("script")]),t._v("是一段由"),s("code",[t._v("Runner")]),t._v("执行的"),s("code",[t._v("shell")]),t._v("脚本。")])]),t._v(" "),s("div",{staticClass:"language-yml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("job")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" uname "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("a\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" bundle exec rspec\n")])])]),s("h2",{attrs:{id:"image-and-services"}},[t._v("image and services")]),t._v(" "),s("blockquote",[s("p",[t._v("这两个选项允许开发者指定任务运行时所需的自定义的docker镜像和服务。")])]),t._v(" "),s("div",{staticClass:"language-yml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#为每个作业定义不同的映像和服务")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("test:2.1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ruby"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.1")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" postgres"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9.3")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" bundle exec rake spec\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("test:2.2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ruby"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.2")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" postgres"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9.4")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" bundle exec rake spec\n")])])]),s("h2",{attrs:{id:"before-script和after-script"}},[t._v("before_script和after_script")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("before_script")]),t._v("是用于定义一些在所有任务执行前所需执行的命令, 包括部署工作，可以接受一个数组或者多行字符串。"),s("code",[t._v("after_script")]),t._v("用于定义所有job执行过后需要执行的命令，可以接受一个数组或者多行字符串。")])]),t._v(" "),s("div",{staticClass:"language-yml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#定义全局 before_script:")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("default")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("before_script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" global before script\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#覆盖全局before_script")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("job")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("before_script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" execute this instead of global before script\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" my command\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("after_script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" execute this after my script\n\n")])])]),s("h2",{attrs:{id:"配置示例"}},[t._v("配置示例")]),t._v(" "),s("div",{staticClass:"language-yml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("before_script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 激活 nodeenv 虚拟环境")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" source /data/gitlab"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("runner/paas"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("webfe/bin/activate\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看 node 版本")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" which node "),s("span",{pre:!0,attrs:{class:"token important"}},[t._v("&&")]),t._v(" node "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("version\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 为了能方便使用 npm ，给它取一个别名")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(' alias npm="/data/gitlab'),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v('runner/node/bin/npm"\n  '),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" which npm "),s("span",{pre:!0,attrs:{class:"token important"}},[t._v("&&")]),t._v(" npm "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("version\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("stages")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" build\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("build-test-webpack")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("variables")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 需要修改为项目的 GitLab 地址格式 ")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("CI_REPOSITORY_URL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      http"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//$GIT_USERNAME"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("$GIT_PASSWORD@gitlab.xxx.com/$CI_PROJECT_PATH.git\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 打包生成的文件存放目录")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("OUT_PUT_DIR")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      test\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("stage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" build\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 允许在 GitLab 页面上，直接下载 $OUT_PUT_DIR 内容")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("artifacts")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("paths")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" $OUT_PUT_DIR\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 没有 Git 版本的文件，设置缓存，可以避免每次 npm install 重复安装")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cache")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("untracked")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 开始执行打包编译命令，并提交到当前的 Git 仓库，具体的命令，需要根据项目编写，也可以放在一个 shell 文件，执行")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(' echo "start build test"\n    '),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" rm "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("rf  $CI_PROJECT_NAME $OUT_PUT_DIR\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" cd ./webpack "),s("span",{pre:!0,attrs:{class:"token important"}},[t._v("&&")]),t._v(" tnpm install "),s("span",{pre:!0,attrs:{class:"token important"}},[t._v("&&")]),t._v(" tnpm run build"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("test "),s("span",{pre:!0,attrs:{class:"token important"}},[t._v("&&")]),t._v(" cd ..\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" git clone $CI_REPOSITORY_URL\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" rm "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("rf $CI_PROJECT_NAME/$OUT_PUT_DIR "),s("span",{pre:!0,attrs:{class:"token important"}},[t._v("&&")]),t._v(" cp "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("r $OUT_PUT_DIR $CI_PROJECT_NAME/\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" cd $CI_PROJECT_NAME\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" git add $OUT_PUT_DIR\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" git status "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" build.log\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" date "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" build.log\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" git add build.log\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" git commit "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v('m "auto build'),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("test"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ci skip"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v('"\n    '),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" git push $CI_REPOSITORY_URL master\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(' echo "end build test"\n')])])])])}),[],!1,null,null,null);a.default=n.exports}}]);