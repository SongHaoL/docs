(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{733:function(t,_,s){"use strict";s.r(_);var v=s(14),e=Object(v.a)({},(function(){var t=this,_=t.$createElement,s=t._self._c||_;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"http相关知识"}},[t._v("HTTP相关知识")]),t._v(" "),s("h2",{attrs:{id:"http定义"}},[t._v("HTTP定义")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("HTTP(HyperText Transfer Protocal)")]),t._v("超文本传输协议，是一种用于分布式、协作式和超媒体信息系统的应用层协议,基于"),s("code",[t._v("TCP")]),t._v("协议实现。是客户端和服务器请求和应答的标准，用于从服务器传输超文本到本地浏览器，他可以使浏览器更高效，使网络传输减少。")])]),t._v(" "),s("p",[t._v("通过"),s("code",[t._v("HTTP")]),t._v("或者"),s("code",[t._v("HTTPS")]),t._v("协议请求的资源由统一资源标识符"),s("code",[t._v("URL(Uniform Resource Identifiers)")]),t._v("来标识。")]),t._v(" "),s("h2",{attrs:{id:"http特点"}},[t._v("HTTP特点")]),t._v(" "),s("p",[t._v("http主要有以下几个特点:")]),t._v(" "),s("ul",[s("li",[t._v("支持客户端/服务端模式")]),t._v(" "),s("li",[t._v("简单快速")]),t._v(" "),s("li",[t._v("灵活")]),t._v(" "),s("li",[t._v("无连接 限制每次连接只处理一个请求(keep-alive)")]),t._v(" "),s("li",[t._v("无状态 两次连接之间没有任何关系，每次都是一个新的连接，服务器不会记录前后的请求信息(cookie、session)")])]),t._v(" "),s("h2",{attrs:{id:"iso5层模型"}},[t._v("ISO5层模型")]),t._v(" "),s("p",[t._v("从下往上")]),t._v(" "),s("ol",[s("li",[s("code",[t._v("物理层")]),t._v(":放大或再生弱的信号,在两个电缆段之间复制每一个比特。")]),t._v(" "),s("li",[s("code",[t._v("数据链路层")]),t._v(":"),s("code",[t._v("SLIP(串行线路IP)")]),t._v(","),s("code",[t._v("PPP(点到点协议)")]),t._v("。")]),t._v(" "),s("li",[s("code",[t._v("网络层")]),t._v(":"),s("code",[t._v("IP(Internet Protocal)")]),t._v("网络协议,"),s("code",[t._v("ARP(Address Resolution Protocal)")]),t._v("地址解析协议,"),s("code",[t._v("ICMP(Internet Control Message Protocal)")]),t._v("因特网控制消息协议,"),s("code",[t._v("HDLC(High Data Link Control)")]),t._v("高级数据链路控制。")]),t._v(" "),s("li",[s("code",[t._v("传输层")]),t._v(":"),s("code",[t._v("TCP(Transition Control Protocal)")]),t._v("传输控制协议, "),s("code",[t._v("UDP(User Data Protocal)")]),t._v("用户数据协议。")]),t._v(" "),s("li",[s("code",[t._v("应用层")]),t._v(":"),s("code",[t._v("HTTP(HyperText Transfer Protocal)")]),t._v("超文本传输协议,"),s("code",[t._v("FTP(File Transfer Protocal)")]),t._v("文件传输协议, "),s("code",[t._v("SMTP(Simple Mall Transfer Protocal)")]),t._v("简单邮件传输协议,"),s("code",[t._v("POP3(Post Office Protocal)")]),t._v("邮局协议,"),s("code",[t._v("DNS(Domain Name System)")]),t._v("域名系统。")])]),t._v(" "),s("h2",{attrs:{id:"http请求响应模型"}},[t._v("HTTP请求响应模型")]),t._v(" "),s("p",[t._v("HTTP由请求和响应构成，是一个标准的客户端服务器模型(B/S)。")]),t._v(" "),s("p",[t._v("HTTP协议永远是客户端发起，然后服务器返回响应。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200207155322862.png",alt:"HTTP请求"}})]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[s("code",[t._v("HTTP")]),t._v("是一个无状态的协议。")]),t._v(" "),s("p",[t._v("无状态是指客户机（"),s("code",[t._v("Web")]),t._v("浏览器）和服务器之间不需要建立持久的连接，这意味着当一个客户端向服务器端发出请求，然后服务器返回响应("),s("code",[t._v("response")]),t._v(")，连接就被关闭了，在服务器端不保留连接的有关信息.")]),t._v(" "),s("p",[s("code",[t._v("HTTP")]),t._v("遵循请求("),s("code",[t._v("Request")]),t._v(")/应答("),s("code",[t._v("Response")]),t._v(")模型。客户机（浏览器）向服务器发送请求，服务器处理请求并返回适当的应答。所有"),s("code",[t._v("HTTP")]),t._v("连接都被构造成一套请求和应答。")])]),t._v(" "),s("h2",{attrs:{id:"http工作过程"}},[t._v("HTTP工作过程")]),t._v(" "),s("p",[t._v("一次"),s("code",[t._v("HTTP")]),t._v("操作称为一个"),s("code",[t._v("事务")]),t._v("，其工作整个过程如下：")]),t._v(" "),s("h3",{attrs:{id:"_1-地址解析"}},[t._v("1.地址解析")]),t._v(" "),s("p",[t._v("如用客户端浏览器请求这个页面："),s("code",[t._v("localhost.com:8080/index.htm")])]),t._v(" "),s("p",[t._v("从中分解出"),s("code",[t._v("协议名")]),t._v("、"),s("code",[t._v("主机名")]),t._v("、"),s("code",[t._v("端口")]),t._v("、"),s("code",[t._v("对象路径")]),t._v("等部分，对于我们的这个地址，解析得到的结果如下：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("协议名：http\n主机名：localhost.com\n端口：8080\n对象路径：/index.htm\n")])])]),s("p",[t._v("在这一步，需要域名系统"),s("code",[t._v("DNS")]),t._v("解析域名"),s("code",[t._v("localhost.com")]),t._v(",得到主机的"),s("code",[t._v("IP")]),t._v("地址。")]),t._v(" "),s("h3",{attrs:{id:"_2-封装http请求数据包"}},[t._v("2.封装HTTP请求数据包")]),t._v(" "),s("p",[t._v("把以上部分结合本机自己的信息，封装成一个HTTP请求数据包")]),t._v(" "),s("h3",{attrs:{id:"_3-封装成tcp包，建立tcp连接（tcp的三次握手）"}},[t._v("3.封装成"),s("code",[t._v("TCP")]),t._v("包，建立"),s("code",[t._v("TCP")]),t._v("连接（TCP的三次握手）")]),t._v(" "),s("p",[t._v("在"),s("code",[t._v("HTTP")]),t._v("工作开始之前，客户机（Web浏览器）首先要通过网络与服务器建立连接，该连接是通过"),s("code",[t._v("TCP")]),t._v("来完成的，该协议与IP协议共同构建"),s("code",[t._v("Internet")]),t._v("，即著名的"),s("code",[t._v("TCP/IP")]),t._v("协议族，因此"),s("code",[t._v("Internet")]),t._v("又被称作是"),s("code",[t._v("TCP/IP")]),t._v("网络。")]),t._v(" "),s("p",[s("code",[t._v("HTTP")]),t._v("是比"),s("code",[t._v("TCP")]),t._v("更高层次的应用层协议，根据规则，只有低层协议建立之后才能，才能进行高层协议的连接，因此，首先要建立"),s("code",[t._v("TCP")]),t._v("连接，一般"),s("code",[t._v("TCP")]),t._v("连接的端口号是"),s("code",[t._v("80")]),t._v("。这里是"),s("code",[t._v("8080")]),t._v("端口。")]),t._v(" "),s("h3",{attrs:{id:"_4-客户机发送请求命令"}},[t._v("4.客户机发送请求命令")]),t._v(" "),s("p",[t._v("建立连接后，客户机发送一个请求给服务器，请求方式的格式为："),s("code",[t._v("统一资源标识符（URL）")]),t._v("、"),s("code",[t._v("协议版本号")]),t._v("，后边是"),s("code",[t._v("MIME")]),t._v("信息包括请求修饰符、客户机信息和可内容。")]),t._v(" "),s("h3",{attrs:{id:"_5-服务器响应"}},[t._v("5.服务器响应")]),t._v(" "),s("p",[t._v("服务器接到请求后，给予相应的响应信息，其格式为一个"),s("code",[t._v("状态行")]),t._v("，包括信息的"),s("code",[t._v("协议版本号")]),t._v("、"),s("code",[t._v("一个成功或错误的代码")]),t._v("，后边是"),s("code",[t._v("MIME")]),t._v("信息包括服务器信息、实体信息和可能的内容。")]),t._v(" "),s("p",[t._v("实体消息是服务器向浏览器发送头信息后，它会发送一个空白行来表示头信息的发送到此为结束，接着，它就以"),s("code",[t._v("Content-Type")]),t._v("应答头信息所描述的格式发送用户所请求的实际数据。")]),t._v(" "),s("h3",{attrs:{id:"_6-服务器关闭tcp连接"}},[t._v("6.服务器关闭TCP连接")]),t._v(" "),s("p",[t._v("一般情况下，一旦"),s("code",[t._v("Web")]),t._v("服务器向浏览器发送了请求数据，它就要关闭"),s("code",[t._v("TCP")]),t._v("连接，然后如果浏览器或者服务器在其头信息加入了这行代码:")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("Connection"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("keep"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("alive\n")])])]),s("p",[s("code",[t._v("TCP")]),t._v("连接在发送后将仍然保持打开状态，于是，浏览器可以继续通过相同的连接发送请求。保持连接节省了为每个请求建立新连接所需的时间，还节约了网络带宽。")]),t._v(" "),s("h3",{attrs:{id:"http工作过程用到的概念"}},[t._v("HTTP工作过程用到的概念")]),t._v(" "),s("p",[s("strong",[t._v("报文格式")])]),t._v(" "),s("p",[t._v("HTTP1.0的报文有两种类型：请求和响应。其报文格式分别为：")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[s("strong",[t._v("请求报文格式")])]),t._v(" "),s("ul",[s("li",[t._v("请求方法 URL HTTP/版本号")]),t._v(" "),s("li",[t._v("请求首部字段(可选)")]),t._v(" "),s("li",[t._v("空行")]),t._v(" "),s("li",[t._v("body(只对Post请求有效)")])])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("GET http://m.baidu.com/ HTTP/1.1\nHost m.baidu.com\nConnection Keep-Alive\n...// 其他header\nkey=iOS\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[s("strong",[t._v("响应报文格式")])]),t._v(" "),s("ul",[s("li",[t._v("HTTP/版本号 返回码 返回码描述")]),t._v(" "),s("li",[t._v("应答首部字段(可选)")]),t._v(" "),s("li",[t._v("空行")]),t._v(" "),s("li",[t._v("body")])])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("HTTP/1.1 200 OK\nContent-Type text/html;charset=UTF-8\n...// 其他header\n\n<html>...\n")])])]),s("h3",{attrs:{id:"url的结构"}},[t._v("URL的结构")]),t._v(" "),s("p",[t._v("使用"),s("code",[t._v("HTTP")]),t._v("协议访问资源是通过"),s("code",[t._v("URL（Uniform Resource Locator）")]),t._v("统一资源定位符来实现的。URL的格式如下：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("scheme://host:port/path?query\n\nscheme: 表示协议，如http, https, ftp等；\nhost: 表示所访问资源所在的主机名：如：www.baidu.com;\nport: 表示端口号，默认为80；\npath: 表示所访问的资源在目标主机上的储存路径；\nquery: 表示查询条件；\n\n例如： http://www.baidu.com/search?words=Baidu\n")])])]),s("h3",{attrs:{id:"http的请求方法"}},[t._v("HTTP的请求方法")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("GET")]),t._v(": 获取URL指定的资源；")]),t._v(" "),s("li",[s("code",[t._v("POST")]),t._v("：传输实体信息")]),t._v(" "),s("li",[s("code",[t._v("PUT")]),t._v("：上传文件")]),t._v(" "),s("li",[s("code",[t._v("DELETE")]),t._v("：删除文件")]),t._v(" "),s("li",[s("code",[t._v("HEAD")]),t._v("：获取报文首部，与GET相比，不返回报文主体部分")]),t._v(" "),s("li",[s("code",[t._v("OPTIONS")]),t._v("：询问支持的方法")]),t._v(" "),s("li",[s("code",[t._v("TRACE")]),t._v("：追踪请求的路径；")]),t._v(" "),s("li",[s("code",[t._v("CONNECT")]),t._v("：要求在与代理服务器通信时建立隧道，使用隧道进行"),s("code",[t._v("TCP")]),t._v("通信。主要使用"),s("code",[t._v("SSL")]),t._v("和"),s("code",[t._v("TLS")]),t._v("将数据加密后通过网络隧道进行传输。")])]),t._v(" "),s("h3",{attrs:{id:"报文字段"}},[t._v("报文字段")]),t._v(" "),s("p",[s("code",[t._v("HTTP")]),t._v('首部字段由字段名和字段值组成，中间以":"分隔，如'),s("code",[t._v("Content-Type: text/html.")]),t._v("其中，同一个字段名可对应多个字段值。")]),t._v(" "),s("p",[s("code",[t._v("HTTP")]),t._v("的报文字段分为5种：")]),t._v(" "),s("ol",[s("li",[t._v("请求报文字段")]),t._v(" "),s("li",[t._v("应答报文字段")]),t._v(" "),s("li",[t._v("实体首部字段")]),t._v(" "),s("li",[t._v("通用报文字段")]),t._v(" "),s("li",[t._v("其他报文字段")])]),t._v(" "),s("h4",{attrs:{id:"请求报文字段"}},[t._v("请求报文字段")]),t._v(" "),s("p",[s("code",[t._v("HTTP")]),t._v("请求中支持的报文字段。")]),t._v(" "),s("blockquote"),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("Accept")]),t._v("：客户端能够处理的媒体类型。如"),s("code",[t._v("text/html")]),t._v(", 表示客户端让服务器返回"),s("code",[t._v("html")]),t._v("类型的数据，如果没有，返回"),s("code",[t._v("text")]),t._v("类型的也可以。媒体类型的格式一般为："),s("code",[t._v("type/subType")]),t._v(", 表示优先请求"),s("code",[t._v("subType")]),t._v("类型的数据，如果没有，返回type类型数据也可以。")]),t._v(" "),s("p",[s("strong",[t._v("常见的媒体类型：")])]),t._v(" "),s("ul",[s("li",[t._v("文本文件："),s("code",[t._v("text/html")]),t._v(", "),s("code",[t._v("text/plain")]),t._v(", "),s("code",[t._v("text/css")]),t._v(", "),s("code",[t._v("application/xml")])]),t._v(" "),s("li",[t._v("图片文件："),s("code",[t._v("iamge/jpeg")]),t._v(", "),s("code",[t._v("image/gif")]),t._v(", "),s("code",[t._v("image/png")]),t._v(";")]),t._v(" "),s("li",[t._v("视频文件："),s("code",[t._v("video/mpeg")])]),t._v(" "),s("li",[t._v("应用程序使用的二进制文件："),s("code",[t._v("application/octet-stream")]),t._v(", "),s("code",[t._v("application/zip")])])])])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[s("code",[t._v("Accept")]),t._v("字段可设置多个字段值，这样服务器依次进行匹配，并返回最先匹配到的媒体类型，当然，也可通过q参数来设置\n媒体类型的权重，权重越高，优先级越高。q的取值为[0, 1], 可取小数点后3位，默认为1.0。例如：\n"),s("code",[t._v("Accept: text/html, application/xml; q=0.9, */*")])])]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("Accept-Charset")]),t._v(": 表示客户端支持的字符集。例如："),s("code",[t._v("Accept-Charset: GB2312, ISO-8859-1")])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Accept-Encoding")]),t._v("： 表示客户端支持的内容编码格式。如："),s("code",[t._v("Accept-Encoding：gzip")])]),t._v(" "),s("p",[s("strong",[t._v("常用的内容编码：")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("gzip")]),t._v(": 由文件压缩程序"),s("code",[t._v("gzip")]),t._v("生成的编码格式；")]),t._v(" "),s("li",[s("code",[t._v("compress")]),t._v(": 由"),s("code",[t._v("Unix")]),t._v("文件压缩程序"),s("code",[t._v("compress")]),t._v("生成的编码格式；")]),t._v(" "),s("li",[s("code",[t._v("deflate")]),t._v(": 组合使用"),s("code",[t._v("zlib")]),t._v("和"),s("code",[t._v("deflate")]),t._v("压缩算法生成的编码格式；")]),t._v(" "),s("li",[s("code",[t._v("identity")]),t._v("：默认的编码格式，不执行压缩。")])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Accept-Language")]),t._v("：表示客户端支持的语言。如："),s("code",[t._v("Accept-Language: zh-cn, en")])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Authorization")]),t._v("：表示客户端的认证信息。客户端在访问需要认证的也是时，服务器会返回401，随后客户端将认证信息加在"),s("code",[t._v("Authorization")]),t._v("字段中发送到服务器后，如果认证成功，则返回200. 如Linux公社下的Ftp服务器就是这种流程：ftp://ftp1.linuxidc.com。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Host")]),t._v(": 表示访问资源所在的主机名，即URL中的域名部分。如：m.baidu.com")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("If-Match")]),t._v(": "),s("code",[t._v("If-Match")]),t._v("的值与所请求资源的"),s("code",[t._v("ETag")]),t._v("值（实体标记，与资源相关联。资源变化，实体标记跟着变化）一致时，服务器才处理此请求。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("If-Modified-Since")]),t._v(": 用于确认客户端拥有的本地资源的时效性。 如果客户端请求的资源在"),s("code",[t._v("If-Modified-Since")]),t._v("指定的时间后发生了改变，则服务器处理该请求。如：If-Modified-Since:Thu 09 Jul 2018 00:00:00, 表示如果客户端请求的资源在2018年1月9号0点之后发生了变化，则服务器处理改请求。通过该字段我们可解决以下问题：有一个包含大量数据的接口，且实时性较高，我们在刷新时就可使用改字段，从而避免多余的流量消耗。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("If-None-Match")]),t._v(": "),s("code",[t._v("If-Match")]),t._v("的值与所请求资源的"),s("code",[t._v("ETag")]),t._v("值不一致时服务器才处理此请求。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("If-Range")]),t._v("： "),s("code",[t._v("If-Range")]),t._v("的值（ETag值或时间）与所访问资源的ETag值或时间相一致时，服务器处理此请求，并返回Range字段中设置的指定范围的数据。如果不一致，则返回所有内容。"),s("code",[t._v("If-Range")]),t._v("其实算是"),s("code",[t._v("If-Match")]),t._v("的升级版，因为它的值不匹配时，依然能够返回数据，而"),s("code",[t._v("If-Match")]),t._v("不匹配时，请求不会被处理，需要数据时需再次进行请求。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("If-Unmodified-Since")]),t._v("：与"),s("code",[t._v("If-Modified-Since")]),t._v("相反，表示请求的资源在指定的时间之后未发生变化时，才处理请求，否则返回412。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Max-Forwards")]),t._v("：表示请求可经过的服务器的最大数目，请求每被转发一次，"),s("code",[t._v("Max-Forwards")]),t._v("减1，当"),s("code",[t._v("Max-Forwards")]),t._v("为0时，所在的服务器将不再转发，而是直接做出应答。通过此字段可定位通信问题，比如之前支付宝光纤被挖断，就可通过设置Max-Forwards来定位大概的位置。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Proxy-Authorization")]),t._v("：当客户端接收到来自代理服务器的认证质询时，客户端会将认证信息添加到"),s("code",[t._v("Proxy-Authorization")]),t._v("来完成认证。与"),s("code",[t._v("Authorization")]),t._v("类似，只不过"),s("code",[t._v("Authorization")]),t._v("是发生在客户端与服务端之间。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Range")]),t._v("：获取部分资源，例如：Range: bytes=500-1000表示获取指定资源的第500到1000字节之间的内容，如果服务器能够正确处理，则返回206作为应答，表示返回了部分数据，如果不能处理这种范围请求，则以200作为应答，返回完整的数据，")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Referer")]),t._v("：告知服务器请求是从哪个页面发起的。例如在百度首页中搜索某个关键字，结果页面的请求头部就会有这个字段，其值为https://www.baidu.com/。通过这个字段可统计广告的点击情况。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("User-Agent")]),t._v("：将发起请求的浏览器和代理名称等信息发送给服务端，例如：User-Agent: Mozilla/5.0 (Linux; Android 5.0; SM-G900P Build/LRX21T) AppleWebKit/537.36(KHTML, like Gecko) Chrome/63.0.3239.84 Mobile Safari/537.36")])])]),t._v(" "),s("h4",{attrs:{id:"应答报文字段"}},[t._v("应答报文字段")]),t._v(" "),s("p",[s("code",[t._v("HTTP")]),t._v("应答中支持的报文字段。")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("Age")]),t._v("：服务端告知客户端，源服务器（而不是缓存服务器）在多久之前创建了响应。单位为秒。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("ETag")]),t._v("： 实体资源的标识，可用来请求指定的资源。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Location")]),t._v("：请求的资源所在的新位置。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Proxy-Authenticate")]),t._v("：将代理服务器需要的认证信息发送给客户端。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Retry-After")]),t._v("：服务端告知客户端多久之后再重试，一般与503和3xx重定向类型的应答一起使用。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Server")]),t._v("：告知服务端当前使用的"),s("code",[t._v("HTTP")]),t._v("服务器应用程序的相关信息。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("WWW-Authenticate")]),t._v("：告知客户端适用于所访问资源的认证方案，如"),s("code",[t._v("Basic")]),t._v("或"),s("code",[t._v("Digest")]),t._v("。"),s("code",[t._v("401")]),t._v("的响应中肯定带有"),s("code",[t._v("WWW-Authenticate")]),t._v("字段。")])])]),t._v(" "),s("h4",{attrs:{id:"实体首部字段"}},[t._v("实体首部字段")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("Allow")]),t._v("：通知客户端，服务器所支持的请求方法。但服务器收到不支持的请求方法时，会以405（Method Not Allowed）作为响应。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Content-Encoding")]),t._v("：告知客户端，服务器对资源的内容编码。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Content-Language")]),t._v("：告知客户端，资源所使用的自然语言。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Content-Length")]),t._v("：告知客户端资源的长度。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Content-Location")]),t._v("：告知客户端资源所在的位置。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Content-Type")]),t._v("：告知客户端资源的媒体类型，取值同请求首部字段中的Accept。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Expires")]),t._v("：告知客户端资源的失效日期。可用于对缓存的处理。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Last-Modified")]),t._v("：告知客户端资源最后一次修改的时间。")])])]),t._v(" "),s("h4",{attrs:{id:"通用报文字段"}},[t._v("通用报文字段")]),t._v(" "),s("p",[t._v("即可在"),s("code",[t._v("HTTP")]),t._v("请求中使用，也可在"),s("code",[t._v("HTTP")]),t._v("应答中使用的报文字段。")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("Cache-Control")]),t._v("：控制缓存行为；")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Connection")]),t._v("：管理持久连接，设置其值为"),s("code",[t._v("Keep-Alive")]),t._v("可实现长连接。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Date")]),t._v("：创建"),s("code",[t._v("HTTP")]),t._v("报文的日期和时间。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Pragma")]),t._v("："),s("code",[t._v("Http/1.1")]),t._v("之前的历史遗留字段，仅作为"),s("code",[t._v("HTTP/1.0")]),t._v("向后兼容而定义，虽然是通用字段，当通常被使用在客户单的请求中，如Pragma: no-cache, 表示客户端在请求过程中不循序服务端返回缓存的数据；")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Transfer-Encoding")]),t._v("：规定了传输报文主题时使用的传输编码，如"),s("code",[t._v("Transfer-Encoding: chunked")])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Upgrade")]),t._v(": 用于检查"),s("code",[t._v("HTTP")]),t._v("协议或其他协议是否有可使用的更高版本。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Via")]),t._v("：追踪客户端和服务端之间的报文的传输路径，还可避免会环的发生，所以在经过代理时必须添加此字段。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Warning")]),t._v("："),s("code",[t._v("Http/1.1")]),t._v("的报文字段，从"),s("code",[t._v("Http/1.0")]),t._v("的"),s("code",[t._v("AfterRetry")]),t._v("演变而来，用来告知用户一些与缓存相关的警告信息。")])])]),t._v(" "),s("h4",{attrs:{id:"其他报文字段"}},[t._v("其他报文字段")]),t._v(" "),s("p",[t._v("这些字段不是"),s("code",[t._v("HTTP")]),t._v("协议中定义的，但被广泛应用于"),s("code",[t._v("HTTP")]),t._v("请求中。")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("Cookie")]),t._v("：属于请求型报文字段，在请求时添加"),s("code",[t._v("Cookie")]),t._v(", 以实现"),s("code",[t._v("HTTP")]),t._v("的状态记录。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Set-Cookie")]),t._v("：属于应答型报文字段。服务器给客户端传递"),s("code",[t._v("Cookie")]),t._v("信息时，就是通过此字段实现的。")])])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[s("code",[t._v("Set-Cookie")]),t._v("的字段属性：")]),t._v(" "),s("p",[s("code",[t._v("NAME=VALUE")]),t._v("：赋予"),s("code",[t._v("Cookie")]),t._v("的名称和值；")]),t._v(" "),s("p",[s("code",[t._v("expires=DATE")]),t._v(": "),s("code",[t._v("Cookie")]),t._v("的有效期；")]),t._v(" "),s("p",[s("code",[t._v("path=PATH")]),t._v(": 将服务器上的目录作为"),s("code",[t._v("Cookie")]),t._v("的适用对象，若不指定，则默认为文档所在的文件目录；")]),t._v(" "),s("p",[s("code",[t._v("domin=域名")]),t._v("：作为"),s("code",[t._v("Cookies")]),t._v("适用对象的域名，若不指定，则默认为创建"),s("code",[t._v("Cookie")]),t._v("的服务器域名；")]),t._v(" "),s("p",[s("code",[t._v("Secure")]),t._v(": 仅在"),s("code",[t._v("HTTPS")]),t._v("安全通信是才会发送"),s("code",[t._v("Cookie")]),t._v("；")]),t._v(" "),s("p",[s("code",[t._v("HttpOnly")]),t._v(": 使"),s("code",[t._v("Cookie")]),t._v("不能被JS脚本访问；")]),t._v(" "),s("p",[t._v("如："),s("code",[t._v("Set-Cookie:BDSVRBFE=Go; max-age=10; domain=m.baidu.com; path=/")])])]),t._v(" "),s("h2",{attrs:{id:"http应答状态码"}},[t._v("HTTP应答状态码")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("状态码")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("类别")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("1xx")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("Informational")]),t._v("(信息性状态码)")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("请求正在被处理")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("2xx")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("Success")]),t._v("(成功状态码)")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("请求处理成功")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("3xx")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("Redirection")]),t._v("(重定向状态码)")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("需要进行重定向")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("4xx")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("Client Error")]),t._v("(客户端状态码)")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("服务器无法处理请求")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("5xx")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("Server Error")]),t._v("(服务端状态码)")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("服务器处理请求时出错")])])])]),t._v(" "),s("h3",{attrs:{id:"常见应答状态码"}},[t._v("常见应答状态码")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200208133106769.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3hqbDI3MTMxNA==,size_16,color_FFFFFF,t_70",alt:"常见http状态码"}})]),t._v(" "),s("h2",{attrs:{id:"http缺点"}},[t._v("HTTP缺点")]),t._v(" "),s("ol",[s("li",[t._v("通信使用明文，可能被窃听")]),t._v(" "),s("li",[t._v("不验证通信方的身份，可能遭遇伪装")]),t._v(" "),s("li",[t._v("无法证明报文的完整性，有可能遭遇篡改")])]),t._v(" "),s("p",[t._v("以上是"),s("code",[t._v("HTTP")]),t._v("的缺点，这在网络通信中对企业安全是很致命的问题。那"),s("code",[t._v("HTTPS")]),t._v("能解决这些问题吗？下面讲讲"),s("code",[t._v("HTTPS")]),t._v("。")]),t._v(" "),s("h2",{attrs:{id:"https定义"}},[t._v("HTTPS定义")]),t._v(" "),s("p",[s("code",[t._v("HTTP")]),t._v("+加密+认证+完整性保护 = "),s("code",[t._v("HTTPS")])]),t._v(" "),s("blockquote",[s("p",[t._v("超文本传输安全协议（"),s("code",[t._v("Hypertext Transfer Protocol Secure")]),t._v("，缩写："),s("code",[t._v("HTTPS")]),t._v("，常称为"),s("code",[t._v("HTTP over TLS")]),t._v("，"),s("code",[t._v("HTTP over SSL")]),t._v("或"),s("code",[t._v("HTTP Secure")]),t._v("）是一种通过计算机网络进行安全通信的传输协议。"),s("code",[t._v("HTTPS")]),t._v("经由"),s("code",[t._v("HTTP")]),t._v("进行通信，但利用"),s("code",[t._v("SSL/TLS")]),t._v("来加密数据包。")])]),t._v(" "),s("p",[s("code",[t._v("HTTP")]),t._v("协议采用明文传输信息，存在信息窃听、信息篡改和信息劫持的风险，而协议"),s("code",[t._v("TLS/SSL")]),t._v("具有身份验证、信息加密和完整性校验的功能，可以避免此类问题发生。")]),t._v(" "),s("p",[s("code",[t._v("TLS/SSL")]),t._v("全称安全传输层协议"),s("code",[t._v("Transport Layer Security")]),t._v(", 是介于"),s("code",[t._v("TCP")]),t._v("和"),s("code",[t._v("HTTP")]),t._v("之间的一层安全协议，不影响原有的"),s("code",[t._v("TCP")]),t._v("协议和"),s("code",[t._v("HTTP")]),t._v("协议，所以使用"),s("code",[t._v("HTTPS")]),t._v("基本上不需要对"),s("code",[t._v("HTTP")]),t._v("页面进行太多的改造。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/2020020813541846.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3hqbDI3MTMxNA==,size_16,color_FFFFFF,t_70",alt:"https组成"}})]),t._v(" "),s("p",[s("code",[t._v("HTTPS")]),t._v("是在"),s("code",[t._v("HTTP")]),t._v("上建立"),s("code",[t._v("SSL")]),t._v("加密层，并对传输数据进行加密，是"),s("code",[t._v("HTTP")]),t._v("协议的安全版。"),s("code",[t._v("HTTPS")]),t._v("主要作用是：")]),t._v(" "),s("ul",[s("li",[t._v("对数据进行加密，并建立一个信息安全通道，来保证传输过程中的数据安全。")]),t._v(" "),s("li",[t._v("对网站服务器进行真实身份认证。")])]),t._v(" "),s("h2",{attrs:{id:"tls-ssl工作原理"}},[t._v("TLS/SSL工作原理")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[s("code",[t._v("HTTPS")]),t._v("协议的主要功能基本都依赖于"),s("code",[t._v("TLS/SSL协议")]),t._v("，"),s("code",[t._v("TLS/SSL")]),t._v("的功能实现主要依赖于三类基本算法："),s("code",[t._v("散列函数 Hash")]),t._v("、"),s("code",[t._v("对称加密")]),t._v("和"),s("code",[t._v("非对称加密")]),t._v("。")]),t._v(" "),s("p",[s("strong",[t._v("其利用非对称加密实现身份认证和密钥协商，对称加密算法采用协商的密钥对数据加密，基于散列函数验证信息的完整性。")])])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200208140622882.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3hqbDI3MTMxNA==,size_16,color_FFFFFF,t_70",alt:"TSL/SSL"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200208140631461.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3hqbDI3MTMxNA==,size_16,color_FFFFFF,t_70",alt:"HTTPS建立过程"}})]),t._v(" "),s("h3",{attrs:{id:"散列函数hash"}},[t._v("散列函数Hash")]),t._v(" "),s("p",[t._v("常见的有 "),s("code",[t._v("MD5")]),t._v("、"),s("code",[t._v("SHA1")]),t._v("、"),s("code",[t._v("SHA256")]),t._v("，该类函数特点是函数单向不可逆、对输入非常敏感、输出长度固定，针对数据的任何修改都会改变散列函数的结果，用于防止信息篡改并验证数据的完整性;")]),t._v(" "),s("p",[t._v("在信息传输过程中，散列函数不能单独实现信息防篡改，因为明文传输，中间人可以修改信息之后重新计算信息摘要，因此需要对传输的信息以及信息摘要进行加密;")]),t._v(" "),s("h3",{attrs:{id:"对称加密"}},[t._v("对称加密")]),t._v(" "),s("p",[t._v("常见的有"),s("code",[t._v("AES-CBC")]),t._v("、"),s("code",[t._v("DES")]),t._v("、"),s("code",[t._v("3DES")]),t._v("、"),s("code",[t._v("AES-GCM")]),t._v("等，相同的密钥可以用于信息的加密和解密，掌握密钥才能获取信息，能够防止信息窃听，通信方式是1对1;")]),t._v(" "),s("p",[t._v("对称加密的优势是信息传输1对1，需要共享相同的密码，密码的安全是保证信息安全的基础，服务器和 N 个客户端通信，需要维持 N 个密码记录，且缺少修改密码的机制;")]),t._v(" "),s("h3",{attrs:{id:"非对称加密"}},[t._v("非对称加密")]),t._v(" "),s("p",[t._v("即常见的 "),s("code",[t._v("RSA")]),t._v(" 算法，还包括 "),s("code",[t._v("ECC")]),t._v("、"),s("code",[t._v("DH")]),t._v(" 等算法，算法特点是，密钥成对出现，一般称为公钥(公开)和私钥(保密)，公钥加密的信息只能私钥解开，私钥加密的信息只能公钥解开。因此掌握公钥的不同客户端之间不能互相解密信息，只能和掌握私钥的服务器进行加密通信，服务器可以实现1对多的通信，客户端也可以用来验证掌握私钥的服务器身份。")]),t._v(" "),s("p",[t._v("非对称加密的特点是信息传输1对多，服务器只需要维持一个私钥就能够和多个客户端进行加密通信，但服务器发出的信息能够被所有的客户端解密，且该算法的计算复杂，加密速度慢。")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[s("strong",[t._v("结合三类算法的特点，"),s("code",[t._v("TLS")]),t._v("的基本工作方式是:")])]),t._v(" "),s("p",[t._v("客户端使用非对称加密与服务器进行通信，实现身份验证并协商对称加密使用的密钥，然后对称加密算法采用协商密钥对信息以及信息摘要进行加密通信，不同的节点之间采用的对称密钥不同，从而可以保证信息只能通信双方获取。")])]),t._v(" "),s("h2",{attrs:{id:"pki体系"}},[t._v("PKI体系")]),t._v(" "),s("h3",{attrs:{id:"rsa身份验证的隐患"}},[t._v("RSA身份验证的隐患")]),t._v(" "),s("p",[t._v("身份验证和密钥协商是"),s("code",[t._v("TLS")]),t._v("的基础功能，要求的前提是合法的服务器掌握着对应的私钥。但RSA算法无法确保服务器身份的合法性，因为公钥并不包含服务器的信息，存在安全隐患:")]),t._v(" "),s("ul",[s("li",[t._v("客户端C和服务器S进行通信，中间节点M截获了二者的通信;")]),t._v(" "),s("li",[t._v("节点M自己计算产生一对公钥pub_M和私钥pri_M;")]),t._v(" "),s("li",[t._v("C向S请求公钥时，M把自己的公钥pub_M发给了C;")]),t._v(" "),s("li",[t._v('C使用公钥 pub_M加密的数据能够被M解密，因为M掌握对应的私钥pri_M，而C无法根据公钥信息判断服务器的身份，从而 C和 * M之间建立了"可信"加密连接;')]),t._v(" "),s("li",[t._v("中间节点 M和服务器S之间再建立合法的连接，因此 C和 S之间通信被M完全掌握，M可以进行信息的窃听、篡改等操作。")]),t._v(" "),s("li",[t._v("另外，服务器也可以对自己的发出的信息进行否认，不承认相关信息是自己发出。")])]),t._v(" "),s("p",[t._v("因此该方案下至少存在两类问题："),s("code",[t._v("中间人攻击")]),t._v("和"),s("code",[t._v("信息抵赖")]),t._v("。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/2020020814180822.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3hqbDI3MTMxNA==,size_16,color_FFFFFF,t_70",alt:"RSA身份验证的隐患"}})]),t._v(" "),s("h3",{attrs:{id:"身份验证ca和证书"}},[t._v("身份验证CA和证书")]),t._v(" "),s("p",[t._v("解决上述身份验证问题的关键是确保获取的公钥途径是合法的，能够验证服务器的身份信息，为此需要引入权威的第三方机构CA(如沃通CA)。")]),t._v(" "),s("p",[s("code",[t._v("CA")]),t._v('负责核实公钥的拥有者的信息，并颁发认证"证书"，同时能够为使用者提供证书验证服务，即'),s("code",[t._v("PKI")]),t._v("体系(PKI基础知识)。")]),t._v(" "),s("p",[t._v('基本的原理为，CA负责审核信息，然后对关键信息利用私钥进行"签名"，公开对应的公钥，客户端可以利用公钥验证签名。CA也可以吊销已经签发的证书，基本的方式包括两类 '),s("code",[t._v("CRL")]),t._v(" 文件和 "),s("code",[t._v("OCSP")]),t._v("。CA使用具体的流程如下：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200208142030173.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3hqbDI3MTMxNA==,size_16,color_FFFFFF,t_70",alt:"CA流程"}})]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("服务方S向第三方机构CA提交公钥、组织信息、个人信息(域名)等信息并申请认证;")])]),t._v(" "),s("li",[s("p",[t._v("CA通过线上、线下等多种手段验证申请者提供信息的真实性，如组织是否存在、企业是否合法，是否拥有域名的所有权等;")])]),t._v(" "),s("li",[s("p",[t._v("如信息审核通过，CA会向申请者签发认证文件-证书。")]),t._v(" "),s("p",[t._v("证书包含以下信息："),s("code",[t._v("申请者公钥")]),t._v("、"),s("code",[t._v("申请者的组织信息和个人信息")]),t._v("、"),s("code",[t._v("签发机构CA的信息")]),t._v("、"),s("code",[t._v("有效时间")]),t._v("、"),s("code",[t._v("证书序列号等信息的明文")]),t._v("，同时包含"),s("code",[t._v("一个签名")]),t._v(";")]),t._v(" "),s("p",[t._v("签名的产生算法：首先，使用散列函数计算公开的明文信息的信息摘要，然后，采用 CA的私钥对信息摘要进行加密，密文即签名;")])]),t._v(" "),s("li",[s("p",[t._v("客户端 C 向服务器 S 发出请求时，S 返回证书文件;")])]),t._v(" "),s("li",[s("p",[t._v("客户端C读取证书中的相关的明文信息，采用相同的散列函数计算得到信息摘要，然后，利用对应 CA的公钥解密签名数据，对比证书的信息摘要，如果一致，则可以确认证书的合法性，即公钥合法;")])]),t._v(" "),s("li",[s("p",[t._v("客户端然后验证证书相关的域名信息、有效时间等信息;")])]),t._v(" "),s("li",[s("p",[t._v("客户端会内置信任CA的证书信息(包含公钥)，如果CA不被信任，则找不到对应 CA的证书，证书也会被判定非法。")])])])]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),s("p",[s("strong",[t._v("在这个过程注意几点：")])]),t._v(" "),s("ol",[s("li",[s("p",[t._v("申请证书不需要提供私钥，确保私钥永远只能服务器掌握;")])]),t._v(" "),s("li",[s("p",[t._v("证书的合法性仍然依赖于非对称加密算法，证书主要是增加了服务器信息以及签名;")])]),t._v(" "),s("li",[s("p",[t._v('内置 CA 对应的证书称为根证书，颁发者和使用者相同，自己为自己签名，即自签名证书（为什么说"部署自签SSL证书非常不安全"）')])]),t._v(" "),s("li",[s("p",[t._v("证书=公钥+申请者与颁发者信息+签名;")])])])]),t._v(" "),s("h3",{attrs:{id:"证书链"}},[t._v("证书链")]),t._v(" "),s("p",[t._v("如 CA根证书和服务器证书中间增加一级证书机构，即"),s("code",[t._v("中间证书")]),t._v("，证书的产生和验证原理不变，只是增加一层验证，只要最后能够被任何信任的CA根证书验证合法即可。")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("服务器证书 "),s("code",[t._v("server.pem")]),t._v(" 的签发者为中间证书机构 "),s("code",[t._v("inter")]),t._v("，"),s("code",[t._v("inter")]),t._v(" 根据证书 "),s("code",[t._v("inter.pem")]),t._v(" 验证 "),s("code",[t._v("server.pem")]),t._v(" 确实为自己签发的有效证书;")])]),t._v(" "),s("li",[s("p",[t._v("中间证书 "),s("code",[t._v("inter.pem")]),t._v(" 的签发 CA 为 "),s("code",[t._v("root")]),t._v("，"),s("code",[t._v("root")]),t._v(" 根据证书 "),s("code",[t._v("root.pem")]),t._v(" 验证 "),s("code",[t._v("inter.pem")]),t._v(" 为自己签发的合法证书;")])]),t._v(" "),s("li",[s("p",[t._v("客户端内置信任 CA 的 "),s("code",[t._v("root.pem")]),t._v("证书，因此服务器证书 "),s("code",[t._v("server.pem")]),t._v(" 的被信任。")])])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200208142837116.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3hqbDI3MTMxNA==,size_16,color_FFFFFF,t_70",alt:"证书链"}})]),t._v(" "),s("p",[t._v("服务器证书、中间证书与根证书在一起组合成一条合法的证书链，证书链的验证是自下而上的信任传递的过程。")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[s("strong",[t._v("二级证书结构存在的优势：")])]),t._v(" "),s("ol",[s("li",[s("p",[t._v("减少根证书结构的管理工作量，可以更高效的进行证书的审核与签发;")])]),t._v(" "),s("li",[s("p",[t._v("根证书一般内置在客户端中，私钥一般离线存储，一旦私钥泄露，则吊销过程非常困难，无法及时补救;")])]),t._v(" "),s("li",[s("p",[t._v("中间证书结构的私钥泄露，则可以快速在线吊销，并重新为用户签发新的证书;")])]),t._v(" "),s("li",[s("p",[t._v("证书链四级以内一般不会对 "),s("code",[t._v("HTTPS")]),t._v(" 的性能造成明显影响。")])])])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200208143242796.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3hqbDI3MTMxNA==,size_16,color_FFFFFF,t_70",alt:"https证书链s"}})]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[s("strong",[t._v("证书链有以下特点：")])]),t._v(" "),s("ol",[s("li",[s("p",[t._v("同一本服务器证书可能存在多条合法的证书链。")]),t._v(" "),s("p",[t._v("因为证书的生成和验证基础是公钥和私钥对，如果采用相同的公钥和私钥生成不同的中间证书，针对被签发者而言，该签发机构都是合法的 CA，不同的是中间证书的签发机构不同;")])]),t._v(" "),s("li",[s("p",[t._v("不同证书链的层级不一定相同，可能二级、三级或四级证书链。")]),t._v(" "),s("p",[t._v("中间证书的签发机构可能是根证书机构也可能是另一个中间证书机构，所以证书链层级不一定相同。")])])])]),t._v(" "),s("h3",{attrs:{id:"证书吊销"}},[t._v("证书吊销")]),t._v(" "),s("p",[t._v("CA 机构能够签发证书，同样也存在机制宣布以往签发的证书无效。证书使用者不合法，CA 需要废弃该证书;或者私钥丢失，使用者申请让证书无效。主要存在两类机制："),s("code",[t._v("CRL")]),t._v(" 与 "),s("code",[t._v("OCSP")]),t._v("。")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("CRL(Certificate Revocation List)")]),t._v("证书吊销列表")])]),t._v(" "),s("p",[t._v("一个单独的文件。该文件包含了 CA 已经吊销的证书序列号(唯一)与吊销日期，同时该文件包含生效日期并通知下次更新该文件的时间，当然该文件必然包含 CA 私钥的签名以验证文件的合法性。")]),t._v(" "),s("p",[t._v("证书中一般会包含一个 "),s("code",[t._v("URL")]),t._v(" 地址 "),s("code",[t._v("CRL Distribution Point")]),t._v("，通知使用者去哪里下载对应的 "),s("code",[t._v("CRL")]),t._v(" 以校验证书是否吊销。")]),t._v(" "),s("p",[t._v("该吊销方式的优点是不需要频繁更新，但是不能及时吊销证书，因为 "),s("code",[t._v("CRL")]),t._v(" 更新时间一般是几天，这期间可能已经造成了极大损失。")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("OCSP(Online Certificate Status Protocol)")]),t._v("证书状态在线查询协议")])]),t._v(" "),s("p",[t._v("一个实时查询证书是否吊销的方式。请求者发送证书的信息并请求查询，服务器返回正常、吊销或未知中的任何一个状态。证书中一般也会包含一个 "),s("code",[t._v("OCSP")]),t._v(" 的 "),s("code",[t._v("URL")]),t._v(" 地址，要求查询服务器具有良好的性能。")]),t._v(" "),s("p",[t._v("部分 CA 或大部分的自签 CA (根证书)都是未提供 "),s("code",[t._v("CRL")]),t._v(" 或 "),s("code",[t._v("OCSP")]),t._v(" 地址的，对于吊销证书会是一件非常麻烦的事情。")]),t._v(" "),s("h2",{attrs:{id:"https性能与优化"}},[t._v("HTTPS性能与优化")]),t._v(" "),s("h3",{attrs:{id:"https性能损耗"}},[t._v("HTTPS性能损耗")]),t._v(" "),s("p",[t._v("前文讨论了"),s("code",[t._v("HTTPS")]),t._v("原理与优势：身份验证、信息加密与完整性校验等，且未对"),s("code",[t._v("TCP")]),t._v("和"),s("code",[t._v("HTTP")]),t._v("协议做任何修改。但通过增加新协议以实现更安全的通信必然需要付出代价，"),s("code",[t._v("HTTPS")]),t._v("协议的性能损耗主要体现如下：")]),t._v(" "),s("ul",[s("li",[t._v("增加延时")])]),t._v(" "),s("p",[t._v("分析前面的握手过程，一次完整的握手至少需要两端依次来回两次通信，至少增加延时"),s("code",[t._v("2* RTT")]),t._v("，利用会话缓存从而复用连接，延时也至少"),s("code",[t._v("1* RTT*")])]),t._v(" "),s("ul",[s("li",[t._v("消耗较多的CPU资源")])]),t._v(" "),s("p",[t._v("除数据传输之外，"),s("code",[t._v("HTTPS")]),t._v("通信主要包括对对称加解密、非对称加解密(服务器主要采用私钥解密数据);")]),t._v(" "),s("p",[t._v("压测 "),s("code",[t._v("TS8")]),t._v(" 机型的单核 "),s("code",[t._v("CPU")]),t._v("：对称加密算法"),s("code",[t._v("AES-CBC-256")]),t._v(" 吞吐量 "),s("code",[t._v("600Mbps")]),t._v("，非对称 "),s("code",[t._v("RSA")]),t._v(" 私钥解密"),s("code",[t._v("200次/s")]),t._v("。")]),t._v(" "),s("p",[t._v("不考虑其它软件层面的开销，"),s("code",[t._v("10G")]),t._v(" 网卡为对称加密需要消耗 "),s("code",[t._v("CPU")]),t._v(" 约17核，24核CPU最多接入 "),s("code",[t._v("HTTPS")]),t._v(" 连接 4800;")]),t._v(" "),s("p",[t._v("静态节点当前"),s("code",[t._v("10G")]),t._v(" 网卡的 "),s("code",[t._v("TS8")]),t._v(" 机型的 "),s("code",[t._v("HTTP")]),t._v("单机接入能力约为"),s("code",[t._v("10w/s")]),t._v("，如果将所有的"),s("code",[t._v("HTTP")]),t._v("连接变为"),s("code",[t._v("HTTPS")]),t._v("连接，则明显"),s("code",[t._v("RSA")]),t._v("的解密最先成为瓶颈。因此，"),s("code",[t._v("RSA")]),t._v("的解密能力是当前困扰"),s("code",[t._v("HTTPS")]),t._v("接入的主要难题。")]),t._v(" "),s("h3",{attrs:{id:"https接入优化"}},[t._v("HTTPS接入优化")]),t._v(" "),s("ul",[s("li",[t._v("CDN接入")])]),t._v(" "),s("p",[s("code",[t._v("HTTPS")]),t._v(" 增加的延时主要是"),s("code",[t._v("传输延时 RTT")]),t._v("，"),s("code",[t._v("RTT")]),t._v(" 的特点是节点越近延时越小，"),s("code",[t._v("CDN")]),t._v(" 天然离用户最近，因此选择使用 "),s("code",[t._v("CDN")]),t._v(" 作为 "),s("code",[t._v("HTTPS")]),t._v(" 接入的入口，将能够极大减少接入延时。"),s("code",[t._v("CDN")]),t._v("节点通过和业务服务器维持长连接、会话复用和链路质量优化等可控方法，极大减少 "),s("code",[t._v("HTTPS")]),t._v(" 带来的延时。")]),t._v(" "),s("ul",[s("li",[t._v("会话缓存")])]),t._v(" "),s("p",[t._v("虽然前文提到 "),s("code",[t._v("HTTPS")]),t._v(" 即使采用会话缓存也要至少"),s("code",[t._v("1*RTT")]),t._v("的延时，但是至少延时已经减少为原来的一半，明显的延时优化;")]),t._v(" "),s("p",[t._v("同时，基于会话缓存建立的 "),s("code",[t._v("HTTPS")]),t._v(" 连接不需要服务器使用"),s("code",[t._v("RSA")]),t._v("私钥解密获取 "),s("code",[t._v("Pre-master")]),t._v(" 信息，可以省去"),s("code",[t._v("CPU")]),t._v(" 的消耗。")]),t._v(" "),s("p",[t._v("如果业务访问连接集中，缓存命中率高，则"),s("code",[t._v("HTTPS")]),t._v("的接入能力将明显提升。当前"),s("code",[t._v("TRP")]),t._v("平台的缓存命中率高峰时期大于30%，10k/s的接入资源实际可以承载13k/的接入，收效非常可观。")]),t._v(" "),s("ul",[s("li",[t._v("硬件加速")])]),t._v(" "),s("p",[t._v("为接入服务器安装专用的"),s("code",[t._v("SSL")]),t._v("硬件加速卡，作用类似 "),s("code",[t._v("GPU")]),t._v("，释放 "),s("code",[t._v("CPU")]),t._v("，能够具有更高的 "),s("code",[t._v("HTTPS")]),t._v(" 接入能力且不影响业务程序的。测试某硬件加速卡单卡可以提供35k的解密能力，相当于175核 CPU，至少相当于7台24核的服务器，考虑到接入服务器其它程序的开销，一张硬件卡可以实现接近10台服务器的接入能力。")]),t._v(" "),s("ul",[s("li",[t._v("远程解密")])]),t._v(" "),s("p",[t._v("本地接入消耗过多的 "),s("code",[t._v("CPU")]),t._v(" 资源，浪费了网卡和硬盘等资源，考虑将最消耗 "),s("code",[t._v("CPU")]),t._v(" 资源的"),s("code",[t._v("RSA")]),t._v("解密计算任务转移到其它服务器，如此则可以充分发挥服务器的接入能力，充分利用带宽与网卡资源。远程解密服务器可以选择 "),s("code",[t._v("CPU")]),t._v(" 负载较低的机器充当，实现机器资源复用，也可以是专门优化的高计算性能的服务器。当前也是 "),s("code",[t._v("CDN")]),t._v(" 用于大规模"),s("code",[t._v("HTTPS")]),t._v("接入的解决方案之一。")]),t._v(" "),s("ul",[s("li",[t._v("SPDY/HTTP2")])]),t._v(" "),s("p",[t._v("前面的方法分别从减少传输延时和单机负载的方法提高 "),s("code",[t._v("HTTPS")]),t._v(" 接入性能，但是方法都基于不改变 "),s("code",[t._v("HTTP")]),t._v(" 协议的基础上提出的优化方法，"),s("code",[t._v("SPDY/HTTP2")]),t._v(" 利用 "),s("code",[t._v("TLS/SSL")]),t._v(" 带来的优势，通过修改协议的方法来提升 "),s("code",[t._v("HTTPS")]),t._v(" 的性能，提高下载速度等。")]),t._v(" "),s("h2",{attrs:{id:"http网络优化"}},[t._v("HTTP网络优化")]),t._v(" "),s("h3",{attrs:{id:"减少资源体积"}},[t._v("减少资源体积")]),t._v(" "),s("ul",[s("li",[t._v("gzip压缩")])]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("gzip")]),t._v(" 使用了 "),s("code",[t._v("LZ77")]),t._v(" 算法与 "),s("code",[t._v("Huffman")]),t._v(" 编码来压缩文件，重复度越高的文件可压缩的空间就越大")])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[s("strong",[t._v("如何查看是否开启"),s("code",[t._v("gzip")]),t._v("？")])]),t._v(" "),s("p",[t._v("—— 打开控制面板进入"),s("code",[t._v("NetWork")]),t._v("，右键选取"),s("code",[t._v("response headers")]),t._v(" 选择查看"),s("code",[t._v("Content-Encoding")])]),t._v(" "),s("p",[s("code",[t._v("Content-Encoding")]),t._v("：内容编码格式"),s("code",[t._v("gzip")]),t._v(" 和 "),s("code",[t._v("deflate")])]),t._v(" "),s("p",[s("strong",[t._v("如何使用"),s("code",[t._v("gzip")]),t._v("？")])]),t._v(" "),s("ol",[s("li",[t._v("首先浏览器（也就是客户端）发送请求时，通过"),s("code",[t._v("Accept-Encoding")]),t._v("带上自己支持的内容编码格式列表")]),t._v(" "),s("li",[t._v("服务端在接收到请求后，从中挑选出一种用来对响应信息进行编码，并通过"),s("code",[t._v("Content-Encoding")]),t._v("来说明服务端选定的编码信息")]),t._v(" "),s("li",[t._v("浏览器在拿到响应正文后，依据"),s("code",[t._v("Content-Encoding")]),t._v("进行解压。")])])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200210001648114.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3hqbDI3MTMxNA==,size_16,color_FFFFFF,t_70",alt:"gzip例子"}})]),t._v(" "),s("p",[t._v("我们可以看到图片中开启"),s("code",[t._v("gzip")]),t._v("压缩之后文件小了很多(越小的文件越不明显)")]),t._v(" "),s("ul",[s("li",[t._v("nginx开启")])]),t._v(" "),s("div",{staticClass:"language-nginx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nginx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("gzip")]),t._v(" on"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("gzip_min_length")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("k"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" 不压缩临界值，大于"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("K的才压缩，一般不用改\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("gzip_comp_level")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" 压缩级别，"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("，数字越大压缩的越细，时间也越长\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("gzip_types")]),t._v(" text"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("plain application"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("javascript application"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("javascript text"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("css application"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("xml text"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("javascript application"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("httpd"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("php image"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("jpeg image"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("gif image"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("png"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" 进行压缩的文件类型\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("gzip_disable")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"MSIE [1-6]\\."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" ie兼容性不好所以放弃\n")])])]),s("ul",[s("li",[t._v("webpack开启")])]),t._v(" "),s("p",[s("code",[t._v("compression-webpack-plugin")]),t._v(" 这个插件可以提供功能")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" CompressionWebpackPlugin "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'compression-webpack-plugin'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nplugins"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("    \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CompressionWebpackPlugin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        asset"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'[path].gz[query]'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 目标文件名        ")]),t._v("\n        algorithm"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'gzip'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用gzip压缩       ")]),t._v("\n        test"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RegExp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\\\.(js|css)$'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 压缩 js 与 css),        ")]),t._v("\n        threshold"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10240")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 资源文件大于10240B=10kB时会被压缩        ")]),t._v("\n        minRatio"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.8")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 最小压缩比达到0.8时才会被压缩    ")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[s("strong",[s("code",[t._v("webpack")]),t._v("的"),s("code",[t._v("gzip")]),t._v("和"),s("code",[t._v("nginx")]),t._v("的有什么关系？")])]),t._v(" "),s("ol",[s("li",[s("p",[s("code",[t._v("nginx")]),t._v("没有开启"),s("code",[t._v("gzip")]),t._v("压缩,"),s("code",[t._v("webpack")]),t._v("打包出的"),s("code",[t._v(".gz")]),t._v("文件是用不到的")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("nginx")]),t._v("开启了"),s("code",[t._v("gzip")]),t._v("，"),s("code",[t._v("nginx")]),t._v("查找静态资源是否存在已经压缩好的"),s("code",[t._v("gzip")]),t._v("压缩文件，如果没有则自行压缩（消耗cpu但感知比较少）")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("nginx")]),t._v("开启"),s("code",[t._v("gzip")]),t._v("压缩,"),s("code",[t._v("webpack")]),t._v("打包出的"),s("code",[t._v(".gz")]),t._v("文件被找到，提前（打包）压缩直接使用，减少了"),s("code",[t._v("nginx")]),t._v("的压缩损耗")])])])]),t._v(" "),s("h3",{attrs:{id:"gzip是怎么压缩的？"}},[t._v("gzip是怎么压缩的？")]),t._v(" "),s("p",[t._v("到这一步的都不是一般人了，我就简述一下:使用"),s("code",[t._v('"滑动窗口"')]),t._v("的方法，来寻找文件中的每一个匹配长度达到最小匹配的串，重复的内容以一个哈希值存储在字典表中并替换到匹配的串上，以此来达到压缩，因此重复度越高的文件可压缩的空间就越大。")]),t._v(" "),s("h3",{attrs:{id:"源文件控制"}},[t._v("源文件控制")]),t._v(" "),s("ul",[s("li",[t._v("图片采用webp格式")]),t._v(" "),s("li",[t._v("http2——头部压缩")])]),t._v(" "),s("h3",{attrs:{id:"减少资源请求"}},[t._v("减少资源请求")]),t._v(" "),s("ul",[s("li",[t._v("使用DNS")]),t._v(" "),s("li",[t._v("使用http2")]),t._v(" "),s("li",[t._v("使用缓存")])]),t._v(" "),s("h2",{attrs:{id:"http1-0、http1-1及http2-0区别"}},[t._v("HTTP1.0、HTTP1.1及HTTP2.0区别")]),t._v(" "),s("h3",{attrs:{id:"http基本优化"}},[t._v("HTTP基本优化")]),t._v(" "),s("p",[t._v("影响一个HTTP网络请求的因素主要有两个:"),s("code",[t._v("带宽")]),t._v("和"),s("code",[t._v("延迟")]),t._v("。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("带宽:服务器资源相关")])]),t._v(" "),s("li",[s("p",[t._v("延迟")]),t._v(" "),s("ul",[s("li",[t._v("浏览器阻塞(HOL Blocking):浏览器会因为一些原因阻塞请求。浏览器对于同一个域名，同时只能有固定个连接。")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("浏览器")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("HTTP 1.1")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("HTTP 1.0")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("IE 6,7")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("2")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("4")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("IE 8")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("6")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("6")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("Firefox 2")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("2")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("8")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("Firefox 3")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("6")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("6")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("Safari")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("3, 4")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("4")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("Chrome 1,2")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("6")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("?")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("Chrome 3")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("4")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("4")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("Opera 9.63,10.00alpha")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("4")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("4")])])])]),t._v(" "),s("p",[t._v("超过浏览器最大连接数的限制，后续的请求就会被阻塞。")]),t._v(" "),s("ul",[s("li",[t._v("DNS查询")])]),t._v(" "),s("p",[t._v("浏览器需要知道目标服务器的IP才能建立连接。DNS就是将域名解析为IP。")]),t._v(" "),s("p",[t._v("可以利用DNS缓存结果减少这个时间。")]),t._v(" "),s("ul",[s("li",[t._v("建立连接")])]),t._v(" "),s("p",[s("code",[t._v("HTTP")]),t._v("是基于"),s("code",[t._v("TCP")]),t._v("协议的。需要经过三次握手才能携带请求报文。")])])]),t._v(" "),s("h3",{attrs:{id:"http1-0与http1-1的一些区别"}},[t._v("HTTP1.0与HTTP1.1的一些区别")]),t._v(" "),s("p",[t._v("HTTP最早在网页中使用是1996年，而HTTP1.1是1996年后才开始广泛用于现在的各大浏览器网络请求中。")]),t._v(" "),s("p",[t._v("主要区别在于:")]),t._v(" "),s("p",[s("strong",[t._v("1. 缓存处理")])]),t._v(" "),s("p",[s("code",[t._v("HTTP1.0")]),t._v("中主要使用"),s("code",[t._v("header")]),t._v("里的"),s("code",[t._v("if-Modified-Since")]),t._v(","),s("code",[t._v("Expires")]),t._v("来作为缓存判断的标准。")]),t._v(" "),s("p",[s("code",[t._v("HTTP1.1")]),t._v("引入了更多的缓存控制策略，例如"),s("code",[t._v("Enity tag")]),t._v("、"),s("code",[t._v("if-Unmodified-Since")]),t._v("、"),s("code",[t._v("if-Match")]),t._v("、"),s("code",[t._v("if-None-Match")]),t._v("等更多可提供选择的缓存头来控制缓存策略。")]),t._v(" "),s("p",[s("strong",[t._v("2. 带宽优化及网络连接的作用")])]),t._v(" "),s("p",[s("code",[t._v("HTTP1.0")]),t._v("中存在一些浪费带宽的现象，例如客户端只是需要某个对象的一部分，而服务器却将整个对象返回回来了，并且不支持断点续传的功能。")]),t._v(" "),s("p",[s("code",[t._v("HTTP1.1")]),t._v("则在请求头中引入了"),s("code",[t._v("range")]),t._v("头域，他允许只请求资源的某个部分,即返回码是"),s("code",[t._v("206(Partial Content)")]),t._v(",这样就方便开发者自由的选择以便于充分利用带宽连接。")]),t._v(" "),s("p",[s("strong",[t._v("3. 错误通知的管理")])]),t._v(" "),s("p",[t._v("在"),s("code",[t._v("HTTP1.1")]),t._v("中新增了24个错误状态响应码，如409(Conflict)表示请求的资源与资源当前状态发生冲突，401(Gone)表示服务器上的某个资源被永久性的删除。")]),t._v(" "),s("p",[s("strong",[t._v("4. Host头处理")])]),t._v(" "),s("p",[t._v("在"),s("code",[t._v("HTTP1.0")]),t._v("中认为每台服务器都绑定一个唯一的IP地址，因此请求消息中的URL并没有传递主机名(hostname)。")]),t._v(" "),s("p",[t._v("在"),s("code",[t._v("HTTP1.1")]),t._v("中请求消息和响应消息都应支持"),s("code",[t._v("Host")]),t._v("头域，且消息请求中如果没有Host头域会报告一个错误(400 Bad Request)。")]),t._v(" "),s("p",[s("strong",[t._v("5. 长连接")])]),t._v(" "),s("p",[s("code",[t._v("HTTP1.1")]),t._v("开始支持长连接")]),t._v(" "),s("h3",{attrs:{id:"http与htpps的一些区别"}},[t._v("HTTP与HTPPS的一些区别")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("HTTPS协议需要到CA申请证书,一般免费证书比较少，需要付费。")])]),t._v(" "),s("li",[s("p",[t._v("HTTP协议运行在TCP之上，所有的传输内容都是明文的，HTTPS运行在SSL/TSL之上,SSL/TSL运行在TCP上，所有传输内容都是加密的。")])]),t._v(" "),s("li",[s("p",[t._v("HTTP与HTTPS采用完全不同的连接方式，用的端口也不一样，前者是80，后者是443。")])]),t._v(" "),s("li",[s("p",[t._v("HTTPS可以有效的防止运营商劫持,解决了防劫持的一个问题。")])])]),t._v(" "),s("h3",{attrs:{id:"spdy-http1-x的优化"}},[t._v("SPDY:HTTP1.x的优化")]),t._v(" "),s("p",[t._v("2012年google如一声惊雷提出了SPDY的方案，优化了HTTP1.x的请求延迟，解决了HTTP1.x的安全性，具体如下:")]),t._v(" "),s("p",[s("strong",[t._v("1. 降低延迟,针对HTTP高延迟的问题，SPDY优雅的采用了"),s("code",[t._v("多路复用(multiplexing)")]),t._v("。")])]),t._v(" "),s("p",[t._v("多路复用通过多个请求stream共享一个tcp连接的方式，解决了HOL blocking的问题，降低了延迟同时提高了带宽的利用率。")]),t._v(" "),s("p",[s("strong",[t._v("2. 请求优先级(request piroritization)。")])]),t._v(" "),s("p",[t._v("多路复用带来一个新的问题是，在连接共享的基础之上有可能导致关键请求被阻塞。SPDY允许给每个request设置优先级，这样重要的请求就会优先得到响应。比如浏览器加载首页，首页的html内容应该优先展示，之后才是各种静态资源文件，脚本文件等加载，这样可以保证用户能第一时间看到网页的内容。")]),t._v(" "),s("p",[s("strong",[t._v("3. header压缩")])]),t._v(" "),s("p",[t._v("前面提到的HTTP1.x的header很多时候是多余的。选择合适的压缩算法可以减小包的大小和数量。")]),t._v(" "),s("p",[s("strong",[t._v("4. 基于HTTPS的加密协议传输")])]),t._v(" "),s("p",[t._v("HTTPS传输大大提高了数据传输的可靠性。")]),t._v(" "),s("p",[s("strong",[t._v("5. 服务端推送(Server Push)")])]),t._v(" "),s("p",[t._v("采用了SPDY的网页，例如我的网页有一个style.css的请求，在客户端收到style.css数据的同时，服务端会将style.js的文件推送到客户端，当客户端再次尝试获取style.js时就可以直接从缓存中获取，不用再发请求了。")]),t._v(" "),s("h3",{attrs:{id:"http2-0-spdy的升级版"}},[t._v("HTTP2.0:SPDY的升级版")]),t._v(" "),s("p",[t._v("HTTP2.0是SPDY的升级版，基于SPDY设计。")]),t._v(" "),s("h4",{attrs:{id:"http2-0与spdy的区别"}},[t._v("HTTP2.0与SPDY的区别")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("HTTP2.0支持明文HTTP传输，而SPDY强制使用HTTPS。")])]),t._v(" "),s("li",[s("p",[t._v("HTTP2.0消息头压缩算法采用"),s("code",[t._v("HPACK(http://http2.github.io/http2-spec/compression.html)")]),t._v(",SPDY采用"),s("code",[t._v("DEFLATE(http://zh.wikipedia.org/wiki/DEFLATE)")]),t._v("。")])])]),t._v(" "),s("h3",{attrs:{id:"http2-0及http1-x相比的新特性"}},[t._v("HTTP2.0及HTTP1.x相比的新特性")]),t._v(" "),s("ul",[s("li",[t._v("新的二进制格式")])]),t._v(" "),s("p",[t._v("HTTP1.x的解析是基于文本的。基于文本协议的格式解析存在天然缺陷，文本的表现形式具有多样性，要做到健壮性考虑的场景必然很多，二进制则不同，只有0和1的组合。")]),t._v(" "),s("ul",[s("li",[t._v("多路复用")])]),t._v(" "),s("p",[t._v("即连接共享，即每个request都是用作连接共享机制的。一个request对应一个id，这样一个连接上可以有多个request，每个连接的request可以随机的混杂在一起，接收方可以根据request的id将request再归属到各自不同的服务端请求里面。")]),t._v(" "),s("ul",[s("li",[t._v("header压缩")])]),t._v(" "),s("p",[t._v("HTTP1.x中的header带有大量的信息，而且每次都要重复发送，HTTP2.0使用encoder来减少需要传输的header大小，通讯双方各自cache一份header fields表，既避免了重复header的传输，又减小了需要传输的大小。")]),t._v(" "),s("ul",[s("li",[t._v("服务端推送")])]),t._v(" "),s("h3",{attrs:{id:"http2-0的升级改造"}},[t._v("HTTP2.0的升级改造")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("HTTP2.0可以支持非HTTPS，但是主流浏览器Chorme，firefox表示还是只支持基于TLS部署的HTTP2.0协议，所以要升级成HTTP2.0还是先升级HTTPS为好。")])]),t._v(" "),s("li",[s("p",[t._v("当你的网站升级为HTTPS之后，那么升级HTTP2.0就比较简单了，如果你使用了nginx，只要在配置文件中启用相应的协议就可以了。(参考地址:https://www.nginx.com/blog/nginx-1-9-5/)")])]),t._v(" "),s("li",[s("p",[t._v("在使用了HTTP2.0之后，原来的HTTP1.x怎么办?HTTP2.0完全兼容HTTP1.x的语义,对于不支持HTTP2.0的浏览器,nginx会自动向下兼容。")])])]),t._v(" "),s("h3",{attrs:{id:"http2-0的多路复用-和-http1-x的长连接有什么区别？"}},[t._v("HTTP2.0的多路复用 和 HTTP1.x的长连接有什么区别？")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("HTTP/1.*一次请求-响应，建立一个连接，用完关闭。每一个请求都要建立一个连接。")])]),t._v(" "),s("li",[s("p",[t._v("HTTP/1.1 Pipeling 解决方式为，若干个请求排队串行化单线处理，后面的请求会等待前面请求的返回之后才能会的执行机会。一旦有某请求超时等，后续请求只能被阻塞，毫无办法，也就是人们常说的线头阻塞。")])]),t._v(" "),s("li",[s("p",[t._v("HTTP/2多个请求可同时在一个连接上并行执行。某个请求任务耗时严重，不会影响到其他连接的正常执行。")])])]),t._v(" "),s("h3",{attrs:{id:"服务端推送到底是什么？"}},[t._v("服务端推送到底是什么？")]),t._v(" "),s("p",[t._v("服务端推送能把客户端所需要的资源伴随着index.html一起发送到客户端，省去了客户端重复请求的步骤。正因为没有发送请求，建立连接等操作，所以静态资源通过服务端推送的方式可以极大地提升速度。")]),t._v(" "),s("h2",{attrs:{id:"强缓存与协商缓存"}},[t._v("强缓存与协商缓存")]),t._v(" "),s("p",[t._v('Web缓存是可以自动保存常见文档副本的HTTP设备。当Web请求抵达缓存时，如果本地有"已缓存"的副本，就可以从本地存储设备而不是原始服务器中提取这个文档。')]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200211145959398.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3hqbDI3MTMxNA==,size_16,color_FFFFFF,t_70",alt:"缓存的流程"}})]),t._v(" "),s("h3",{attrs:{id:"缓存的优点"}},[t._v("缓存的优点")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("减少了冗余的数据传输，节省了网络费用。")])]),t._v(" "),s("li",[s("p",[t._v("缓解了网络瓶颈的问题，不需要更多的带宽就能够更快的加载页面。")])]),t._v(" "),s("li",[s("p",[t._v("降低了对原始服务器的要求，服务器可以更快的响应，避免过载的出现。")])]),t._v(" "),s("li",[s("p",[t._v("降低了距离延迟，因为从更远的地方加载会更加慢一点。")])])]),t._v(" "),s("h3",{attrs:{id:"缓存的缺点"}},[t._v("缓存的缺点")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("缓存中的数据可能和服务器中的数据不一致。")])]),t._v(" "),s("li",[s("p",[t._v("更加消耗内存。")])])]),t._v(" "),s("h3",{attrs:{id:"浏览器中的缓存"}},[t._v("浏览器中的缓存")]),t._v(" "),s("p",[t._v("浏览器中的缓存主要分为"),s("code",[t._v("强缓存")]),t._v("和"),s("code",[t._v("协商缓存")]),t._v("。")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("浏览器进行资源请求时，会判断responese header是否命中强缓存，如果命中，直接从本地读取缓存，不会发送请求到服务器。")])]),t._v(" "),s("li",[s("p",[t._v("如果未命中强缓存，会发送请求到服务器，判断协商缓存是否命中，如果命中的会，服务器会将请求返回(304),但是不会返回资源，告诉浏览器直接从本地读取缓存。如果不命中，服务器会直接返回资源。")])])]),t._v(" "),s("h3",{attrs:{id:"强缓存"}},[s("strong",[t._v("强缓存")])]),t._v(" "),s("p",[t._v("到底什么是强缓存？强在哪？")]),t._v(" "),s("p",[t._v("其实强是强制的意思。当浏览器去请求某个文件的时候，服务端就在"),s("code",[t._v("respone header")]),t._v("里面对该文件做了缓存配置。缓存的时间、缓存类型都由服务端控制。")]),t._v(" "),s("p",[t._v("具体表现为："),s("code",[t._v("respone header")]),t._v(" 的"),s("code",[t._v("cache-control")]),t._v("，常见的设置是"),s("code",[t._v("max-age")]),t._v("、 "),s("code",[t._v("public")]),t._v("、 "),s("code",[t._v("private")]),t._v(" 、"),s("code",[t._v("no-cache")]),t._v(" 、"),s("code",[t._v("no-store")]),t._v("等以及返回头设置"),s("code",[t._v("Expires")]),t._v("字段。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200211142418838.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3hqbDI3MTMxNA==,size_16,color_FFFFFF,t_70",alt:"Cache-control"}})]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[s("code",[t._v("max-age")]),t._v("表示缓存的时间是315360000秒（10年）")]),t._v(" "),s("p",[s("code",[t._v("public")]),t._v("表示可以被浏览器和代理服务器缓存")]),t._v(" "),s("p",[s("code",[t._v("immutable")]),t._v("表示即使用户刷新浏览器也不会去请求服务器")]),t._v(" "),s("p",[s("code",[t._v("from memory cache")]),t._v("表示从内存中读取缓存")]),t._v(" "),s("p",[s("code",[t._v("from disk cache")]),t._v("表示从磁盘中读取缓存")])]),t._v(" "),s("p",[s("code",[t._v("Expires")]),t._v("是一个"),s("code",[t._v("GMT")]),t._v("时间格式字符串,浏览器第一次请求的时候,服务器会在返回头部加上Expires，下次请求的时候如果在这个时间之前那么命中缓存。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("app"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" cssContent "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("__dirname"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./html/index.html'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    fs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("readFile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cssContent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("err"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setHeader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Expires"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Date")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2592000000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toUTCString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("end")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("强缓存总结")]),t._v(" "),s("ol",[s("li",[s("code",[t._v("cache-control: max-age=xxxx，public")])])]),t._v(" "),s("p",[t._v("客户端和代理服务器都可以缓存该资源；")]),t._v(" "),s("p",[t._v("客户端在xxx秒的有效期内，如果有请求该资源的需求的话就直接读取缓存,"),s("code",[t._v("statu code:200")]),t._v(" ，如果用户做了刷新操作，就向服务器发起"),s("code",[t._v("http")]),t._v("请求。")]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[s("code",[t._v("cache-control: max-age=xxxx，private")])])]),t._v(" "),s("p",[t._v("只让客户端可以缓存该资源；代理服务器不缓存")]),t._v(" "),s("p",[t._v("客户端在xxx秒内直接读取缓存,statu code:200")]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[s("code",[t._v("cache-control: max-age=xxxx，immutable")])])]),t._v(" "),s("p",[t._v("客户端在xxx秒的有效期内，如果有请求该资源的需求的话就直接读取缓存,"),s("code",[t._v("statu code:200")]),t._v("，即使用户做了刷新操作，也不向服务器发起http请求")]),t._v(" "),s("ol",{attrs:{start:"4"}},[s("li",[s("code",[t._v("cache-control: no-cache")])])]),t._v(" "),s("p",[t._v("跳过设置强缓存，但是不妨碍设置协商缓存；一般如果你做了强缓存，只有在强缓存失效了才走协商缓存的，设置了"),s("code",[t._v("no-cache")]),t._v("就不会走强缓存了，每次请求都会询问服务端。")]),t._v(" "),s("ol",{attrs:{start:"5"}},[s("li",[s("code",[t._v("cache-control: no-store")])])]),t._v(" "),s("p",[t._v("不缓存，这个会让客户端、服务器都不缓存，也就没有所谓的强缓存、协商缓存了。")])]),t._v(" "),s("h3",{attrs:{id:"协商缓存"}},[s("strong",[t._v("协商缓存")])]),t._v(" "),s("p",[t._v("上面说到的强缓存就是给资源设置个过期时间，客户端每次请求资源时都会看是否过期；只有在过期才会去询问服务器。所以，强缓存就是为了给客户端自给自足用的。")]),t._v(" "),s("p",[t._v("而当某天，客户端请求该资源时发现其过期了，这时就会去请求服务器了，而这时候去请求服务器的这过程就可以设置协商缓存。这时候，协商缓存就是需要客户端和服务器两端进行交互的。")]),t._v(" "),s("blockquote",[s("p",[t._v("协议缓存主要是利用"),s("code",[t._v("Last-Modified")]),t._v("、"),s("code",[t._v("If-Modified-Since")]),t._v("和"),s("code",[t._v("Etag")]),t._v("、"),s("code",[t._v("If-None-Match")]),t._v("来实现。")])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[s("code",[t._v("Last-Modified")]),t._v(":表示为实体头部部分，"),s("code",[t._v("response")]),t._v("返回，表示为资源的最后更新时间,精确到秒。")]),t._v(" "),s("p",[s("code",[t._v("If-Modified-Since")]),t._v(":通过比较两次的时间判断，资源在请求期间是否有修改，假如没有修改，则命中协商缓存，浏览器从缓存中读取资源，如果没有命中，资源有过修改，返回新的"),s("code",[t._v("Last-Modified")]),t._v("和服务器资源。")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("app"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" cssContent "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("__dirname"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./html/index.html'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    fs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("stat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cssContent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("err"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" start")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("headers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'if-modified-since'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" start"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mtime"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toUTCString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("writeHead")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("304")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Not Modified'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("end")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            fs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("readFile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cssContent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("err"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" lastModified "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" start"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mtime"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toUTCString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setHeader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Last-Modified'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lastModified"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("writeHead")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'OK'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("end")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),s("p",[t._v("有些情况下仅判断最后修改日期来验证资源是否有改动是不够的：")]),t._v(" "),s("ol",[s("li",[t._v("存在周期性重写某些资源，但资源实际包含的内容并无变化；")]),t._v(" "),s("li",[t._v("被修改的信息并不重要，如注释等；")]),t._v(" "),s("li",[s("code",[t._v("Last-Modified")]),t._v("无法精确到毫秒，但有些资源更新频率有时会小于一秒。")])])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[s("code",[t._v("ETag")]),t._v(":为相应头部字段，表示资源内容的唯一标识(文件hash,类似webpack打包生成的文件hash)，随服务器"),s("code",[t._v("response")]),t._v("返回；")]),t._v(" "),s("p",[s("code",[t._v("If-None-Match")]),t._v(": 服务器比较请求头中的"),s("code",[t._v("If-None-Match")]),t._v("和当前资源中的"),s("code",[t._v("etag")]),t._v("是否一致，来判断资源是否修改过，如果没有修改，则命中缓存，浏览器从缓存中读取资源，如果修改过，服务器会返回新的"),s("code",[t._v("etag")]),t._v("，并返回资源；")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("app"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/home'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" cssContent "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("__dirname"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./html/index.html'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    fs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("stat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cssContent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("err"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" start")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" etag "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("md5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cssContent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("headers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'if-none-match'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" etag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("writeHead")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("304")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Not Modified'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("end")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            fs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("readFile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cssContent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("err"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setHeader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Etag'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" etag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("writeHead")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'OK'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("end")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[s("strong",[t._v("协商缓存步骤总结:")])]),t._v(" "),s("ol",[s("li",[t._v("请求资源时，把用户本地该资源的"),s("code",[t._v("etag")]),t._v("同时带到服务端，服务端和最新资源做对比。")]),t._v(" "),s("li",[t._v("如果资源没更改，返回304，浏览器读取本地缓存。")]),t._v(" "),s("li",[t._v("如果资源有更改，返回200，返回最新的资源。")])]),t._v(" "),s("p",[t._v("不推荐使用 "),s("code",[t._v("Expires")]),t._v(" 首部，它指定的是实际的过期日期而不是秒数。")]),t._v(" "),s("p",[s("code",[t._v("HTTP")]),t._v("设计者后来认为，由于很多服务器的时钟都不同步，或者不正确，所以最好还是用剩余秒数，而不是绝对时间来表示过期时间。")]),t._v(" "),s("p",[s("code",[t._v("ETag")]),t._v("解决了"),s("code",[t._v("Last-Modified")]),t._v("使用时可能出现的资源的时间戳变了但内容没变及如果再一秒钟以内资源变化但"),s("code",[t._v("Last-Modified")]),t._v("没变的问题，感觉ETag更加稳妥。")]),t._v(" "),s("p",[t._v("补充：根据浏览器缓存策略，"),s("code",[t._v("Expire")]),t._v("和"),s("code",[t._v("Cache-Control")]),t._v("用回车、后退、F5刷新会跳过本地缓存，每次都会从服务器中获数据。")])]),t._v(" "),s("h2",{attrs:{id:"从用户输入url到浏览器呈现页面发生了什么"}},[t._v("从用户输入URL到浏览器呈现页面发生了什么?")]),t._v(" "),s("ul",[s("li",[t._v("2021.02.20")])]),t._v(" "),s("p",[t._v("在我们理解输入url后发生了什么之前，我们需要先了解下浏览器的原理。")]),t._v(" "),s("h3",{attrs:{id:"浏览器架构"}},[t._v("浏览器架构")]),t._v(" "),s("p",[t._v("在讲浏览器架构之前，先理解两个概念，"),s("code",[t._v("进程")]),t._v("和"),s("code",[t._v("线程")]),t._v("。")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("进程(process)")]),t._v("是程序的一次执行过程,是一个动态概念,是程序在执行过程中分配和管理资源的基本单位。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("线程(thread)")]),t._v("是CPU调度和分配的基本单位,它可以与同属于一个进程的其他线程共享该进程所拥有的全部资源。")])])]),t._v(" "),s("p",[t._v("浏览器属于一个应用程序,而应用程序的一次执行，可以理解为计算机启动了一个进程,进程启动后,CPU会给该进程分配相应的内存空间,当我们的进程得到了内存之后,就可以使用线程进行资源的调度,进而完成我们应用程序的功能。")]),t._v(" "),s("p",[t._v("而在应用程序中，为了满足功能的需要，启动的进程会创建另外的进程来处理其他任务，这些创建出来的新的进程拥有全新的独立的内存空间，不与原来的进程共享内存，如果这些进程之间需要通信,需要通过"),s("code",[t._v("IPC机制(Inter Process Communication)")]),t._v("进行。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/2021022013564064.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3hqbDI3MTMxNA==,size_16,color_FFFFFF,t_70",alt:"通信流程"}})]),t._v(" "),s("p",[t._v("很多应用程序都会采取这种多进程的方式来工作，因为进程和进程之间是互相独立的它们互不影响，也就是说，当其中一个进程挂掉了之后，不会影响到其他进程的执行，只需要重启挂掉的进程就可以恢复运行。")]),t._v(" "),s("h3",{attrs:{id:"浏览器的多进程架构"}},[t._v("浏览器的多进程架构")]),t._v(" "),s("p",[t._v("假如我们去开发一个浏览器，它的架构可以是一个单进程多线程的应用程序，也可以是一个使用IPC通信的多进程应用程序。")]),t._v(" "),s("p",[t._v("不同的浏览器使用不同的架构，这里我们以Chrome为例，介绍浏览器的多进程架构。")]),t._v(" "),s("p",[s("strong",[t._v("在Chrome中，主要的进程有4个")]),t._v("：")]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("浏览器进程 (Browser Process)")]),t._v("：负责浏览器的TAB的前进、后退、地址栏、书签栏的工作和处理浏览器的一些不可见的底层操作，比如网络请求和文件访问。")]),t._v(" "),s("li",[s("strong",[t._v("渲染进程 (Renderer Process)")]),t._v("：负责一个Tab内的显示相关的工作，也称渲染引擎。")]),t._v(" "),s("li",[s("strong",[t._v("插件进程 (Plugin Process)")]),t._v("：负责控制网页使用到的插件")]),t._v(" "),s("li",[s("strong",[t._v("GPU进程 (GPU Process)")]),t._v("：负责处理整个应用程序的GPU任务")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/2021022014062453.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3hqbDI3MTMxNA==,size_16,color_FFFFFF,t_70",alt:"进程描述"}})]),t._v(" "),s("ol",[s("li",[s("p",[t._v("首先，当我们要浏览一个网页，我们会在浏览器的地址栏里输入URL，这个时候"),s("code",[t._v("Browser Process")]),t._v("会向这个URL发送请求，获取这个URL的HTML内容，然后将HTML交给"),s("code",[t._v("Renderer Process")]),t._v("。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Renderer Process")]),t._v("解析HTML内容，解析遇到需要请求网络的资源又返回来交给"),s("code",[t._v("Browser Process")]),t._v("进行加载，同时通知"),s("code",[t._v("Browser Process")]),t._v("，需要"),s("code",[t._v("Plugin Process")]),t._v("加载插件资源，执行插件代码。")])]),t._v(" "),s("li",[s("p",[t._v("解析完成后，"),s("code",[t._v("Renderer Process")]),t._v("计算得到图像帧，并将这些图像帧交给"),s("code",[t._v("GPU Process")]),t._v("，"),s("code",[t._v("GPU Process")]),t._v("将其转化为图像显示屏幕。")])])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210220151454266.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3hqbDI3MTMxNA==,size_16,color_FFFFFF,t_70",alt:"通信流程"}})]),t._v(" "),s("h3",{attrs:{id:"多进程架构的好处"}},[t._v("多进程架构的好处")]),t._v(" "),s("p",[t._v("Chrome为什么要使用多进程架构呢？")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("第一，更高的容错性")]),t._v("。当今WEB应用中，HTML，JavaScript和CSS日益复杂，这些跑在渲染引擎的代码，频繁的出现BUG，而有些BUG会直接导致渲染引擎崩溃，多进程架构使得每一个渲染引擎运行在各自的进程中，相互之间不受影响，也就是说，当其中一个页面崩溃挂掉之后，其他页面还可以正常的运行不收影响。")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210220151643220.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3hqbDI3MTMxNA==,size_16,color_FFFFFF,t_70",alt:"在这里插入图片描述"}})]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("第二，更高的安全性和沙盒性（sanboxing）")]),t._v("。渲染引擎会经常性的在网络上遇到不可信、甚至是恶意的代码，它们会利用这些漏洞在你的电脑上安装恶意的软件，针对这一问题，浏览器对不同进程限制了不同的权限，并为其提供沙盒运行环境，使其更安全更可靠。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("第三，更高的响应速度")]),t._v("。在单进程的架构中，各个任务相互竞争抢夺CPU资源，使得浏览器响应速度变慢，而多进程架构正好规避了这一缺点。")])])]),t._v(" "),s("h3",{attrs:{id:"多进程架构优化"}},[t._v("多进程架构优化")]),t._v(" "),s("p",[t._v("之前的我们说到，"),s("code",[t._v("Renderer Process")]),t._v("的作用是负责一个Tab内的显示相关的工作，这就意味着，一个Tab，就会有一个Renderer Process，这些进程之间的内存无法进行共享，而不同进程的内存常常需要包含相同的内容。")]),t._v(" "),s("h3",{attrs:{id:"浏览器的进程模式"}},[t._v("浏览器的进程模式")]),t._v(" "),s("p",[t._v("为了节省内存，Chrome提供了四种进程模式（Process Models），不同的进程模式会对 tab 进程做不同的处理。")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("Process-per-site-instance (default)")]),t._v(" - 同一个 "),s("code",[t._v("site-instance")]),t._v(" 使用一个进程")]),t._v(" "),s("li",[s("code",[t._v("Process-per-site")]),t._v(" - 同一个 site 使用一个进程")]),t._v(" "),s("li",[s("code",[t._v("Process-per-tab")]),t._v(" - 每个 tab 使用一个进程")]),t._v(" "),s("li",[s("code",[t._v("Single process")]),t._v(" - 所有 tab 共用一个进程")])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("site")]),t._v(" 指的是相同的 registered domain name(如：google.com ，bbc.co.uk)和scheme (如：https://)。比如a.baidu.com和b.baidu.com就可以理解为同一个 site（注意这里要和 Same-origin policy 区分开来，同源策略还涉及到子域名和端口）。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("site-instance")]),t._v(" 指的是一组 "),s("strong",[t._v("connected pages from the same site")]),t._v("，这里 connected 的定义是 can obtain references to each other in script code 怎么理解这段话呢。满足下面两中情况并且打开的新页面和旧页面属于上面定义的同一个 site，就属于同一个 site-instance.")]),t._v(" "),s("ul",[s("li",[t._v("用户通过"),s("code",[t._v('<a target="_blank">')]),t._v("这种方式点击打开的新页面")]),t._v(" "),s("li",[t._v("JS代码打开的新页面（比如 window.open)")])])])])]),t._v(" "),s("p",[s("strong",[t._v("理解了概念之后，下面解释四个进程模式")]),t._v(":")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("首先是"),s("code",[t._v("Single process")]),t._v("，顾名思义，单进程模式，所有tab都会使用同一个进程。接下来是"),s("code",[t._v("Process-per-tab")]),t._v(" ，也是顾名思义，每打开一个tab，会新建一个进程。而对于"),s("code",[t._v("Process-per-site")]),t._v("，当你打开 a.baidu.com 页面，在打开 b.baidu.com 的页面，这两个页面的tab使用的是共一个进程，因为这两个页面的site相同，而如此一来，如果其中一个tab崩溃了，而另一个tab也会崩溃。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Process-per-site-instance")]),t._v(" 是最重要的，因为这个是 Chrome 默认使用的模式，也就是几乎所有的用户都在用的模式。当你打开一个 tab 访问 a.baidu.com ，然后再打开一个 tab 访问 b.baidu.com，这两个 tab 会使用两个进程。而如果你在 a.baidu.com 中，通过JS代码打开了 b.baidu.com 页面，这两个 tab 会使用同一个进程。")])])]),t._v(" "),s("h3",{attrs:{id:"默认模式选择"}},[t._v("默认模式选择")]),t._v(" "),s("p",[s("strong",[t._v("那么为什么浏览器使用"),s("code",[t._v("Process-per-site-instance")]),t._v("作为默认的进程模式呢？")])]),t._v(" "),s("p",[s("code",[t._v("Process-per-site-instance")]),t._v("兼容了性能与易用性，是一个比较中庸通用的模式。")]),t._v(" "),s("ul",[s("li",[t._v("相较于 Process-per-tab，能够少开很多进程，就意味着更少的内存占用")]),t._v(" "),s("li",[t._v("相较于 Process-per-site，能够更好的隔离相同域名下毫无关联的 tab，更加安全")])]),t._v(" "),s("h3",{attrs:{id:"导航过程都发生了什么"}},[t._v("导航过程都发生了什么")]),t._v(" "),s("p",[t._v("前面我们讲了浏览器的多进程架构，讲了多进程架构的各种好处，和Chrome是怎么优化多进程架构的，下面从用户浏览网页这一简单的场景，来深入了解进程和线程是如何呈现我们的网站页面的。")]),t._v(" "),s("h3",{attrs:{id:"网页加载过程"}},[t._v("网页加载过程")]),t._v(" "),s("p",[t._v("上面我们提到，tab以外的大部分工作由浏览器进程"),s("code",[t._v("Browser Process")]),t._v("负责，针对工作的不同，Browser Process 划分出不同的工作线程：")]),t._v(" "),s("ul",[s("li",[t._v("UI thread：控制浏览器上的按钮及输入框；")]),t._v(" "),s("li",[t._v("network thread：处理网络请求，从网上获取数据；")]),t._v(" "),s("li",[t._v("storage thread：控制文件等的访问")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210220154349628.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3hqbDI3MTMxNA==,size_16,color_FFFFFF,t_70",alt:"在这里插入图片描述"}})]),t._v(" "),s("h4",{attrs:{id:"第一步：处理输入"}},[t._v("第一步：处理输入")]),t._v(" "),s("p",[t._v("当我们在浏览器的地址栏输入内容按下回车时，UI thread会判断输入的内容是搜索关键词（search query）还是URL，如果是搜索关键词，跳转至默认搜索引擎对应都搜索URL，如果输入的内容是URL，则开始请求URL。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210220154445862.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3hqbDI3MTMxNA==,size_16,color_FFFFFF,t_70",alt:"处理输入"}})]),t._v(" "),s("h4",{attrs:{id:"第二步：开始导航"}},[t._v("第二步：开始导航")]),t._v(" "),s("p",[t._v("回车按下后，"),s("code",[t._v("UI thread")]),t._v("将关键词搜索对应的URL或输入的URL交给网络线程"),s("code",[t._v("Network thread")]),t._v("，此时UI线程使Tab前的图标展示为加载中状态，然后网络进程进行一系列诸如DNS寻址，建立TLS连接等操作进行资源请求，如果收到服务器的301重定向响应，它就会告知UI线程进行重定向然后它会再次发起一个新的网络请求。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210220154554845.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3hqbDI3MTMxNA==,size_16,color_FFFFFF,t_70",alt:"开始导航"}})]),t._v(" "),s("h4",{attrs:{id:"第三步：读取响应"}},[t._v("第三步：读取响应")]),t._v(" "),s("p",[s("code",[t._v("network thread")]),t._v("接收到服务器的响应后，开始解析HTTP响应报文，然后根据响应头中的"),s("code",[t._v("Content-Type")]),t._v("字段来确定响应主体的媒体类型（MIME Type），如果媒体类型是一个HTML文件，则将响应数据交给渲染进程（renderer process）来进行下一步的工作，如果是 zip 文件或者其它文件，会把相关数据传输给下载管理器。")]),t._v(" "),s("p",[t._v("与此同时，浏览器会进行 Safe Browsing 安全检查，如果域名或者请求内容匹配到已知的恶意站点，network thread 会展示一个警告页。除此之外，网络线程还会做 CORB（Cross Origin Read Blocking）检查来确定那些敏感的跨站数据不会被发送至渲染进程。")]),t._v(" "),s("h4",{attrs:{id:"第四步：查找渲染进程"}},[t._v("第四步：查找渲染进程")]),t._v(" "),s("p",[t._v("各种检查完毕以后，network thread 确信浏览器可以导航到请求网页，network thread 会通知 UI thread 数据已经准备好，UI thread 会查找到一个 renderer process 进行网页的渲染。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210220154928579.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3hqbDI3MTMxNA==,size_16,color_FFFFFF,t_70",alt:"查找渲染进程"}})]),t._v(" "),s("p",[t._v("浏览器为了对查找渲染进程这一步骤进行优化，考虑到网络请求获取响应需要时间，所以在第二步开始，浏览器已经预先查找和启动了一个渲染进程，如果中间步骤一切顺利，当 network thread 接收到数据时，渲染进程已经准备好了，但是如果遇到重定向，这个准备好的渲染进程也许就不可用了，这个时候会重新启动一个渲染进程。")]),t._v(" "),s("h4",{attrs:{id:"第五步：提交导航"}},[t._v("第五步：提交导航")]),t._v(" "),s("p",[t._v("到了这一步，数据和渲染进程都准备好了，"),s("code",[t._v("Browser Process")]),t._v(" 会向 "),s("code",[t._v("Renderer Process")]),t._v(" 发送IPC消息来确认导航，此时，浏览器进程将准备好的数据发送给渲染进程，渲染进程接收到数据之后，又发送IPC消息给浏览器进程，告诉浏览器进程导航已经提交了，页面开始加载。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210220155437671.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3hqbDI3MTMxNA==,size_16,color_FFFFFF,t_70",alt:"提交导航"}})]),t._v(" "),s("p",[t._v("这个时候导航栏会更新，安全指示符更新（地址前面的小锁），访问历史列表（history tab）更新，即可以通过前进后退来切换该页面。")]),t._v(" "),s("h4",{attrs:{id:"第六步：初始化加载完成"}},[t._v("第六步：初始化加载完成")]),t._v(" "),s("p",[t._v("当导航提交完成后，渲染进程开始加载资源及渲染页面（详细内容下文介绍），当页面渲染完成后（页面及内部的iframe都触发了onload事件），会向浏览器进程发送IPC消息，告知浏览器进程，这个时候UI thread会停止展示tab中的加载中图标。")]),t._v(" "),s("h3",{attrs:{id:"网页渲染原理"}},[t._v("网页渲染原理")]),t._v(" "),s("p",[t._v("导航过程完成之后，浏览器进程把数据交给了渲染进程，渲染进程负责tab内的所有事情，核心目的就是将HTML/CSS/JS代码，转化为用户可进行交互的web页面。那么渲染进程是如何工作的呢？")]),t._v(" "),s("p",[s("strong",[t._v("渲染进程中，包含线程分别是")]),t._v("：")]),t._v(" "),s("ul",[s("li",[t._v("一个主线程（main thread）")]),t._v(" "),s("li",[t._v("多个工作线程（work thread）")]),t._v(" "),s("li",[t._v("一个合成器线程（compositor thread）")]),t._v(" "),s("li",[t._v("多个光栅化线程（raster thread）")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210220155645253.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3hqbDI3MTMxNA==,size_16,color_FFFFFF,t_70",alt:"渲染进程线程"}})]),t._v(" "),s("p",[t._v("不同的线程，有着不同的工作职责。")]),t._v(" "),s("h3",{attrs:{id:"构建dom"}},[t._v("构建DOM")]),t._v(" "),s("p",[t._v("当渲染进程接受到导航的确认信息后，开始接受来自浏览器进程的数据，这个时候，主线程会解析数据转化为DOM（Document Object Model）对象。")]),t._v(" "),s("p",[s("strong",[t._v("DOM为Web开发人员通过JavaScript与网页进行交互的数据结构及API")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"资源子加载"}},[t._v("资源子加载")]),t._v(" "),s("p",[t._v("在构建DOM的过程中，会解析到图片、CSS、JavaScript脚本等资源，这些资源是需要从网络或者缓存中获取的，主线程在构建DOM过程中如果遇到了这些资源，逐一发起请求去获取，而为了提升效率，浏览器也会运行预加载扫描（preload scanner）程序，如果如果HTML中存在img、link等标签，预加载扫描程序会把这些请求传递给"),s("code",[t._v("Browser Process")]),t._v("的network thread进行资源下载。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210220155906139.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3hqbDI3MTMxNA==,size_16,color_FFFFFF,t_70",alt:"资源加载"}})]),t._v(" "),s("h3",{attrs:{id:"javascript的下载与执行"}},[t._v("JavaScript的下载与执行")]),t._v(" "),s("p",[t._v("构建DOM过程中，如果遇到"),s("code",[t._v("<script>")]),t._v("标签，渲染引擎会停止对HTML的解析，而去加载执行JS代码，原因在于JS代码可能会改变DOM的结构（比如执行"),s("code",[t._v("document.write()")]),t._v("等API）。")]),t._v(" "),s("p",[t._v("不过开发者其实也有多种方式来告知浏览器应对如何应对某个资源，比如说如果在"),s("code",[t._v("<script>")]),t._v("标签上添加了 "),s("code",[t._v("async")]),t._v(" 或 "),s("code",[t._v("defer")]),t._v("等属性，浏览器会异步的加载和执行JS代码，而不会阻塞渲染。")]),t._v(" "),s("h3",{attrs:{id:"样式计算-style-calculation"}},[t._v("样式计算 - Style calculation")]),t._v(" "),s("p",[t._v("DOM树只是我们页面的结构，我们要知道页面长什么样子，我们还需要知道DOM的每一个节点的样式。主线程在解析页面时，遇到"),s("code",[t._v("<style>")]),t._v("标签或者"),s("code",[t._v("<link>")]),t._v("标签的CSS资源，会加载CSS代码，根据CSS代码确定每个DOM节点的计算样式（computed style）。")]),t._v(" "),s("p",[t._v("计算样式是主线程根据CSS样式选择器（CSS selectors）计算出的每个DOM元素应该具备的具体样式，即使你的页面没有设置任何自定义的样式，浏览器也会提供其默认的样式。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210220160131114.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3hqbDI3MTMxNA==,size_16,color_FFFFFF,t_70",alt:"Style calculation"}})]),t._v(" "),s("h3",{attrs:{id:"布局-layout"}},[t._v("布局 - Layout")]),t._v(" "),s("p",[t._v("DOM树和计算样式完成后，我们还需要知道每一个节点在页面上的位置，布局（Layout）其实就是找到所有元素的几何关系的过程。")]),t._v(" "),s("p",[t._v("主线程会遍历DOM 及相关元素的计算样式，构建出包含每个元素的页面坐标信息及盒子模型大小的布局树（Render Tree），遍历过程中，会跳过隐藏的元素（display: none），另外，伪元素虽然在DOM上不可见，但是在布局树上是可见的。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210220160248599.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3hqbDI3MTMxNA==,size_16,color_FFFFFF,t_70",alt:"Layout"}})]),t._v(" "),s("h3",{attrs:{id:"绘制-paint"}},[t._v("绘制 - Paint")]),t._v(" "),s("p",[t._v("布局 layout 之后，我们知道了不同元素的结构，样式，几何关系，我们要绘制出一个页面，我们要需要知道每个元素的绘制先后顺序，在绘制阶段，主线程会遍历布局树（layout tree），生成一系列的绘画记录（paint records）。绘画记录可以看做是记录各元素绘制先后顺序的笔记。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210220160354879.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3hqbDI3MTMxNA==,size_16,color_FFFFFF,t_70",alt:"Paint"}})]),t._v(" "),s("h3",{attrs:{id:"合成-compositing"}},[t._v("合成 - Compositing")]),t._v(" "),s("p",[t._v("文档结构、元素的样式、元素的几何关系、绘画顺序，这些信息我们都有了，这个时候如果要绘制一个页面，我们需要做的是把这些信息转化为显示器中的像素，这个转化的过程，叫做"),s("code",[t._v("光栅化（rasterizing）")]),t._v("。")]),t._v(" "),s("p",[t._v("那我们要绘制一个页面，最简单的做法是只光栅化视口内（viewport）的网页内容，如果用户进行了页面滚动，就移动光栅帧（rastered frame）并且光栅化更多的内容以补上页面缺失的部分，如下：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210220160620984.gif",alt:"Compositing"}})]),t._v(" "),s("p",[t._v("Chrome第一个版本就是采用这种简单的绘制方式，这一方式唯一的缺点就是每当页面滚动，光栅线程都需要对新移进视图的内容进行光栅化，这是一定的性能损耗，为了优化这种情况，Chrome采取一种更加复杂的叫做合成（compositing）的做法。")]),t._v(" "),s("p",[t._v("那么，什么是合成？"),s("strong",[t._v("合成")]),t._v("是一种将页面分成若干层，然后分别对它们进行光栅化，最后在一个单独的线程 - 合成线程（compositor thread）里面合并成一个页面的技术。当用户滚动页面时，由于页面各个层都已经被光栅化了，浏览器需要做的只是合成一个新的帧来展示滚动后的效果罢了。页面的动画效果实现也是类似，将页面上的层进行移动并构建出一个新的帧即可。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210220161152479.gif",alt:"合成"}})]),t._v(" "),s("p",[t._v("为了实现合成技术，我们需要对元素进行分层，确定哪些元素需要放置在哪一层，主线程需要遍历渲染树来创建一棵层次树（Layer Tree），对于添加了 "),s("code",[t._v("will-change")]),t._v(" CSS 属性的元素，会被看做单独的一层，没有 "),s("code",[t._v("will-change")]),t._v(" CSS属性的元素，浏览器会根据情况决定是否要把该元素放在单独的层。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/2021022016140757.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3hqbDI3MTMxNA==,size_16,color_FFFFFF,t_70",alt:"will-change"}})]),t._v(" "),s("p",[t._v("你可能会想要给页面上所有的元素一个单独的层，然而当页面的层超过一定的数量后，层的合成操作要比在每个帧中光栅化页面的一小部分还要慢，因此衡量你应用的渲染性能是十分重要的一件事情。")]),t._v(" "),s("p",[t._v("一旦Layer Tress被创建，渲染顺序被确定，主线程会把这些信息通知给合成器线程，合成器线程开始对层次数的每一层进行光栅化。有的层的可以达到整个页面的大小，所以合成线程需要将它们切分为一块又一块的小图块（tiles），之后将这些小图块分别进行发送给一系列光栅线程（raster threads）进行光栅化，结束后光栅线程会将每个图块的光栅结果存在"),s("code",[t._v("GPU Process")]),t._v("的内存中。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210220161510873.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3hqbDI3MTMxNA==,size_16,color_FFFFFF,t_70",alt:"合成线程"}})]),t._v(" "),s("p",[t._v("为了优化显示体验，合成线程可以给不同的光栅线程赋予不同的优先级，将那些在视口中的或者视口附近的层先被光栅化。")]),t._v(" "),s("p",[t._v("当图层上面的图块都被栅格化后，合成线程会收集图块上面叫做"),s("code",[t._v("绘画四边形（draw quads）")]),t._v("的信息来构建一个"),s("code",[t._v("合成帧（compositor frame）")]),t._v("。")]),t._v(" "),s("ul",[s("li",[t._v("绘画四边形：包含图块在内存的位置以及图层合成后图块在页面的位置之类的信息。")]),t._v(" "),s("li",[t._v("合成帧：代表页面一个帧的内容的绘制四边形集合。")])]),t._v(" "),s("p",[t._v("以上所有步骤完成后，合成线程就会通过IPC向浏览器进程（browser process）提交（commit）一个渲染帧。这个时候可能有另外一个合成帧被浏览器进程的UI线程（UI thread）提交以改变浏览器的UI。这些合成帧都会被发送给GPU从而展示在屏幕上。如果合成线程收到页面滚动的事件，合成线程会构建另外一个合成帧发送给GPU来更新页面。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210220161636121.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3hqbDI3MTMxNA==,size_16,color_FFFFFF,t_70",alt:"IPC渲染通信"}})]),t._v(" "),s("p",[t._v("合成的好处在于这个过程没有涉及到主线程，所以合成线程不需要等待样式的计算以及JavaScript完成执行。这就是为什么合成器相关的动画最流畅，如果某个动画涉及到布局或者绘制的调整，就会涉及到主线程的重新计算，自然会慢很多。")]),t._v(" "),s("h3",{attrs:{id:"浏览器对事件的处理"}},[t._v("浏览器对事件的处理")]),t._v(" "),s("p",[t._v("当页面渲染完毕以后，TAB内已经显示出了可交互的WEB页面，用户可以进行移动鼠标、点击页面等操作了，而当这些事件发生时候，浏览器是如何处理这些事件的呢？")]),t._v(" "),s("p",[t._v("以点击事件（click event）为例，让鼠标点击页面时候，首先接受到事件信息的是"),s("code",[t._v("Browser Process")]),t._v("，但是"),s("code",[t._v("Browser Process")]),t._v("只知道事件发生的类型和发生的位置，具体怎么对这个点击事件进行处理，还是由Tab内的"),s("code",[t._v("Renderer Process")]),t._v("进行的。Browser Process接受到事件后，随后便把事件的信息传递给了渲染进程，渲染进程会找到根据事件发生的坐标，找到目标对象（target），并且运行这个目标对象的点击事件绑定的监听函数（listener）。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210220161856473.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3hqbDI3MTMxNA==,size_16,color_FFFFFF,t_70",alt:"事件处理"}})]),t._v(" "),s("h3",{attrs:{id:"渲染进程中合成器线程接收事件"}},[t._v("渲染进程中合成器线程接收事件")]),t._v(" "),s("p",[t._v("前面我们说到，合成器线程可以独立于主线程之外通过已光栅化的层创建组合帧，例如页面滚动，如果没有对页面滚动绑定相关的事件，组合器线程可以独立于主线程创建组合帧，如果页面绑定了页面滚动事件，合成器线程会等待主线程进行事件处理后才会创建组合帧。那么，合成器线程是如何判断出这个事件是否需要路由给主线程处理的呢？")]),t._v(" "),s("p",[t._v("由于执行 JS 是主线程的工作，当页面合成时，合成器线程会标记页面中绑定有事件处理器的区域为"),s("code",[t._v("非快速滚动区域(non-fast scrollable region)")]),t._v("，如果事件发生在这些存在标注的区域，合成器线程会把事件信息发送给主线程，等待主线程进行事件处理，如果事件不是发生在这些区域，合成器线程则会直接合成新的帧而不用等到主线程的响应。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210220162022137.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3hqbDI3MTMxNA==,size_16,color_FFFFFF,t_70",alt:"渲染进程中合成器线程接收事件"}})]),t._v(" "),s("p",[t._v("而对于非快速滚动区域的标记，开发者需要注意全局事件的绑定，比如我们使用事件委托，将目标元素的事件交给根元素body进行处理，代码如下：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'touchstart'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("event")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("event"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("target "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" area"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    event"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("preventDefault")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("在开发者角度看，这一段代码没什么问题，但是从浏览器角度看，这一段代码给body元素绑定了事件监听器，也就意味着整个页面都被编辑为一个非快速滚动区域，这会使得即使你的页面的某些区域没有绑定任何事件，每次用户触发事件时，合成器线程也需要和主线程通信并等待反馈，流畅的合成器独立处理合成帧的模式就失效了。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210220162125475.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3hqbDI3MTMxNA==,size_16,color_FFFFFF,t_70",alt:"在这里插入图片描述"}})]),t._v(" "),s("p",[t._v("其实这种情况也很好处理，只需要在事件监听时传递"),s("code",[t._v("passtive")]),t._v("参数为 true，"),s("code",[t._v("passtive")]),t._v("会告诉浏览器你既要绑定事件，又要让组合器线程直接跳过主线程的事件处理直接合成创建组合帧。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'touchstart'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("event")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("event"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("target "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" area"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        event"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("preventDefault")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("passive"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"查找事件的目标对象（event-target）"}},[t._v("查找事件的目标对象（event target）")]),t._v(" "),s("p",[t._v("当合成器线程接收到事件信息，判定到事件发生不在非快速滚动区域后，合成器线程会向主线程发送这个时间信息，主线程获取到事件信息的第一件事就是通过命中测试（hit test）去找到事件的目标对象。具体的命中测试流程是遍历在绘制阶段生成的绘画记录（paint records）来找到包含了事件发生坐标上的元素对象。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/2021022016230866.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3hqbDI3MTMxNA==,size_16,color_FFFFFF,t_70",alt:"在这里插入图片描述"}})]),t._v(" "),s("h3",{attrs:{id:"浏览器对事件的优化"}},[t._v("浏览器对事件的优化")]),t._v(" "),s("p",[t._v("一般我们屏幕的帧率是每秒60帧，也就是60fps，但是某些事件触发的频率超过了这个数值，比如wheel，mousewheel，mousemove，pointermove，touchmove，这些连续性的事件一般每秒会触发60~120次，假如每一次触发事件都将事件发送到主线程处理，由于屏幕的刷新速率相对来说较低，这样使得主线程会触发过量的命中测试以及JS代码，使得性能有了没必要是损耗。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210220162359479.png",alt:"在这里插入图片描述"}})]),t._v(" "),s("p",[t._v("出于优化的目的，浏览器会合并这些连续的事件，延迟到下一帧渲染是执行，也就是"),s("code",[t._v("requestAnimationFrame")]),t._v("之前。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210220162437417.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3hqbDI3MTMxNA==,size_16,color_FFFFFF,t_70",alt:"在这里插入图片描述"}})]),t._v(" "),s("p",[t._v("而对于非连续性的事件，如keydown，keyup，mousedown，mouseup，touchstart，touchend等，会直接派发给主线程去执行。")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[s("strong",[t._v("总结:")])]),t._v(" "),s("p",[t._v("浏览器的多进程架构，根据不同的功能划分了不同的进程，进程内不同的使命划分了不同的线程。")]),t._v(" "),s("p",[t._v("用户开始浏览网页时候，浏览器进程进行处理输入、开始导航请求数据、请求响应数据，查找新建渲染进程，提交导航，之后渲染又进行了解析HTML构建DOM、构建过程加载子资源、下载并执行JS代码、样式计算、布局、绘制、合成，一步一步的构建出一个可交互的WEB页面。")]),t._v(" "),s("p",[t._v("之后浏览器进程又接受页面的交互事件信息，并将其交给渲染进程，渲染进程内主进程进行命中测试，查找目标元素并执行绑定的事件，完成页面的交互。")])]),t._v(" "),s("h2",{attrs:{id:"理解域名中的cname"}},[t._v("理解域名中的CNAME")]),t._v(" "),s("ul",[s("li",[t._v("2020.06.04")])]),t._v(" "),s("h3",{attrs:{id:"简介"}},[t._v("简介")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("CNAME")]),t._v(" 即指"),s("code",[t._v("别名记录")]),t._v("，也被称为"),s("code",[t._v("规范名字")]),t._v("。这种记录允你将多个名字映射到同一台计算机。")])]),t._v(" "),s("p",[s("strong",[t._v("什么情况下会用到 CNAME 记录？")])]),t._v(" "),s("p",[t._v("如果需要将域名指向另一个域名，再由另一个域名提供 ip地址，就需要添加 "),s("code",[t._v("CNAME记录")]),t._v("。最常用到CNAME的情况包括：做 CDN ，做企业邮局。")]),t._v(" "),s("h3",{attrs:{id:"cname-配置"}},[t._v("CNAME 配置")]),t._v(" "),s("p",[t._v("这里已七牛云的配置为示例.如果需要对七牛存储空间的自定义域名（自定义域名建议使用二级域名）进行 CNAME 配置。")]),t._v(" "),s("h4",{attrs:{id:"获取cname值"}},[t._v("获取CNAME值")]),t._v(" "),s("p",[t._v("在 "),s("code",[t._v("七牛开发者平台")]),t._v(" 页面选择 "),s("code",[t._v("CDN")]),t._v(" ，选择 "),s("code",[t._v("域名管理")]),t._v("，鼠标停留在域名对应CNAME值上即可点击复制 ，如下图所示。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://dn-odum9helk.qbox.me/FkqzaHLz8IkzamxYtONzj--5TscU",alt:"七牛云图片示例"}})]),t._v(" "),s("h4",{attrs:{id:"添加cname记录"}},[t._v("添加CNAME记录")]),t._v(" "),s("p",[t._v("添加CNAME记录需要在您的域名厂商处配置，比如您在 阿里云 / 腾讯云 / 新网 等处购买的域名，您需要前往购买域名的厂商相应管理控制台，添加域名解析。")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("打开您购买域名的厂商官网，登陆后在页面右上角找到 控制台 或 相关管理后台入口。")])]),t._v(" "),s("li",[s("p",[t._v("在域名厂商的控制台中，找到您的域名解析添加页面，例如：")]),t._v(" "),s("ul",[s("li",[t._v("a. 阿里云：在控制台页面的左侧，产品与服务栏中选择 域名。")]),t._v(" "),s("li",[t._v("b. 腾讯云：在控制台的云产品中，搜索并选择 云解析。")]),t._v(" "),s("li",[t._v("c. DNSPOD：在控制台页面左侧，选择 域名。")])])]),t._v(" "),s("li",[s("p",[t._v("在域名产品的列表中找到您加速域名对应的主域名，点击域名后面的 解析设置 或 解析，进入解析设置页。")])]),t._v(" "),s("li",[s("p",[t._v("选择 "),s("code",[t._v("添加记录")]),t._v(" ，依次填写 "),s("code",[t._v("主机记录")]),t._v("，"),s("code",[t._v("记录类型")]),t._v(" 以及 "),s("code",[t._v("记录值")]),t._v("，其他可设为默认值。")])])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://dn-odum9helk.qbox.me/Fn5LvRsKMEUgBQM4PvvAccI-ISyO",alt:"七牛云图片示例"}})]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("参数")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("填写说明")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("注意事项")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("主机记录")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("填写加速域名对应的主机前缀")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("该参数唯一，请勿自定义")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("记录类型")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("选择 CNAME 类型")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("该参数唯一，请勿自定义")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("线路类型")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("保持默认")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("该参数可以根据需求自行调整")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("记录值")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("域名创建后，七牛提供的 CNAME")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("该参数唯一，请勿自定义")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("TTL")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("保持默认")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("该参数可以根据需求自行调整")])])])]),t._v(" "),s("h4",{attrs:{id:"如何处理-cname-记录和-a-记录冲突？"}},[t._v("如何处理 CNAME 记录和 A 记录冲突？")]),t._v(" "),s("p",[t._v("同一个域名只能使用 A 记录解析，或者使用 CNAME 解析，如果您在添加域名的 CNAME 解析时提示存在冲突，请检查该主机记录是否已经存在 A 记录。")]),t._v(" "),s("p",[t._v("解决方案：")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("如果您的域名用于绑定七牛云存储")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("重新添加一个未在其他地方使用的二级加速域名，例如您原本在七牛绑定的是 "),s("code",[t._v("qiniu.com")]),t._v(" 或 "),s("code",[t._v("www.qiniu.com")]),t._v(" ，建议您重新在空间绑定加速域名例如 "),s("code",[t._v("cdn.qiniu.com")]),t._v(" 或者 "),s("code",[t._v("xxx.qiniu.com")]),t._v(" ，然后针对新添加的加速域名，配置对应的解析即可。")])]),t._v(" "),s("li",[s("p",[t._v("删除您原有的 A 记录就可做 CNAME 解析\n(注：A 记录删除会导致您的域名无法访问该域名的原有资源，谨慎操作)")])])])]),t._v(" "),s("li",[s("p",[t._v("如果您的域名用于加速您的源站服务器站点")]),t._v(" "),s("ul",[s("li",[t._v("在确认 CDN 配置无误情况下，可以删除A记录。")]),t._v(" "),s("li",[t._v("通过配置 CNAME 解析，使得域名能够绑定到七牛的加速线路上。")])])])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("修改 CNAME 配置生效时间：新增 CNAME 记录会实时生效，而修改 CNAME 记录需要等待生效时间 TTL。")])]),t._v(" "),s("h4",{attrs:{id:"如何判断-cname-是否正确配置？"}},[t._v("如何判断 CNAME 是否正确配置？")]),t._v(" "),s("p",[t._v("先在CDN 的 域名管理 中检查域名是否创建成功，如果已经创建成功，且已经按照步骤添加了 CNAME 解析，但是无法正常访问资源外链，或保持“等待 CNAME ”状态，可以通过以下方法检测本地的域名解析，如果域名长时间没有创建成功，您可以提交工单处理。")]),t._v(" "),s("h2",{attrs:{id:"在https站点中使用websocket"}},[t._v("在HTTPS站点中使用websocket")]),t._v(" "),s("ul",[s("li",[t._v("2020.08.10")])]),t._v(" "),s("blockquote",[s("p",[t._v("在http中使用websocket需要配置对应的端口,在https中使用略有不同。")])]),t._v(" "),s("ol",[s("li",[s("p",[t._v("如果网站使用"),s("code",[t._v("HTTPS")]),t._v("，"),s("code",[t._v("WebSocket")]),t._v("必须要使用"),s("code",[t._v("wss")]),t._v("协议；")])]),t._v(" "),s("li",[s("p",[t._v("使用"),s("code",[t._v("wss")]),t._v("协议的连接请求必须只能写域名，而非IP+端口；")])]),t._v(" "),s("li",[s("p",[t._v("建议在"),s("code",[t._v("URL")]),t._v("域名后面为"),s("code",[t._v("websocket")]),t._v("定义一个路径，本例中是"),s("code",[t._v("/wss/")]),t._v("；")])])]),t._v(" "),s("h3",{attrs:{id:"前端代码"}},[t._v("前端代码")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" socket "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("WebSocket")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"wss://www.xxx.cn/wss/"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"nginx配置"}},[t._v("Nginx配置")]),t._v(" "),s("div",{staticClass:"language-nginx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nginx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 前提是要配置好HTTPS,然后只需要在HTTPS配置的server内加一个location即可")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# websockets")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("wss"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_pass")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("http")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("xxx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("xx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("xx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("xx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9999")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("            \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_http_version")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_set_header")]),t._v(" Upgrade "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$http_upgrade")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_set_header")]),t._v(" Connection "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Upgrade"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_set_header")]),t._v(" X"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Forwarded"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("For "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$proxy_add_x_forwarded_for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_set_header")]),t._v(" X"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Real"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("IP "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$remote_addr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("ol",[s("li",[s("p",[s("code",[t._v("location /wss/")]),t._v(" {...}这里要格外注意！")]),t._v(" "),s("ul",[s("li",[t._v("html中的url是 "),s("code",[t._v("wss://www.xxx.cn/wss/")]),t._v("，所以"),s("code",[t._v("Nginx")]),t._v("配置中一定要是 "),s("code",[t._v("/wss/")])])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("proxy_pass")]),t._v("对应的最好是公网IP加端口号，我试过 "),s("code",[t._v("localhost")]),t._v("，"),s("code",[t._v("127.0.0.1")]),t._v("，域名都会失败")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("proxy_http_version")]),t._v(" 1.1 版本号必须是1.1，这条配置必需")])])])])])}),[],!1,null,null,null);_.default=e.exports}}]);