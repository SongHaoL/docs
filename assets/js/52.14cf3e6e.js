(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{673:function(t,o,e){"use strict";e.r(o);var v=e(15),_=Object(v.a)({},(function(){var t=this,o=t.$createElement,e=t._self._c||o;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"布局技巧"}},[t._v("布局技巧")]),t._v(" "),e("h2",{attrs:{id:"css-多列等高如何实现？"}},[t._v("CSS 多列等高如何实现？")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("利用"),e("code",[t._v("padding-bottom|margin-bottom")]),t._v("正负值相抵，不会影响页面布局的特点。父容器设置超出隐藏（overflow:\nhidden），这样父容器的高度就还是它里面的列没有设定"),e("code",[t._v("padding-bottom")]),t._v("时的高度，当它里面的任一列高度增加了，则\n父容器的高度被撑到里面最高那列的高度，其他比这列矮的列会用它们的padding-bottom补偿这部分高度差。")])]),t._v(" "),e("li",[e("p",[t._v("利用"),e("code",[t._v("table-cell")]),t._v("所有单元格高度都相等的特性，来实现多列等高。")])]),t._v(" "),e("li",[e("p",[t._v("利用"),e("code",[t._v("flex布局")]),t._v("中项目"),e("code",[t._v("align-items")]),t._v("属性默认为"),e("code",[t._v("stretch")]),t._v("，如果项目未设置高度或设为"),e("code",[t._v("auto")]),t._v("，将占满整个容器的高度\n的特性，来实现多列等高。")])])]),t._v(" "),e("h2",{attrs:{id:"width-auto-和-width-100-的区别？"}},[e("code",[t._v("width:auto")]),t._v(" 和 "),e("code",[t._v("width:100%")]),t._v("的区别？")]),t._v(" "),e("ul",[e("li",[e("p",[e("code",[t._v("width:100%")]),t._v("会使元素box的宽度等于父元素的contentbox的宽度。")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("width:auto")]),t._v("会使元素撑满整个父元素，margin、border、padding、content区域会自动分配水平空间。")])])])])}),[],!1,null,null,null);o.default=_.exports}}]);